{
  "filename": "filter.md",
  "__html": "<h1>Filter Extension</h1>\n<h2>Summary</h2>\n<p>Extension for intercepting the invocation for both service provider and consumer, furthermore, most of functions in dubbo are implemented base on the same mechanism. Since every time when remote method is invoked, the filter extensions will be executed too, the corresponding penalty should be considered before more filters are added.</p>\n<p>Contract:</p>\n<ul>\n<li>User defined filters are executed after built-in filters by default.</li>\n<li>Special value <code>default</code> is introduced to represent the default extension location. For example: for <code>filter=&quot;xxx,default,yyy&quot;</code>, <code>xxx</code> is before default filter, and <code>yyy</code> is after the default filter.</li>\n<li>Special value <code>-</code> means delete. For example: <code>filter=&quot;-foo1&quot;</code> excludes <code>foo1</code> extension. For example, <code>filter=&quot;-default&quot;</code> exclues all default filters.</li>\n<li>When provider and service have filter configured at the same moment, all filters are accumulated together instead of override, for example: for <code>&lt;dubbo:provider filter=&quot;xxx,yyy&quot;/&gt;</code> and <code>&lt;dubbo:service filter=&quot;aaa,bbb&quot; /&gt;</code>，<code>xxx</code>, <code>yyy</code>, <code>aaa</code>, <code>bbb</code> are all count as filters. In order to change to override, use: <code>&lt;dubbo:service filter=&quot;-xxx,-yyy,aaa,bbb&quot; /&gt;</code></li>\n</ul>\n<h2>Extension Interface</h2>\n<p><code>org.apache.dubbo.rpc.Filter</code></p>\n<h2>Extension Configuration</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!-- filter for consumer --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">filter</span>=<span class=\"hljs-string\">\"xxx,yyy\"</span> /&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- default filter configuration for the consumer, will intercept for all references --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:consumer</span> <span class=\"hljs-attr\">filter</span>=<span class=\"hljs-string\">\"xxx,yyy\"</span>/&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- filter for provider --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">filter</span>=<span class=\"hljs-string\">\"xxx,yyy\"</span> /&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- default filter configuration for the provider, will intercept for all services --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:provider</span> <span class=\"hljs-attr\">filter</span>=<span class=\"hljs-string\">\"xxx,yyy\"</span>/&gt;</span>\n</code></pre>\n<h2>Existing Extension</h2>\n<ul>\n<li><code>org.apache.dubbo.rpc.filter.EchoFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.GenericFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.GenericImplFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.TokenFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.AccessLogFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.CountFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ActiveLimitFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ClassLoaderFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ContextFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ConsumerContextFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ExceptionFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.ExecuteLimitFilter</code></li>\n<li><code>org.apache.dubbo.rpc.filter.DeprecatedFilter</code></li>\n</ul>\n<h2>Extension Guide</h2>\n<p>Directory layout:</p>\n<pre><code>src\n |-main\n    |-java\n        |-com\n            |-xxx\n                |-XxxFilter.java (Filter implementation)\n    |-resources\n        |-META-INF\n            |-dubbo\n                |-org.apache.dubbo.rpc.Filter (plain text file with the content: xxx=com.xxx.XxxFilter)\n</code></pre>\n<p>XxxFilter.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.xxx;\n \n<span class=\"hljs-keyword\">import</span> org.apache.dubbo.rpc.Filter;\n<span class=\"hljs-keyword\">import</span> org.apache.dubbo.rpc.Invoker;\n<span class=\"hljs-keyword\">import</span> org.apache.dubbo.rpc.Invocation;\n<span class=\"hljs-keyword\">import</span> org.apache.dubbo.rpc.Result;\n<span class=\"hljs-keyword\">import</span> org.apache.dubbo.rpc.RpcException;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">XxxFilter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Filter</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Result <span class=\"hljs-title\">invoke</span><span class=\"hljs-params\">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> <span class=\"hljs-keyword\">throws</span> RpcException </span>{\n        <span class=\"hljs-comment\">// before filter ...</span>\n        Result result = invoker.invoke(invocation);\n        <span class=\"hljs-comment\">// after filter ...</span>\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n}\n</code></pre>\n<p>META-INF/dubbo/org.apache.dubbo.rpc.Filter：</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-attr\">xxx</span>=<span class=\"hljs-string\">com.xxx.XxxFilter</span>\n</code></pre>\n",
  "link": "/en-us/docs/dev/impls/filter.html",
  "meta": {}
}