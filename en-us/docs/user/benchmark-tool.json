{
  "filename": "benchmark-tool.md",
  "__html": "<h1>Beanchmark testing tool installer</h1>\n<ul>\n<li>download： git clone <a href=\"https://github.com/apache/incubator-dubbo.git\">https://github.com/apache/incubator-dubbo.git</a></li>\n<li>compile benchmark: cd incubator-dubbo/dubbo-test/dubbo-test-benchmark; mvn clean install</li>\n<li>uncompress benchmark： incubator-dubbo/dubbo-test/dubbo-test-benchmark/target/dubbo-test-benchmark-2.6.2-SNAPSHOT.tar.gz</li>\n</ul>\n<p>Read ReadMe.txt (the contents are as follows, in the compressed package.)</p>\n<ul>\n<li>\n<p>Build a new benchmark project, such as demo.benchmark</p>\n</li>\n<li>\n<p>Import the your own interface api jar and dubbo.benchmark.jar (Unzip dubbo.benchmark.tar.gz, under the lib directory )</p>\n</li>\n<li>\n<p>Create a new class to implement AbstractClientRunnable</p>\n<ul>\n<li>Implement the constructor of the parent class</li>\n<li>Implement the invoke method and create a local interface proxy by serviceFactory，and finish your own business logic, as follows:</li>\n</ul>\n<pre><code class=\"language-java\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">invoke</span><span class=\"hljs-params\">(ServiceFactory serviceFactory)</span> </span>{\n        DemoService demoService = (DemoService) serviceFactory.get(DemoService.class);\n        <span class=\"hljs-keyword\">return</span> demoService.sendRequest(<span class=\"hljs-string\">\"hello\"</span>);\n    }\n</code></pre>\n</li>\n<li>\n<p>Make your own benchmark project into a jar package, such as demo.benchmark.jar</p>\n</li>\n<li>\n<p>Put the demo.benchmark.jar and service API jar into directory dubbo.benchmark/lib</p>\n</li>\n<li>\n<p>Configuring duubo.properties</p>\n</li>\n<li>\n<p>Run run.bat(windows) or <a href=\"http://run.sh\">run.sh</a>(linux)</p>\n</li>\n</ul>\n<p>If you want to test the different versions of Dubbo, you can replace the jar of the Dubbo.</p>\n",
  "link": "/en-us/docs/user/benchmark-tool.html",
  "meta": {}
}