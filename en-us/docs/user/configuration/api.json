{
  "filename": "api.md",
  "__html": "<h1>API Configuration</h1>\n<p>All API properties have counterparts in XML, see <a href=\"../references/xml/introduction.md\">XML References</a> for details. For example <code>ApplicationConfig.setName(&quot;xxx&quot;)</code> equals to  <code>&lt;dubbo:application name=&quot;xxx&quot; /&gt;</code> <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<h2>Provider Side</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ApplicationConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.RegistryConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ProviderConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ServiceConfig;\n<span class=\"hljs-keyword\">import</span> com.xxx.XxxService;\n<span class=\"hljs-keyword\">import</span> com.xxx.XxxServiceImpl;\n \n<span class=\"hljs-comment\">// Implementation</span>\nXxxService xxxService = <span class=\"hljs-keyword\">new</span> XxxServiceImpl();\n \n<span class=\"hljs-comment\">// Application Info</span>\nApplicationConfig application = <span class=\"hljs-keyword\">new</span> ApplicationConfig();\napplication.setName(<span class=\"hljs-string\">\"xxx\"</span>);\n \n<span class=\"hljs-comment\">// Registry Info</span>\nRegistryConfig registry = <span class=\"hljs-keyword\">new</span> RegistryConfig();\nregistry.setAddress(<span class=\"hljs-string\">\"10.20.130.230:9090\"</span>);\nregistry.setUsername(<span class=\"hljs-string\">\"aaa\"</span>);\nregistry.setPassword(<span class=\"hljs-string\">\"bbb\"</span>);\n \n<span class=\"hljs-comment\">// Protocol</span>\nProtocolConfig protocol = <span class=\"hljs-keyword\">new</span> ProtocolConfig();\nprotocol.setName(<span class=\"hljs-string\">\"dubbo\"</span>);\nprotocol.setPort(<span class=\"hljs-number\">12345</span>);\nprotocol.setThreads(<span class=\"hljs-number\">200</span>);\n \n<span class=\"hljs-comment\">// NOTES: ServiceConfig holds the serversocket instance and keeps connections to registry, please cache it for performance.</span>\n \n<span class=\"hljs-comment\">// Exporting</span>\nServiceConfig&lt;XxxService&gt; service = <span class=\"hljs-keyword\">new</span> ServiceConfig&lt;XxxService&gt;(); <span class=\"hljs-comment\">// In case of memory leak, please cache.</span>\nservice.setApplication(application);\nservice.setRegistry(registry); <span class=\"hljs-comment\">// Use setRegistries() for multi-registry case</span>\nservice.setProtocol(protocol); <span class=\"hljs-comment\">// Use setProtocols() for multi-protocol case</span>\nservice.setInterface(XxxService.class);\nservice.setRef(xxxService);\nservice.setVersion(<span class=\"hljs-string\">\"1.0.0\"</span>);\n \n<span class=\"hljs-comment\">// Local export and register</span>\nservice.export();\n</code></pre>\n<h2>Consumer Side</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ApplicationConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.RegistryConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ConsumerConfig;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.config.ReferenceConfig;\n<span class=\"hljs-keyword\">import</span> com.xxx.XxxService;\n \n<span class=\"hljs-comment\">// Application Info</span>\nApplicationConfig application = <span class=\"hljs-keyword\">new</span> ApplicationConfig();\napplication.setName(<span class=\"hljs-string\">\"yyy\"</span>);\n \n<span class=\"hljs-comment\">// Registry Info</span>\nRegistryConfig registry = <span class=\"hljs-keyword\">new</span> RegistryConfig();\nregistry.setAddress(<span class=\"hljs-string\">\"10.20.130.230:9090\"</span>);\nregistry.setUsername(<span class=\"hljs-string\">\"aaa\"</span>);\nregistry.setPassword(<span class=\"hljs-string\">\"bbb\"</span>);\n \n<span class=\"hljs-comment\">// NOTES: ReferenceConfig holds the connections to registry and providers, please cache it for performance.</span>\n \n<span class=\"hljs-comment\">// Refer remote service</span>\nReferenceConfig&lt;XxxService&gt; reference = <span class=\"hljs-keyword\">new</span> ReferenceConfig&lt;XxxService&gt;(); <span class=\"hljs-comment\">// In case of memory leak, please cache.</span>\nreference.setApplication(application);\nreference.setRegistry(registry); \nreference.setInterface(XxxService.class);\nreference.setVersion(<span class=\"hljs-string\">\"1.0.0\"</span>);\n \n<span class=\"hljs-comment\">// Use xxxService just like a local bean</span>\nXxxService xxxService = reference.get(); <span class=\"hljs-comment\">// NOTES: Please cache this proxy instance.</span>\n</code></pre>\n<h2>Specials</h2>\n<p>Only care about the differences:</p>\n<h3>Configuration of Method level</h3>\n<pre><code class=\"language-java\">...\n \n<span class=\"hljs-comment\">// Method level config</span>\nList&lt;MethodConfig&gt; methods = <span class=\"hljs-keyword\">new</span> ArrayList&lt;MethodConfig&gt;();\nMethodConfig method = <span class=\"hljs-keyword\">new</span> MethodConfig();\nmethod.setName(<span class=\"hljs-string\">\"createXxx\"</span>);\nmethod.setTimeout(<span class=\"hljs-number\">10000</span>);\nmethod.setRetries(<span class=\"hljs-number\">0</span>);\nmethods.add(method);\n \n<span class=\"hljs-comment\">// Referring</span>\nReferenceConfig&lt;XxxService&gt; reference = <span class=\"hljs-keyword\">new</span> ReferenceConfig&lt;XxxService&gt;();\n...\nreference.setMethods(methods); \n \n...\n</code></pre>\n<h3>Peer to Peer</h3>\n<pre><code class=\"language-java\">\n...\n \nReferenceConfig&lt;XxxService&gt; reference = <span class=\"hljs-keyword\">new</span> ReferenceConfig&lt;XxxService&gt;(); \n<span class=\"hljs-comment\">// If you know the address of the provider and want to bypass the registry, use `reference.setUrl()` to specify the provider directly. Refer [How to Invoke a specific provider](../demos/explicit-target.md) for details.</span>\nreference.setUrl(<span class=\"hljs-string\">\"dubbo://10.20.130.230:20880/com.xxx.XxxService\"</span>); \n \n...\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>When should we usd API: API is very useful for integrating with systems like OpenAPI, ESB, Test, Mock, etc. General Providers and Consumers, we still recommend use <a href=\"../configuration/xml.md\">XML Configuration</a>. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"
}