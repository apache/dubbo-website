{
  "filename": "properties.md",
  "__html": "<h1>Properties Configuration</h1>\n<p>If your application is simple enough, say, you do not need multi-registries or multi-protocols, and you want to share configuration among Spring containers. You can use <code>dubbo.properties</code> as default configuration.</p>\n<p>Dubbo will load dubbo.properties under the root of classpath automatically, you can also specify the path for loading this file by using JVM parameter: <code>-Ddubbo.properties.file=xxx.properties</code>.</p>\n<h2>Mapping Rules</h2>\n<p>Combine the tag name and attribute name of the XML tag, use <code>.</code> to split. One property per line.</p>\n<ul>\n<li><code>dubbo.application.name=foo</code> equals to <code>&lt;dubbo:application name=&quot;foo&quot; /&gt;</code></li>\n<li><code>dubbo.registry.address=10.20.153.10:9090</code> equals to <code>&lt;dubbo:registry address=&quot;10.20.153.10:9090&quot; /&gt;</code></li>\n</ul>\n<p>If you have more than one tags in a XML configuration, you can use the <code>id</code> value to distinguish. If you don't specify a id, ti will applied to all tags.</p>\n<ul>\n<li><code>dubbo.protocol.rmi.port=1234</code> equals to <code>&lt;dubbo:protocol id=&quot;rmi&quot; name=&quot;rmi&quot; port=&quot;1099&quot; /&gt;</code></li>\n<li><code>dubbo.registry.china.address=10.20.153.10:9090</code> equals to <code>&lt;dubbo:registry id=&quot;china&quot; address=&quot;10.20.153.10:9090&quot; /&gt;</code></li>\n</ul>\n<p>Here is a typical dubbo.properties demo configurationï¼š</p>\n<pre><code class=\"language-properties\">dubbo.application.name=foo\ndubbo.application.owner=bar\ndubbo.registry.address=10.20.153.10:9090\n</code></pre>\n<h2>Overrides and Priorities</h2>\n<p><img src=\"../sources/images/dubbo-properties-override.jpg\" alt=\"properties-override\"></p>\n<p>Priorities from high to low:</p>\n<ul>\n<li>\n<p>JVM -D parameters, you can easily override configuration when deploying or starting applications, e.g., change the port of dubbo protocol.</p>\n</li>\n<li>\n<p>XML, the properties present in XML will override that in dubbo.properties.</p>\n</li>\n<li>\n<p>Properties, the default value, only works when it is not configured with XML or JVM.</p>\n</li>\n</ul>\n<p>1: If more than one dubbo.properties under classpath, say, two jars contains dubbo.properties separately, Dubbo will arbitarily choose one to to load, and log Error info.<br>\n2: If <code>id</code> not configured on <code>protocol</code>, will use <code>name</code> property as default</p>\n"
}