{
  "filename": "xml.md",
  "__html": "<h1>XML Configuration</h1>\n<p>About the XML configuration items, see：<a href=\"../references/xml/introduction.md\">XML References</a>. If you prefer use API directly instead of using Spring, see <a href=\"./api.md\">API Configuration</a>. Want a example of how to use configuration, see <a href=\"../quick-start.md\">Quick Start</a>。</p>\n<h2>provider.xml demo</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n    <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n    <span class=\"hljs-attr\">xmlns:dubbo</span>=<span class=\"hljs-string\">\"http://dubbo.apache.org/schema/dubbo\"</span>\n    <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd\"</span>&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"hello-world-app\"</span>  /&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"multicast://224.5.6.7:1234\"</span> /&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20880\"</span> /&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.demo.DemoService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"demoServiceLocal\"</span> /&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoServiceRemote\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.demo.DemoService\"</span> /&gt;</span>  \n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n</code></pre>\n<p>All tags support custom parameters, so we can meet the special config requirements at different extension points, such as:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"jms\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"queue\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"your_queue\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:protocol</span>&gt;</span>\n</code></pre>\n<p>Or:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n    <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n    <span class=\"hljs-attr\">xmlns:dubbo</span>=<span class=\"hljs-string\">\"http://dubbo.apache.org/schema/dubbo\"</span>\n    <span class=\"hljs-attr\">xmlns:p</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/p\"</span>\n    <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd\"</span>&gt;</span>  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"jms\"</span> <span class=\"hljs-attr\">p:queue</span>=<span class=\"hljs-string\">\"your_queue\"</span> /&gt;</span>  \n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n</code></pre>\n<h2>The relations between configuration tags</h2>\n<p><img src=\"../sources/images/dubbo-config.jpg\" alt=\"dubbo-config\"></p>\n<table>\n<thead>\n<tr>\n<th>tag</th>\n<th>purpose</th>\n<th>introduction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;dubbo:service/&gt;</code></td>\n<td>Service Export</td>\n<td>Used to export service, define service metadata, export service with multiple protocols, register service to multiple registries</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:reference/&gt;</code></td>\n<td>Service Reference</td>\n<td>Used to create a remote proxy, subscribe to multiple registries</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:protocol/&gt;</code></td>\n<td>Protocol Config</td>\n<td>Configure the protocol for services on provider side, the consumer side follows.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:application/&gt;</code></td>\n<td>Application Config</td>\n<td>Applies to both provider and consumer.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:module/&gt;</code></td>\n<td>Module Config</td>\n<td>Optional.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:registry/&gt;</code></td>\n<td>Registry Center</td>\n<td>Registry info: address, protocol, etc.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:monitor/&gt;</code></td>\n<td>Monitor Center</td>\n<td>Monitor info: address, address, etc. Optional.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:provider/&gt;</code></td>\n<td>Default Config for Providers</td>\n<td>Default Config for ServiceConfigs. Optional.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:consumer/&gt;</code></td>\n<td>Default Config for Consumers</td>\n<td>Default Config for ReferenceConfigs. Optional.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:method/&gt;</code></td>\n<td>Method level Config</td>\n<td>Method level Config for ServiceConfig and ReferenceConfig.</td>\n</tr>\n<tr>\n<td><code>&lt;dubbo:argument/&gt;</code></td>\n<td>Argument Config</td>\n<td>Used to specify the method parameter configuration.</td>\n</tr>\n</tbody>\n</table>\n<h2>Overrides and Priorities</h2>\n<p>Take timeout as an example, here is the priorities, from high to low (retries, loadbalance, actives also applies  the same rule):</p>\n<ul>\n<li>method level，interface level，default/global level。</li>\n<li>at the same leveel, consumer has higher priority than provider</li>\n</ul>\n<p>Configurations on the provider side are passed to the consumer side through registry in the form of URL.</p>\n<p><img src=\"../sources/images/dubbo-config-override.jpg\" alt=\"dubbo-config-override\"></p>\n<p>It is recommended that the provider set a timeout for every service, because the provider knows exactly how long a method needs to be executed. If a consumer cites multiple services at the same time, it doesn't need to care about the timeout settings of each service.</p>\n<p>Theoretically, almost all configuration items supported in ReferenceConfig can be configured with a default value using ConsumerConfig, ServiceConfig, ProviderConfig.</p>\n<p>1: Requires spring <code>3.2.16+</code>, see announcement for details：<code>xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</code>  \n2: The reference bean obeys lazy init by default, only if it is refered by other beans or other instance try to get its instance using <code>getBean()</code> method  will the reference be initialized. If you need eager init, config this way: <code>&lt;dubbo:reference ... init=&quot;true&quot; /&gt;</code></p>\n",
  "link": "/en-us/docs/user/configuration/xml.html",
  "meta": {}
}