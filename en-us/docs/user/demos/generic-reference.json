{
  "filename": "generic-reference.md",
  "__html": "<h1>Generic Reference</h1>\n<p>Generic invocation is mainly used when the client does not have API interface or model class,  all POJOs in parameters and return values are represented by <code>Map</code>.Commonly used for framework integration such as: implementing a common service testing framework, all service implementations can be invoked via <code>GenericService</code>.</p>\n<h2>Use generic invocation via Spring</h2>\n<p>Declared in the Spring configuration file <code>generic =&quot; true &quot;</code>：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"barService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.foo.BarService\"</span> <span class=\"hljs-attr\">generic</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n</code></pre>\n<p>In Java code, get <code>barService</code> and start generic invocation:</p>\n<pre><code class=\"language-java\">GenericService barService = (GenericService) applicationContext.getBean(<span class=\"hljs-string\">\"barService\"</span>);\nObject result = barService.$invoke(<span class=\"hljs-string\">\"sayHello\"</span>, <span class=\"hljs-keyword\">new</span> String[] { <span class=\"hljs-string\">\"java.lang.String\"</span> }, <span class=\"hljs-keyword\">new</span> Object[] { <span class=\"hljs-string\">\"World\"</span> });\n</code></pre>\n<h2>Use generic invocation via API</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.service.GenericService;\n...\n\n<span class=\"hljs-comment\">// reference remote service</span>\n<span class=\"hljs-comment\">// The instance is very heavy, which encapsulates all the registration center and service provider connection, please cache</span>\nReferenceConfig&lt;GenericService&gt; reference = <span class=\"hljs-keyword\">new</span> ReferenceConfig&lt;GenericService&gt;();\n<span class=\"hljs-comment\">// weak type service interface name</span>\nreference.setInterface(<span class=\"hljs-string\">\"com.xxx.XxxService\"</span>);  \nreference.setVersion(<span class=\"hljs-string\">\"1.0.0\"</span>);\n<span class=\"hljs-comment\">// declared as generic service</span>\nreference.setGeneric(<span class=\"hljs-keyword\">true</span>);  \n\n<span class=\"hljs-comment\">// service stub type is also the com.alibaba.dubbo.rpc.service.GenericService</span>\nGenericService genericService = reference.get();\n\n<span class=\"hljs-comment\">// basic types and Date, List, Map, etc. do not need conversion, direct use them</span>\nObject result = genericService.$invoke(<span class=\"hljs-string\">\"sayHello\"</span>, <span class=\"hljs-keyword\">new</span> String[] {<span class=\"hljs-string\">\"java.lang.String\"</span>}, <span class=\"hljs-keyword\">new</span> Object[] {<span class=\"hljs-string\">\"world\"</span>});\n\n<span class=\"hljs-comment\">// map POJO parameters, if the return value is POJO will automatically turn into map</span>\nMap&lt;String, Object&gt; person = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\nperson.put(<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"xxx\"</span>);\nperson.put(<span class=\"hljs-string\">\"password\"</span>, <span class=\"hljs-string\">\"yyy\"</span>);\n<span class=\"hljs-comment\">// if the return value is POJO will automatically turn into map</span>\nObject result = genericService.$invoke(<span class=\"hljs-string\">\"findPerson\"</span>, <span class=\"hljs-keyword\">new</span> String[]\n{<span class=\"hljs-string\">\"com.xxx.Person\"</span>}, <span class=\"hljs-keyword\">new</span> Object[]{person});\n\n...\n</code></pre>\n<h2>Further explanation of generalized types</h2>\n<p>Consider POJO like this：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.xxx;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PersonImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Person</span> </span>{\n    <span class=\"hljs-keyword\">private</span> String name;\n    <span class=\"hljs-keyword\">private</span> String password;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> name;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setName</span><span class=\"hljs-params\">(String name)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.name = name;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getPassword</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> password;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setPassword</span><span class=\"hljs-params\">(String password)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.password = password;\n    }\n}\n</code></pre>\n<p>The POJO data：</p>\n<pre><code class=\"language-java\">Person person = <span class=\"hljs-keyword\">new</span> PersonImpl();\nperson.setName(<span class=\"hljs-string\">\"xxx\"</span>);\nperson.setPassword(<span class=\"hljs-string\">\"yyy\"</span>);\n</code></pre>\n<p>Data represented by <code>Map</code>：</p>\n<pre><code class=\"language-java\">Map&lt;String, Object&gt; map = <span class=\"hljs-keyword\">new</span> HashMap&lt;String, Object&gt;();\n<span class=\"hljs-comment\">// Note: If the parameter type is an interface, or List lost the generic class, you can specify the type of the class attribute</span>\nmap.put(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"com.xxx.PersonImpl\"</span>);\nmap.put(<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"xxx\"</span>);\nmap.put(<span class=\"hljs-string\">\"password\"</span>, <span class=\"hljs-string\">\"yyy\"</span>);\n</code></pre>\n"
}