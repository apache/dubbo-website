{
  "filename": "generic-service.md",
  "__html": "<h1>Generic Service</h1>\n<p>The implementation of the generic interface is mainly used when there is no API interface and model class on the server side. All POJOs in the parameters and return values are represented by the Map and are usually used for framework integration. For example, to implement a universal remote service Mock framework, handle all service requests by implementing the GenericService interface.</p>\n<p>In Java code, implement <code>GenericService</code> interface：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.foo;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyGenericService</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">GenericService</span> </span>{\n\n    <span class=\"hljs-keyword\">public</span> Object $invoke(String methodName, String[] parameterTypes, Object[] args) <span class=\"hljs-keyword\">throws</span> GenericException {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-string\">\"sayHello\"</span>.equals(methodName)) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Welcome \"</span> + args[<span class=\"hljs-number\">0</span>];\n        }\n    }\n}\n</code></pre>\n<h2>Export generic implements via Spring</h2>\n<p>Declared in the Spring configuration file：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"genericService\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"com.foo.MyGenericService\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.foo.BarService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"genericService\"</span> /&gt;</span>\n</code></pre>\n<h2>Export generic implements via API</h2>\n<pre><code class=\"language-java\">...\n<span class=\"hljs-comment\">// use com.alibaba.dubbo.rpc.service.GenericService can replace all implements</span>\nGenericService xxxService = <span class=\"hljs-keyword\">new</span> XxxGenericService();\n\n<span class=\"hljs-comment\">// The instance is very heavy, which encapsulates all the registration center and service provider connection, please cache</span>\nServiceConfig&lt;GenericService&gt; service = <span class=\"hljs-keyword\">new</span> ServiceConfig&lt;GenericService&gt;();\n<span class=\"hljs-comment\">// weak type service interface name</span>\nservice.setInterface(<span class=\"hljs-string\">\"com.xxx.XxxService\"</span>);  \nservice.setVersion(<span class=\"hljs-string\">\"1.0.0\"</span>);\n<span class=\"hljs-comment\">// point to a generic serivce instance</span>\nservice.setRef(xxxService);\n\n<span class=\"hljs-comment\">// export service to registration center</span>\nservice.export();\n</code></pre>\n",
  "link": "/en-us/docs/user/demos/generic-service.html",
  "meta": {}
}