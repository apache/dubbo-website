{
  "filename": "rmi.md",
  "__html": "<h1>rmi://</h1>\n<p>The RMI protocol uses the JDK standard <code>java.rmi.*</code> Implementation, using a block short connection and JDK standard serialization.</p>\n<h2>Features</h2>\n<ul>\n<li>Number of connections: multiple connections</li>\n<li>Connection: short connection</li>\n<li>Transmission protocol: HTTP</li>\n<li>Transmission: synchronous transmission</li>\n<li>Serialization: Java standard Object Serialization</li>\n<li>Scope of application:the number of providers is more than that of consumers and can transfer files.</li>\n<li>Applicable scenarios: Conventional remote service method calls, interoperating with native RMI services</li>\n</ul>\n<h2>Constraint</h2>\n<ul>\n<li>Parameters and return values must implement <code>Serializable</code> interface</li>\n<li>The timeout configuration for RMI  is invalid, you need to use java startup parameter settings:<code>-Dsun.rmi.transport.tcp.responseTimeout=3000</code>,see the RMI configuration below</li>\n</ul>\n<h2>Configuration in dubbo.properties</h2>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">dubbo.service.protocol</span>=<span class=\"hljs-string\">rmi</span>\n</code></pre>\n<h2>RMI Configuration</h2>\n<pre><code class=\"language-sh\">java -Dsun.rmi.transport.tcp.responseTimeout=3000\n</code></pre>\n<p>more RMI options please check <a href=\"https://docs.oracle.com/javase/6/docs/technotes/guides/rmi/sunrmiproperties.html\">JDK Document</a></p>\n<h2>Interface</h2>\n<p>If the service interface implement the <code>java.rmi.Remote</code> interface, it can interoperate with the native RMI, ie:</p>\n<ul>\n<li>Providers expose services using Dubbo's RMI protocol, consumers call directly with the standard RMI interface,</li>\n<li>Or the provider exposes services using standard RMI, and consumers invoke with Dubbo's RMI protocol.</li>\n</ul>\n<p>If the service interface doesn't implement the <code>java.rmi.Remote</code> interface:</p>\n<ul>\n<li>Default Dubbo will automatically generate a <code>com.xxx.XxxService$Remote</code> interface and implement the<code>java.rmi.Remote</code> interface, expose the service as this interface,</li>\n<li>But if <code>&lt;dubbo: protocol name = 'rmi' codec = 'spring' /&gt;</code>is set, the<code>$Remote</code> interface will not be generated, but Spring's <code>RmiInvocationHandler</code> interface will be used to expose services.</li>\n</ul>\n<h2>Configuration</h2>\n<p>configure RMI protocol：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"rmi\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"1099\"</span> /&gt;</span>\n</code></pre>\n<p>configure provider level default protocol:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:provider</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"rmi\"</span> /&gt;</span>\n</code></pre>\n<p>configure service level default protocol:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"rmi\"</span> /&gt;</span>\n</code></pre>\n<p>configure multiple port：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"rmi1\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"rmi\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"1099\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"rmi2\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"rmi\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"2099\"</span> /&gt;</span>\n \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"rmi1\"</span> /&gt;</span>\n</code></pre>\n<p>Compatible with Spring：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"rmi\"</span> <span class=\"hljs-attr\">codec</span>=<span class=\"hljs-string\">\"spring\"</span> /&gt;</span>\n</code></pre>\n",
  "link": "/en-us/docs/user/references/protocol/rmi.html",
  "meta": {}
}