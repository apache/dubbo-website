{
  "filename": "qos.md",
  "__html": "<h1>Telnet (new version) Command Usage</h1>\n<p>In dubbo <code>2.5.8</code> a new QOS module is introduced, to provide new telnet command support.</p>\n<h2>Port</h2>\n<p>the port of new version telnet is different from the port of dubbo protocol. The default port is <code>22222</code>, which can be changed by modifying configuration file <code>dubbo.properties</code></p>\n<pre><code>dubbo.application.qos.port=33333\n</code></pre>\n<p>or by modifying the JVM parameter</p>\n<pre><code>-Ddubbo.application.qos.port=33333\n</code></pre>\n<h2>Safety</h2>\n<p>By default, dubbo can receive any command sent from the host, which can be changed by modifying the configuration file <code>dubbo.properties</code></p>\n<pre><code>dubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<p>or by configuring the JVM parameter</p>\n<pre><code>-Ddubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<p>to reject command sent from the remote host, allowing only the local server to run the command</p>\n<h2>Telnet and HTTP protocol</h2>\n<p>The telnet module supports both http and telnet protocol, in order to facilitate the use of various situations</p>\n<p>For example,</p>\n<pre><code>➜  ~ telnet localhost 22222\nTrying ::1...\ntelnet: connect to address ::1: Connection refused\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\n  ████████▄  ███    █▄  ▀█████████▄  ▀█████████▄   ▄██████▄\n  ███   ▀███ ███    ███   ███    ███   ███    ███ ███    ███\n  ███    ███ ███    ███   ███    ███   ███    ███ ███    ███\n  ███    ███ ███    ███  ▄███▄▄▄██▀   ▄███▄▄▄██▀  ███    ███\n  ███    ███ ███    ███ ▀▀███▀▀▀██▄  ▀▀███▀▀▀██▄  ███    ███\n  ███    ███ ███    ███   ███    ██▄   ███    ██▄ ███    ███\n  ███   ▄███ ███    ███   ███    ███   ███    ███ ███    ███\n  ████████▀  ████████▀  ▄█████████▀  ▄█████████▀   ▀██████▀\n\n\ndubbo&gt;ls\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|com.alibaba.dubbo.demo.DemoService| N |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n\ndubbo&gt;\n</code></pre>\n<pre><code>➜  ~ curl &quot;localhost:22222/ls?arg1=xxx&amp;arg2=xxxx&quot;\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|com.alibaba.dubbo.demo.DemoService| N |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n</code></pre>\n<h2>Supported Commands</h2>\n<h3>ls List consumers and providers</h3>\n<pre><code>dubbo&gt;ls\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|com.alibaba.dubbo.demo.DemoService| Y |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n</code></pre>\n<p>List the services of the provides and the consumers that dubbo provide</p>\n<h3>Online service command</h3>\n<p>When using delay publishing function(com.alibaba.dubbo.config.AbstractServiceConfig#register set as false), you can use “online” command to online the service</p>\n<pre><code>//online all services\ndubbo&gt;online\nOK\n\n//online part of servies according to regularity.\ndubbo&gt;online com.*\nOK\n</code></pre>\n<p>Common usage situations:</p>\n<ul>\n<li>Because there is no JIT or the related resources warm-up, when the machine is restarted and the online QPS is relatively high , a large amount of timeout situations may occur. At this time,the problem can be solved by distributing the batch service and increasing the traffic gradually.</li>\n<li>A machine needs to be back online after going offline due to some reasons.</li>\n</ul>\n<h3>Offline service Command</h3>\n<p>Offline command can be used if temporary offline service is needed when fault occurs.</p>\n<pre><code>//offline all service \ndubbo&gt;offline\nOK\n\n//offline some services according to regular rules\ndubbo&gt;offline com.*\nOK\n</code></pre>\n<h3>help command</h3>\n<pre><code>//list all commands\ndubbo&gt;help\n\n//list the specific use case of a command \ndubbo&gt;help online\n+--------------+----------------------------------------------------------------------------------+\n| COMMAND NAME | online                                                                           |\n+--------------+----------------------------------------------------------------------------------+\n|      EXAMPLE | online dubbo                                                                     |\n|              | online xx.xx.xxx.service                                                         |\n+--------------+----------------------------------------------------------------------------------+\ndubbo&gt;\n</code></pre>\n<h2>QoS' Parameters</h2>\n<p>You can use parameters that QoS provides to config its startup. These parameters include:</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Explanation</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>qosEnable</td>\n<td>Activate QoS or not</td>\n<td>true</td>\n</tr>\n<tr>\n<td>qosPort</td>\n<td>The port QoS would bind to</td>\n<td>22222</td>\n</tr>\n<tr>\n<td>qosAcceptForeignIp</td>\n<td>Enable remote access or not</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Attention. From 2.6.4/2.7.0, <code>qosAcceptForeignIp</code> is set to <code>false</code> by default, because it's risky if this property is set to <code>true</code>. Think twice before you turn it on.</p>\n</blockquote>\n<p>You can configure these parameters in the following ways:</p>\n<ul>\n<li>System property</li>\n<li><code>dubbo.properties</code></li>\n<li>XML</li>\n<li>Spring-boot auto configuration</li>\n</ul>\n<p>They have priority in the following order: system property &gt; <code>dubbo.properties</code> &gt; XML &gt; spring-boot.</p>\n<h3>System Property</h3>\n<pre><code>-Ddubbo.application.qos.enable=true\n-Ddubbo.application.qos.port=33333\n-Ddubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<h3><code>Dubbo.properties</code></h3>\n<p>Create a <code>dubbo.properties</code> file in this directory <code>src/main/resources</code> in your project, and copy the following codes into it:</p>\n<pre><code>dubbo.application.qos.enable=true\ndubbo.application.qos.port=33333\ndubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<h3>XML</h3>\n<p>If you are going to config using XML, you can try this:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n       <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n       <span class=\"hljs-attr\">xmlns:dubbo</span>=<span class=\"hljs-string\">\"http://dubbo.apache.org/schema/dubbo\"</span>\n       <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"demo-provider\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.enable\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"true\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.accept.foreign.ip\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.port\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"33333\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:application</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"multicast://224.5.6.7:1234\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20880\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"org.apache.dubbo.demo.provider.DemoService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"demoService\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.apache.dubbo.demo.provider.DemoServiceImpl\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n</code></pre>\n<h3>spring-boot auto configuration</h3>\n<p>If you are developing a spring-boot application, you can configure in <code>application.properties</code> or <code>application.yml</code>:</p>\n<pre><code>dubbo.application.qosEnable=true\ndubbo.application.qosPort=33333\ndubbo.application.qosAcceptForeignIp=false\n</code></pre>\n",
  "link": "/en-us/docs/user/references/qos.html",
  "meta": {}
}