{
  "filename": "nacos.md",
  "__html": "<h1>Nacos Registry Center</h1>\n<p>Nacos is a very important registry center for Dubbo ecosystem, <a href=\"https://github.com/apache/incubator-dubbo/tree/master/dubbo-registry/dubbo-registry-nacos\"><code>dubbo-registry-nacos</code></a> is the implementation of Nacos integration to Nacos.</p>\n<h2>Prepare Work</h2>\n<p>When you integrate <a href=\"https://github.com/apache/incubator-dubbo/tree/master/dubbo-registry/dubbo-registry-nacos\"><code>dubbo-registry-nacos</code></a> into your Dubbo project, please Make sure the Nacos service is started in the background. If you are not familiar with the basic use of Nacos, you can refer to <a href=\"https://nacos.io/en-us/docs/quick-start.html\">Nacos Quick Start</a>. It is recommended to use the version equal or above Nacos <code>1.0.0</code>.</p>\n<h2>Quick Start</h2>\n<p>The steps for Dubbo to integrate Nacos as a registry center are very simple. The general steps can be divided into &quot;add Maven dependencies&quot; and &quot;configure registry center&quot;.</p>\n<h3>Add Maven Dependencies</h3>\n<p>First, you need to add the <code>dubbo-registry-nacos</code> Maven dependency to your project's <code>pom.xml</code> file, and we strongly recommend that you use Dubbo <code>2.6.5</code>:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n\n    ...\n        \n    <span class=\"hljs-comment\">&lt;!-- Dubbo Nacos registry dependency --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dubbo-registry-nacos<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>0.0.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>   \n    \n    <span class=\"hljs-comment\">&lt;!-- Keep latest Nacos client version --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.nacos<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>nacos-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>[0.6.1,)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n    \n    <span class=\"hljs-comment\">&lt;!-- Dubbo dependency --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>dubbo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.6.5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n    \n    <span class=\"hljs-comment\">&lt;!-- Alibaba Spring Context extension --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.spring<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-context-support<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n\n    ...\n    \n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span>\n</code></pre>\n<p>When you add <code>dubbo-registry-nacos</code> to your project, you don't need to explicitly program the service discovery and registration logic. The actual implementation is provided by the three-party package.</p>\n<h3>Configure Registry Center</h3>\n<p>Assuming your Dubbo app uses the Spring Framework assembly, there are two configuration options available: [Dubbo Spring Externalization Configuration](<a href=\"https://mercyblitz.github.io/2018/01/18/Dubbo-%E5%25\">https://mercyblitz.github.io/2018/01/18/Dubbo-ï¿½%</a> A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE/) and the Spring XML configuration file.</p>\n<h3><a href=\"https://mercyblitz.github.io/2018/01/18/Dubbo-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE/\">Dubbo Spring Externalization Configuration</a></h3>\n<p>The Dubbo Spring externalization configuration is a new feature introduced by Dubbo <code>2.5.8</code> that automatically generates and binds Dubbo configuration beans through the Spring <code>Environment</code> property, simplifying configuration and lowering the microservice development threshold.</p>\n<p>Assuming your Nacos Server is also running on server <code>10.20.153.10</code> and using the default Nacos service port <code>8848</code>, you only need to adjust the <code>dubbo.registry.address</code> property as follows:</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-comment\">## Other properties remain unchanged</span>\n<span class=\"hljs-comment\">\n## Nacos registry address</span>\n<span class=\"hljs-meta\">dubbo.registry.address</span> = <span class=\"hljs-string\">nacos://10.20.153.10:8848</span>\n<span class=\"hljs-attr\">...</span>\n</code></pre>\n<p>Then, restart your Dubbo app, Dubbo's service provider and consumer information can be displayed on the Nacos console:</p>\n<p><img src=\"../../../../../img/blog/dubbo-registry-nacos-1.png\" alt=\"image-20181213103845976\"></p>\n<p>As shown in the figure, the information whose service name prefix is <code>providers:</code> is the meta information of the service provider, and the <code>consumers:</code> represents the meta information of the service consumer. Click on &quot;<strong>Details</strong>&quot; to view service status details:</p>\n<p><img src=\"../../../../../img/blog/dubbo-registry-nacos-2.png\" alt=\"image-20181213104145998\"></p>\n<p>If you are using the Spring XML configuration file to assemble the Dubbo registry, please refer to the next section.</p>\n<h3>Spring XML Configuration File</h3>\n<p>Similar to <a href=\"https://mercyblitz.github.io/2018/01/18/Dubbo-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE/\">Dubbo Spring Externalization Configuration</a>, just adjust the <code>address</code> attribute to configure:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n    <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n    <span class=\"hljs-attr\">xmlns:dubbo</span>=<span class=\"hljs-string\">\"http://dubbo.apache.org/schema/dubbo\"</span>\n    <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd\"</span>&gt;</span>\n \n    <span class=\"hljs-comment\">&lt;!-- Provider application information for calculating dependencies --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo-provider-xml-demo\"</span>  /&gt;</span>\n \n    <span class=\"hljs-comment\">&lt;!-- Use Nacos as Registry Center --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"nacos://10.20.153.10:8848\"</span> /&gt;</span>\n \t...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n</code></pre>\n<p>After restarting the Dubbo app, you can also find that the registration meta-information of the service provider and consumer is presented on the Nacos console:</p>\n<p><img src=\"../../../../../img/blog/dubbo-registry-nacos-3.png\" alt=\"image-20181213113049185\"></p>\n",
  "link": "/en-us/docs/user/references/registry/nacos.html",
  "meta": {}
}