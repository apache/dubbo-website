{
  "filename": "dubbo-protocol.md",
  "__html": "<h1>dubbo:protocol</h1>\n<p>Service provider protocol configuration. The corresponding class is <code>org.apache.dubbo.config.ProtocolConfig</code>. If you need to support multiple protocols, you could declare multiple <code>&lt;dubbo:protocol&gt;</code> tags, and specify the protocol via <code>protocol</code> property.</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Corresponding URL parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Default Value</th>\n<th>Function</th>\n<th>Description</th>\n<th>Compatibility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td></td>\n<td>string</td>\n<td>False</td>\n<td>dubbo</td>\n<td>Configuration association</td>\n<td>Bean Id of the protocol, can be referenced in &lt;dubbo:service protocol=&quot;&quot;&gt; The default value is equal to the value of <code>name</code> attribute while <code>id</code> is not filled. If <code>name</code> value has already existed, it will add index to it's suffix.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>name</td>\n<td>&lt;protocol&gt;</td>\n<td>string</td>\n<td><b>True</b></td>\n<td>dubbo</td>\n<td>Performance optimize</td>\n<td>Protocol name</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>port</td>\n<td>&lt;port&gt;</td>\n<td>int</td>\n<td>False</td>\n<td>The default port of dubbo protocol is 20880, rmi protocol is 1099, http and hessian protocol are 80ï¼›It will allocate the default port if <code>port</code> is not filled; It will allocate an unused port if <code>port</code> equals <code>-1</code>. To ensure the ports scope is controllable, the port will increase based on the corresponding protocol default port after Dubbo 2.4.0+</td>\n<td>Service discovery</td>\n<td>Service port</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>host</td>\n<td>&lt;host&gt;</td>\n<td>string</td>\n<td>False</td>\n<td>Find local IP automatically</td>\n<td>Service discovery</td>\n<td>-The host name of services, to specify VIP and domain, or having multiple network cards. If null, it will find local IP automatically- It's recommended to let Dubbo find local IP automatically</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>threadpool</td>\n<td>threadpool</td>\n<td>string</td>\n<td>False</td>\n<td>fixed</td>\n<td>Performance optimize</td>\n<td>The type of Thread Pool, fixed/cached are available</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>threads</td>\n<td>threads</td>\n<td>int</td>\n<td>False</td>\n<td>200</td>\n<td>Performance optimize</td>\n<td>The size of the services' Thread Pool(Fixed)</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>iothreads</td>\n<td>threads</td>\n<td>int</td>\n<td>False</td>\n<td>The count of CPU + 1</td>\n<td>Performance optimize</td>\n<td>The size of io Thread Pool(Fixed)</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>accepts</td>\n<td>accepts</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum connection count of the service provider</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>payload</td>\n<td>payload</td>\n<td>int</td>\n<td>False</td>\n<td>8388608(=8M)</td>\n<td>Performance optimize</td>\n<td>The length limit of request and response, unit is byte</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>codec</td>\n<td>codec</td>\n<td>string</td>\n<td>False</td>\n<td>dubbo</td>\n<td>Performance optimize</td>\n<td>Protocol encoding</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>serialization</td>\n<td>serialization</td>\n<td>string</td>\n<td>False</td>\n<td>The default serialization of dubbo protocol is hessian2, rmi protocol is java, http protocol is json</td>\n<td>Performance optimize</td>\n<td>Protocol serialization, It's used when a protocol has multiple serializations. For example, <code>dubbo</code> protocol has 4 serializations, they are <code>dubbo</code>, <code>hessian2</code>, <code>java</code> and <code>compactedjava</code>.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>accesslog</td>\n<td>accesslog</td>\n<td>string/boolean</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td><code>true</code> will write access log to logger. Specifying it to a log path, you can write access logs to special log file.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>path</td>\n<td>&lt;path&gt;</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>Context path, the prefix of the service path</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>transporter</td>\n<td>transporter</td>\n<td>string</td>\n<td>False</td>\n<td>The default value of dubbo protocol is netty</td>\n<td>Performance optimize</td>\n<td>The server and client implements of the protocol. For example, mina and netty for dubbo protocol. You can configure server or client side separately.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>server</td>\n<td>server</td>\n<td>string</td>\n<td>False</td>\n<td>The default value of dubbo protocol is netty, http protocol is servlet</td>\n<td>Performance optimize</td>\n<td>The server implement of the protocol. For example, mina and netty for dubbo ptotocol, jetty and servlet for http protocol.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>client</td>\n<td>client</td>\n<td>string</td>\n<td>False</td>\n<td>The default value of dubbo protocol is netty</td>\n<td>Performance optimize</td>\n<td>The client implement of the protocol. For example, mina and netty for dubbo protocol.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>dispatcher</td>\n<td>dispatcher</td>\n<td>string</td>\n<td>False</td>\n<td>The default value of dubbo protocol is all</td>\n<td>Performance optimize</td>\n<td>specify the thread model of the way to dispatching. Such as <code>all</code>, <code>direct</code>, <code>message</code>, <code>execution</code>, and <code>connection</code> for dubbo protocol.</td>\n<td>Above 2.1.0</td>\n</tr>\n<tr>\n<td>queues</td>\n<td>queues</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The queue size of the Thread Pool. It's recommended not to specify it in order to invoke other provides rather than queueing unless you have special requirement.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>charset</td>\n<td>charset</td>\n<td>string</td>\n<td>False</td>\n<td>UTF-8</td>\n<td>Performance optimize</td>\n<td>Serialization encoding</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>buffer</td>\n<td>buffer</td>\n<td>int</td>\n<td>False</td>\n<td>8192</td>\n<td>Performance optimize</td>\n<td>The buffer size of networking IO</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>heartbeat</td>\n<td>heartbeat</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>Heartbeat interval. For long connection, it's difficult to receive closing event while the physical layer is disconnected. So heartbeat is necessary to help checking the connection quality</td>\n<td>Above 2.0.10</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>telnet</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>Supported telnet commands, use <code>,</code> to separate commands.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>register</td>\n<td>register</td>\n<td>boolean</td>\n<td>False</td>\n<td>true</td>\n<td>Service discovery</td>\n<td>Whether registering the corresponding services to registry center</td>\n<td>Above 2.0.8</td>\n</tr>\n<tr>\n<td>contextpath</td>\n<td>contextpath</td>\n<td>String</td>\n<td>False</td>\n<td>Default value is an empty string</td>\n<td>Service discovery</td>\n<td></td>\n<td>Above 2.0.6</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/en-us/docs/user/references/xml/dubbo-protocol.html",
  "meta": {}
}