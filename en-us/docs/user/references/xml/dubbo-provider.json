{
  "filename": "dubbo-provider.md",
  "__html": "<h1>dubbo:provider</h1>\n<p>The default configuration of service provider. The corresponding class is <code>org.apache.dubbo.config.ProviderConfig</code>. This tag provider default values for <code>&lt;dubbo:service&gt;</code> and <code>&lt;dubbo:protocol&gt;</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Corresponding URL parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Default Value</th>\n<th>Function</th>\n<th>Description</th>\n<th>Compatibility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td></td>\n<td>string</td>\n<td>False</td>\n<td>dubbo</td>\n<td>Configuration association</td>\n<td>Bean Id of the protocol, can be referenced in &lt;dubbo:service proivder=&quot;&quot;&gt;</td>\n<td>Above 1.0.16</td>\n</tr>\n<tr>\n<td>protocol</td>\n<td>&lt;protocol&gt;</td>\n<td>string</td>\n<td>False</td>\n<td>dubbo</td>\n<td>Performance optimize</td>\n<td>Protocol name</td>\n<td>Above 1.0.16</td>\n</tr>\n<tr>\n<td>host</td>\n<td>&lt;host&gt;</td>\n<td>string</td>\n<td>False</td>\n<td>Find local IP automatically</td>\n<td>Service discovery</td>\n<td>The host name of services, to specify VIP and domain, or having multiple network cards. If null, it will find local IP automatically. It's recommended to let Dubbo find local IP automatically</td>\n<td>Above 1.0.16</td>\n</tr>\n<tr>\n<td>threads</td>\n<td>threads</td>\n<td>int</td>\n<td>False</td>\n<td>200</td>\n<td>Performance optimize</td>\n<td>The size of the services' Thread Pool(Fixed)</td>\n<td>Above 1.0.16</td>\n</tr>\n<tr>\n<td>payload</td>\n<td>payload</td>\n<td>int</td>\n<td>False</td>\n<td>8388608(=8M)</td>\n<td>Performance optimize</td>\n<td>The length limit of request and response, unit is byte</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>path</td>\n<td>&lt;path&gt;</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>Context path of the service provider, the prefix of the service path</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>server</td>\n<td>server</td>\n<td>string</td>\n<td>False</td>\n<td>Default is netty for dubbo protocol, servlet for http protocol</td>\n<td>Performance optimize</td>\n<td>The server implement of the protocol. For example, mina and netty for dubbo ptotocol, jetty and servlet for http protocol.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>client</td>\n<td>client</td>\n<td>string</td>\n<td>False</td>\n<td>Default is netty for dubbo protocol</td>\n<td>Performance optimize</td>\n<td>The client implement of the protocol. For example, mina and netty for dubbo protocol.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>codec</td>\n<td>codec</td>\n<td>string</td>\n<td>False</td>\n<td>dubbo</td>\n<td>Performance optimize</td>\n<td>Protocol encoding</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>serialization</td>\n<td>serialization</td>\n<td>string</td>\n<td>False</td>\n<td>Default is hessian2 for dubbo protocol, json for http protocol</td>\n<td>Performance optimize</td>\n<td>Protocol serialization, It's used when a protocol has multiple serializations. For example, <code>dubbo</code> protocol has 4 serializations, they are <code>dubbo</code>, <code>hessian2</code>, <code>java</code> and <code>compactedjava</code>, <code>http</code> protocol has <code>json</code> and <code>xml</code>.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>default</td>\n<td></td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Configuration association</td>\n<td>To specify the default protocol for support multiple protocols.</td>\n<td>Above 1.0.16</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>service.filter</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Performance optimize</td>\n<td>The filter name of the RPC process of the provider, use <code>,</code> to separate multiple filter names.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>listener</td>\n<td>exporter.listener</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Performance optimize</td>\n<td>The listener name of the provider, use <code>,</code> to separate multiple listener names.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>threadpool</td>\n<td>threadpool</td>\n<td>string</td>\n<td>False</td>\n<td>fixed</td>\n<td>Performance optimize</td>\n<td>The type of Thread Pool, fixed/cached are available</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>accepts</td>\n<td>accepts</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum connection count of the service provider</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>version</td>\n<td>version</td>\n<td>string</td>\n<td>False</td>\n<td>0.0.0</td>\n<td>Service discovery</td>\n<td>Service version. It's recommended to use 2 digitals such as <code>1.0</code>. It's necessary to upgrade version only when the service is not compatible.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>group</td>\n<td>group</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>The group of the service providers. It can distinguish services when it has multiple implements.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>delay</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The delay time(ms) for registering services.  When set to -1, it indicates that the services will expose to registry after the Spring context is initialized</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>default.timeout</td>\n<td>int</td>\n<td>False</td>\n<td>1000</td>\n<td>Performance optimize</td>\n<td>The RPC timeout(ms)</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>retries</td>\n<td>default.retries</td>\n<td>int</td>\n<td>False</td>\n<td>2</td>\n<td>Performance optimize</td>\n<td>The retry count for RPC, not including the first invoke. Please set it to 0 if don't need to retry.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>connections</td>\n<td>default.connections</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum connections of every provider. For short connection such as rmi, http and hessian, it's connection limit, but for long connection such as dubbo, it's connection count.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>loadbalance</td>\n<td>default.loadbalance</td>\n<td>string</td>\n<td>False</td>\n<td>random</td>\n<td>Performance optimize</td>\n<td>Strategy of load balance, <code>random</code>, <code>roundrobin</code> and <code>leastactive</code> are available.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>async</td>\n<td>default.async</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Performance optimize</td>\n<td>Asynchronous execution, not reliable. It does not block the execution thread just only ignores the return value.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>stub</td>\n<td>stub</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Service governance</td>\n<td><code>true</code> means use the default proxy class name, which is the interface name with <code>Local</code> as the suffix.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>mock</td>\n<td>mock</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Service governance</td>\n<td><code>true</code> means use the default mock class name, which is the interface name with <code>Mock</code> suffix.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>token</td>\n<td>token</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Service governance</td>\n<td>Enable token validation. Disable token if it's null. It will generate token randomly when it is enable.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>registry</td>\n<td>registry</td>\n<td>string</td>\n<td>False</td>\n<td>By default, register to all registries</td>\n<td>Configuration association</td>\n<td>Register services to specified registry while having multiple registries. It is the <code>id</code> value of the &lt;dubbo:registry&gt;. If don't want to register to any registry, set it as <code>N/A</code></td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>dynamic</td>\n<td>dynamic</td>\n<td>boolean</td>\n<td>False</td>\n<td>true</td>\n<td>Service governance</td>\n<td>Whether the service is registered dynamically. If false, services will be showed as <code>disable</code>, you need to enable it manually. And you also need to disable it when provider shut down.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>accesslog</td>\n<td>accesslog</td>\n<td>string/boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Service governance</td>\n<td><code>true</code> will write access log to logger. Specifying it to a log path, you can write access logs to special log file.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>owner</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The owner of the service. It's used for service governance.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>document</td>\n<td>document</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>Service document URL</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>weight</td>\n<td>weight</td>\n<td>int</td>\n<td>False</td>\n<td></td>\n<td>Performance optimize</td>\n<td>The weight of the service</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>executes</td>\n<td>executes</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum parallel execution request count per method per service for the provider.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>actives</td>\n<td>default.actives</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum concurrent calls per method per service of the consumer.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>proxy</td>\n<td>string</td>\n<td>False</td>\n<td>javassist</td>\n<td>Performance optimize</td>\n<td>The proxy implement, jdk/javassist are available.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>cluster</td>\n<td>default.cluster</td>\n<td>string</td>\n<td>False</td>\n<td>failover</td>\n<td>Performance optimize</td>\n<td>failover/failfast/failsafe/failback/forking are available.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>deprecated</td>\n<td>deprecated</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Service governance</td>\n<td>Mark the service is deprecated. If true, there will log an error log on the client side.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>queues</td>\n<td>queues</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The queue size of the Thread Pool. It's recommended not to specify it in order to invoke other provides rather than queueing unless you have special requirement.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>charset</td>\n<td>charset</td>\n<td>string</td>\n<td>False</td>\n<td>UTF-8</td>\n<td>Performance optimize</td>\n<td>Serialization encoding</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>buffer</td>\n<td>buffer</td>\n<td>int</td>\n<td>False</td>\n<td>8192</td>\n<td>Performance optimize</td>\n<td>The buffer size of networking IO</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>iothreads</td>\n<td>iothreads</td>\n<td>int</td>\n<td>False</td>\n<td>CPU + 1</td>\n<td>Performance optimize</td>\n<td>The size of io Thread Pool(Fixed). These threads are used to receive, serialize and deserialize IO data. See <code>threads</code> for configuring business thread pool. It's not recommended to configure this.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>telnet</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>Supported telnet commands, use <code>,</code> to separate commands.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>contextpath</td>\n<td>contextpath</td>\n<td>String</td>\n<td>False</td>\n<td>Empty string</td>\n<td>Service governance</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>layer</td>\n<td>layer</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The biz layer of the service provider, such as biz, dao, intl:web and china:acton.</td>\n<td>Above 2.0.7</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/en-us/docs/user/references/xml/dubbo-provider.html",
  "meta": {}
}