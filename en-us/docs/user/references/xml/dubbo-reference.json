{
  "filename": "dubbo-reference.md",
  "__html": "<style>\ntable {\n  width: 100%;\n  max-width: 65em;\n  border: 1px solid #dedede;\n  margin: 15px auto;\n  border-collapse: collapse;\n  empty-cells: show;\n}\ntable th,\ntable td {\n  height: 35px;\n  border: 1px solid #dedede;\n  padding: 0 10px;\n}\ntable th {\n  font-weight: bold;\n  text-align: center !important;\n  background: rgba(158,188,226,0.2);\n  white-space: nowrap;\n}\ntable tbody tr:nth-child(2n) {\n  background: rgba(158,188,226,0.12);\n}\ntable td:nth-child(1) {\n  white-space: nowrap;\n}\ntable tr:hover {\n  background: #efefef;\n}\n.table-area {\n  overflow: auto;\n}\n</style>\n<script type=\"text/javascript\">\n[].slice.call(document.querySelectorAll('table')).forEach(function(el){\n    var wrapper = document.createElement('div');\n    wrapper.className = 'table-area';\n    el.parentNode.insertBefore(wrapper, el);\n    el.parentNode.removeChild(el);\n    wrapper.appendChild(el);\n})\n</script>\n<h1>dubbo:reference</h1>\n<p>The configuration of service consumer. The corresponding class is<code>org.apache.dubbo.config.ReferenceConfig</code></p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Corresponding URL parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Default Value</th>\n<th>Function</th>\n<th>Description</th>\n<th>Compatibility</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td></td>\n<td>string</td>\n<td><b>True</b></td>\n<td></td>\n<td>Configuration association</td>\n<td>Bean Id of the service reference</td>\n<td>Above 1.0.0</td>\n</tr>\n<tr>\n<td>interface</td>\n<td></td>\n<td>class</td>\n<td><b>True</b></td>\n<td></td>\n<td>Service discovery</td>\n<td>Interface name of the service</td>\n<td>Above 1.0.0</td>\n</tr>\n<tr>\n<td>version</td>\n<td>version</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>Service version, must be equal to the provider's version</td>\n<td>Above 1.0.0</td>\n</tr>\n<tr>\n<td>group</td>\n<td>group</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service discovery</td>\n<td>The group of the service reference, must be equal to the provider's group. It can distinguish services when it has multiple implements.</td>\n<td>Above 1.0.7</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>timeout</td>\n<td>long</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; timeout</td>\n<td>Performance optimize</td>\n<td>The RPC timeout(ms)</td>\n<td>Above 1.0.5</td>\n</tr>\n<tr>\n<td>retries</td>\n<td>retries</td>\n<td>int</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; retries</td>\n<td>Performance optimize</td>\n<td>The retry count for RPC, not including the first invoke. Please set it to 0 if don't need to retry.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>connections</td>\n<td>connections</td>\n<td>int</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; connections</td>\n<td>Performance optimize</td>\n<td>The maximum connections of every provider. For short connection such as rmi, http and hessian, it's connection limit, but for long connection such as dubbo, it's connection count.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>loadbalance</td>\n<td>loadbalance</td>\n<td>string</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; loadbalance</td>\n<td>Performance optimize</td>\n<td>Strategy of load balance, <code>random</code>, <code>roundrobin</code> and <code>leastactive</code> are available.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>async</td>\n<td>async</td>\n<td>boolean</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; async</td>\n<td>Performance optimize</td>\n<td>Asynchronous execution, not reliable. It does not block the execution thread just only ignores the return value.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>generic</td>\n<td>generic</td>\n<td>boolean</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; generic</td>\n<td>Service governance</td>\n<td>Enable generic interface. If true, the reference will return <code>GenericService</code></td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>check</td>\n<td>check</td>\n<td>boolean</td>\n<td>False</td>\n<td>By default, use &lt;dubbo:consumer&gt; check</td>\n<td>Service governance</td>\n<td>Check the exist of the provider. If true, it will throw exception when provider is not exist. If false, will ignore.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>url</td>\n<td>url</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>Connect to the provider directly via this url. It will bypass the registry.</td>\n<td>Above 1.0.6</td>\n</tr>\n<tr>\n<td>stub</td>\n<td>stub</td>\n<td>class/boolean</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The local proxy class name of the client, it's used to execute local logic such as caching. The proxy class must have a constructor with the remote proxy object as a parameter, such as <code>public XxxServiceLocal(XxxService xxxService)</code></td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>mock</td>\n<td>mock</td>\n<td>class/boolean</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The mock class name. It's called when the RPC is failed, such as timeout or IO exception. The mock class must carry a  none parameter constructor. The difference between mock and local proxy is that local proxy is always invoked before RPC but mock is invoked only when exception after RPC.</td>\n<td>Above 1.0.13</td>\n</tr>\n<tr>\n<td>cache</td>\n<td>cache</td>\n<td>string/boolean</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>lru, threadlocal, jcacheç­‰Using RPC parameters as the key to cache the result. <code>lru</code>, <code>threadlocal</code> and <code>jcache</code> are available.</td>\n<td>Above 2.1.0</td>\n</tr>\n<tr>\n<td>validation</td>\n<td>validation</td>\n<td>boolean</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>Enable JSR303 annotation validation. If true, it will validate the method parameters' annotations.</td>\n<td>Above 2.1.0</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>proxy</td>\n<td>boolean</td>\n<td>False</td>\n<td>javassist</td>\n<td>Performance optimize</td>\n<td>The proxy implement, jdk/javassist are available.</td>\n<td>Above 2.0.2</td>\n</tr>\n<tr>\n<td>client</td>\n<td>client</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Performance optimize</td>\n<td>The transport type of the client, such as netty and mina for dubbo protocol.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>registry</td>\n<td></td>\n<td>string</td>\n<td>False</td>\n<td>By default, it will merge all the service providers that getting from all registries</td>\n<td>Configuration association</td>\n<td>Get provider lists from the specified registry. It is the <code>id</code> value of the &lt;dubbo:registry&gt;, use <code>,</code> to separate multiple regsitries id.</td>\n<td>Above 2.0.0</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>owner</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The owner of the service. It's used for service governance.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>actives</td>\n<td>actives</td>\n<td>int</td>\n<td>False</td>\n<td>0</td>\n<td>Performance optimize</td>\n<td>The maximum concurrent calls per method per service of the consumer.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>cluster</td>\n<td>cluster</td>\n<td>string</td>\n<td>False</td>\n<td>failover</td>\n<td>Performance optimize</td>\n<td>failover/failfast/failsafe/failback/forking are available.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>reference.filter</td>\n<td>string</td>\n<td>False</td>\n<td>default</td>\n<td>Performance optimize</td>\n<td>The filter name of the RPC process of the reference, use <code>,</code> to separate multiple filter names.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>listener</td>\n<td>invoker.listener</td>\n<td>string</td>\n<td>False</td>\n<td>default</td>\n<td>Performance optimize</td>\n<td>The listener name of the reference, use <code>,</code> to separate multiple listener names.</td>\n<td>Above 2.0.5</td>\n</tr>\n<tr>\n<td>layer</td>\n<td>layer</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>The biz layer of the service provider, such as biz, dao, intl:web and china:acton.</td>\n<td>Above 2.0.7</td>\n</tr>\n<tr>\n<td>init</td>\n<td>init</td>\n<td>boolean</td>\n<td>False</td>\n<td>false</td>\n<td>Performance optimize</td>\n<td>If true, init the service reference when <code>afterPropertiesSet()</code>is invoked, or it will init later only when it is referenced and autowired.</td>\n<td>Above 2.0.10</td>\n</tr>\n<tr>\n<td>protocol</td>\n<td>protocol</td>\n<td>string</td>\n<td>False</td>\n<td></td>\n<td>Service governance</td>\n<td>Only invoke the  providers with specified protocol, and ignore other protocol providers.</td>\n<td>Above 2.2.0</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/en-us/docs/user/references/xml/dubbo-reference.html",
  "meta": {}
}