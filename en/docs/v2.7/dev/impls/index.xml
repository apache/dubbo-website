<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SPI Extension Implementations on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/</link><description>Recent content in SPI Extension Implementations on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs/v2.7/dev/impls/index.xml" rel="self" type="application/rss+xml"/><item><title>Protocol Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/protocol/</guid><description>Summary Extension to RPC protocol, hide details of remote call.
Contract:
When user calls invoke() method of Invoker object which&amp;rsquo;s returned from refer() call, the protocol needs to correspondingly execute invoke() method of Invoker object passed from remote export() method associated with the same URL. Moreover, it&amp;rsquo;s protocol&amp;rsquo;s responsibility to implement Invoker which&amp;rsquo;s returned from refer(). Generally speaking, protocol sends remote request in the Invoker implementation, but needs not to care about the Invoker passed into export() since the framework will implement the logic and pass in the instance.</description></item><item><title>Filter Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/filter/</guid><description>Summary Extension for intercepting the invocation for both service provider and consumer, furthermore, most of functions in dubbo are implemented base on the same mechanism. Since every time when remote method is invoked, the filter extensions will be executed too, the corresponding penalty should be considered before more filters are added.
Contract:
User defined filters are executed after built-in filters by default. Special value default is introduced to represent the default extension location.</description></item><item><title>InvokerListener Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/invoker-listener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/invoker-listener/</guid><description>Summary Fire event when there&amp;rsquo;s any service referenced.
Extension Interface org.apache.dubbo.rpc.InvokerListener
Extension Configuration &amp;lt;!-- 引用服务监听 --&amp;gt; &amp;lt;!-- service reference listener --&amp;gt; &amp;lt;dubbo:reference listener=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default service reference listener --&amp;gt; &amp;lt;dubbo:consumer listener=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.rpc.listener.DeprecatedInvokerListener
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxInvokerListener.java (InvokerListener implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.InvokerListener (plain text file with the content: xxx=com.xxx.XxxInvokerListener) XxxInvokerListener.java：
package com.xxx; import org.apache.dubbo.rpc.InvokerListener; import org.apache.dubbo.rpc.Invoker; import org.apache.dubbo.rpc.RpcException; public class XxxInvokerListener implements InvokerListener { public void referred(Invoker&amp;lt;?</description></item><item><title>ExporterListener Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/exporter-listener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/exporter-listener/</guid><description>Summary Fire events when there&amp;rsquo;s any service exported.
Extension Interface org.apache.dubbo.rpc.ExporterListener
Extension Configuration &amp;lt;!-- service exporter listener --&amp;gt; &amp;lt;dubbo:service listener=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default exporter listener for service provider --&amp;gt; &amp;lt;dubbo:provider listener=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.registry.directory.RegistryExporterListener
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxExporterListener.java (ExporterListener implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.ExporterListener (plain text file with the content: xxx=com.xxx.XxxExporterListener) XxxExporterListener.java：
package com.xxx; import org.apache.dubbo.rpc.ExporterListener; import org.apache.dubbo.rpc.Exporter; import org.apache.dubbo.rpc.RpcException; public class XxxExporterListener implements ExporterListener { public void exported(Exporter&amp;lt;?</description></item><item><title>Cluster Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/cluster/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/cluster/</guid><description>Summary Group service providers in a cluster, and treat them as one single provider.
Extension Interface org.apache.dubbo.rpc.cluster.Cluster
Extension Configuration &amp;lt;dubbo:protocol cluster=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take affect if cluster attribute is not configured in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider cluster=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extensions org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterWrapper org.apache.dubbo.rpc.cluster.support.FailoverCluster org.apache.dubbo.rpc.cluster.support.FailfastCluster org.apache.dubbo.rpc.cluster.support.FailsafeCluster org.apache.dubbo.rpc.cluster.support.FailbackCluster org.apache.dubbo.rpc.cluster.support.ForkingCluster org.apache.dubbo.rpc.cluster.support.AvailableCluster org.apache.dubbo.rpc.cluster.support.MergeableCluster org.apache.dubbo.rpc.cluster.support.BroadcastCluster org.apache.dubbo.rpc.cluster.support.registry.ZoneAwareCluster Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxCluster.java (Cluster implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.cluster.Cluster (plain text file with the content: xxx=com.</description></item><item><title>Router Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/router/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/router/</guid><description>Summary Pick one from service providers and fire the invocation.
Extension Interface org.apache.dubbo.rpc.cluster.RouterFactory org.apache.dubbo.rpc.cluster.Router Existing Extension org.apache.dubbo.rpc.cluster.router.ScriptRouterFactory org.apache.dubbo.rpc.cluster.router.FileRouterFactory org.apache.dubbo.rpc.cluster.router.condition.config.AppRouterFactory org.apache.dubbo.rpc.cluster.CacheableRouterFactory org.apache.dubbo.rpc.cluster.router.condition.ConditionRouterFactory org.apache.dubbo.rpc.cluster.router.mock.MockRouterFactory org.apache.dubbo.rpc.cluster.router.condition.config.ServiceRouterFactory org.apache.dubbo.rpc.cluster.router.tag.TagRouterFactory Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxRouterFactory.java (RouterFactory implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.cluster.RouterFactory (plain text file with the content: xxx=com.xxx.XxxRouterFactory) XxxRouterFactory.java：
package com.xxx; import org.apache.dubbo.rpc.cluster.RouterFactory; import org.apache.dubbo.rpc.Invoker; import org.apache.dubbo.rpc.Invocation; import org.apache.dubbo.rpc.RpcException; public class XxxRouterFactory implements RouterFactory { public Router getRouter(URL url) { // .</description></item><item><title>LoadBalance Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/load-balance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/load-balance/</guid><description>Summary Pick one from service providers and fire the invocation.
Extension Interface org.apache.dubbo.rpc.cluster.LoadBalance
Extension Configuration &amp;lt;dubbo:protocol loadbalance=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect when loadbalance is not configured in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider loadbalance=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.rpc.cluster.loadbalance.RandomLoadBalance org.apache.dubbo.rpc.cluster.loadbalance.RoundRobinLoadBalance org.apache.dubbo.rpc.cluster.loadbalance.LeastActiveLoadBalance org.apache.dubbo.rpc.cluster.loadbalance.ConsistentHashLoadBalance org.apache.dubbo.rpc.cluster.loadbalance.ShortestResponseLoadBalance Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxLoadBalance.java (LoadBalance implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.cluster.LoadBalance (plain text file with the content: xxx=com.xxx.XxxLoadBalance) XxxLoadBalance.java：
package com.xxx; import org.apache.dubbo.rpc.cluster.LoadBalance; import org.</description></item><item><title>Merger Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/merger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/merger/</guid><description>Summary Merge strategy for return result aggregation in group.
Extension Interface org.apache.dubbo.rpc.cluster.Merger
Extension Configuration &amp;lt;dubbo:method merger=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.rpc.cluster.merger.ArrayMerger org.apache.dubbo.rpc.cluster.merger.ListMerger org.apache.dubbo.rpc.cluster.merger.SetMerger org.apache.dubbo.rpc.cluster.merger.MapMerger org.apache.dubbo.rpc.cluster.merger.ByteArrayMerger org.apache.dubbo.rpc.cluster.merger.CharArrayMerger org.apache.dubbo.rpc.cluster.merger.ShortArrayMerger org.apache.dubbo.rpc.cluster.merger.IntArrayMerger org.apache.dubbo.rpc.cluster.merger.LongArrayMerger org.apache.dubbo.rpc.cluster.merger.FloatArrayMerger org.apache.dubbo.rpc.cluster.merger.DoubleArrayMerger org.apache.dubbo.rpc.cluster.merger.BooleanArrayMerger Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxMerger.java (Merger implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.cluster.Merger (plain text file with the content: xxx=com.xxx.XxxMerger) XxxMerger.java：
package com.xxx; import org.apache.dubbo.rpc.cluster.Merger; public class XxxMerger&amp;lt;T&amp;gt; implements Merger&amp;lt;T&amp;gt; { public T merge(T... results) { // .</description></item><item><title>Registry Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/registry/</guid><description>Summary Registry extension is used for service registration and discovery.
Extension Interface org.apache.dubbo.registry.RegistryFactory org.apache.dubbo.registry.Registry Extension Configuration &amp;lt;!-- config registry server --&amp;gt; &amp;lt;dubbo:registry id=&amp;#34;xxx1&amp;#34; address=&amp;#34;xxx://ip:port&amp;#34; /&amp;gt; &amp;lt;!-- reference registry server, if registry attribute is not specified, then ApplicationContext will be scanned to find if there&amp;#39;s any --&amp;gt; &amp;lt;dubbo:service registry=&amp;#34;xxx1&amp;#34; /&amp;gt; &amp;lt;!-- default configuration for referencing registry server, it will take effect if there&amp;#39;s no registry attribute specified in &amp;lt;dubbo:service&amp;gt; --&amp;gt; &amp;lt;dubbo:provider registry=&amp;#34;xxx1&amp;#34; /&amp;gt; Extension Contract RegistryFactory.</description></item><item><title>Monitor Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/monitor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/monitor/</guid><description>Summary Extension to monitor service invocation times and time taken for each service invocation.
Extension Interface org.apache.dubbo.monitor.MonitorFactory org.apache.dubbo.monitor.Monitor Extension Configuration &amp;lt;!-- configure monitor center --&amp;gt; &amp;lt;dubbo:monitor address=&amp;#34;xxx://ip:port&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.monitor.support.dubbo.DubboMonitorFactory
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxMonitorFactoryjava (MonitorFactory implementation) |-XxxMonitor.java (Monitor implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.monitor.MonitorFactory (plain text file with the format: xxx=com.xxx.XxxMonitorFactory) XxxMonitorFactory.java：
package com.xxx; import org.apache.dubbo.monitor.MonitorFactory; import org.apache.dubbo.monitor.Monitor; import org.apache.dubbo.common.URL; public class XxxMonitorFactory implements MonitorFactory { public Monitor getMonitor(URL url) { return new XxxMonitor(url); } } XxxMonitor.</description></item><item><title>ExtensionFactory Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/extension-factory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/extension-factory/</guid><description>Summary Factory to load dubbo extensions.
Extension Interface org.apache.dubbo.common.extension.ExtensionFactory
Extension Configuration &amp;lt;dubbo:application compiler=&amp;#34;jdk&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.common.extension.factory.SpiExtensionFactory org.apache.dubbo.config.spring.extension.SpringExtensionFactory Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxExtensionFactory.java (ExtensionFactory implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.common.extension.ExtensionFactory (plain text file with the content: xxx=com.xxx.XxxExtensionFactory) XxxExtensionFactory.java：
package com.xxx; import org.apache.dubbo.common.extension.ExtensionFactory; public class XxxExtensionFactory implements ExtensionFactory { public Object getExtension(Class&amp;lt;?&amp;gt; type, String name) { // ... } } META-INF/dubbo/org.apache.dubbo.common.extension.ExtensionFactory：
xxx=com.xxx.XxxExtensionFactory</description></item><item><title>ProxyFactory Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/proxy-factory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/proxy-factory/</guid><description>Summary Convert Invoker into business interface.
Extension Interface org.apache.dubbo.rpc.ProxyFactory
Extension Configuration &amp;lt;dubbo:protocol proxy=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, it will take effect when proxy attribute is not configured in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider proxy=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.rpc.proxy.JdkProxyFactory org.apache.dubbo.rpc.proxy.JavassistProxyFactory Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxProxyFactory.java (ProxyFactory implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.rpc.ProxyFactory (plain text file with the content: xxx=com.xxx.XxxProxyFactory) XxxProxyFactory.java：
package com.xxx; import org.apache.dubbo.rpc.ProxyFactory; import org.apache.dubbo.rpc.Invoker; import org.apache.dubbo.rpc.RpcException; public class XxxProxyFactory implements ProxyFactory { public &amp;lt;T&amp;gt; T getProxy(Invoker&amp;lt;T&amp;gt; invoker) throws RpcException { // .</description></item><item><title>Compiler Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/compiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/compiler/</guid><description>Summary Java compiler, used for byte code dynamic generation for RPC invocation.
Extension Interface org.apache.dubbo.common.compiler.Compiler
Extension Configuration No configuration required, the extension will be automatically discovered and loaded.
Existing Extensions org.apache.dubbo.common.compiler.support.JdkCompiler org.apache.dubbo.common.compiler.support.JavassistCompiler Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxCompiler.java (Compiler implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.common.compiler.Compiler (plain text file with the content: xxx=com.xxx.XxxCompiler) XxxCompiler.java：
package com.xxx; import org.apache.dubbo.common.compiler.Compiler; public class XxxCompiler implements Compiler { public Object getExtension(Class&amp;lt;?&amp;gt; type, String name) { // .</description></item><item><title>Dubbo Configuration Center Extensions</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/config-center/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/config-center/</guid><description>Design Purpose The key function of CC(Configuration Center) is to act as a Key-Value store. Dubbo Framework tells CC the key it care about, CC return the corresponding value.
Divided by application scenarios, CC mainly undertake the following responsibilities in Dubbo Framework:
As a external configuration center, CC store configuration files like dubbo.properties, where the key is usually file name like dubbo.properties, and value is content of the file. Store single configuration items, like all kinds of switchs, contants, etc.</description></item><item><title>Dispatcher Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/dispatcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/dispatcher/</guid><description>Summary Thread pool dispatch strategy.
Extension Interface org.apache.dubbo.remoting.Dispatcher
Extension Configuration &amp;lt;dubbo:protocol dispatcher=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if dispatcher attribute is not set in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider dispatcher=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extensions org.apache.dubbo.remoting.transport.dispatcher.all.AllDispatcher org.apache.dubbo.remoting.transport.dispatcher.direct.DirectDispatcher org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher org.apache.dubbo.remoting.transport.dispatcher.connection.ConnectionOrderedDispatcher Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxDispatcher.java (Dispatcher implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.remoting.Dispatcher (plain text file with the content: xxx=com.xxx.XxxDispatcher) XxxDispatcher.java：
package com.xxx; import org.apache.dubbo.remoting.Dispatcher; public class XxxDispatcher implements Dispatcher { public Group lookup(URL url) { // .</description></item><item><title>ThreadPool Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/threadpool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/threadpool/</guid><description>Summary Thread pool strategy extension for service provider. When server receives one request, it needs a thread from thread pool to execute business logic in service provider.
Extension Interface org.apache.dubbo.common.threadpool.ThreadPool
Extension Configuration &amp;lt;dubbo:protocol threadpool=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, it will take effect when threadpool attribute is not specified in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider threadpool=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.common.threadpool.FixedThreadPool org.apache.dubbo.common.threadpool.CachedThreadPool Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxThreadPool.java (ThreadPool implementation) |-resources |-META-INF |-dubbo |-org.</description></item><item><title>Serialization Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/serialize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/serialize/</guid><description>Summary Extension to serializing java object into byte code stream for transporting on the network, and vise versa.
Extension Interface org.apache.dubbo.common.serialize.Serialization org.apache.dubbo.common.serialize.ObjectInput org.apache.dubbo.common.serialize.ObjectOutput Extension Configuration &amp;lt;!-- protocol serialization style --&amp;gt; &amp;lt;dubbo:protocol serialization=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if serialization is not configured in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider serialization=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.common.serialize.dubbo.DubboSerialization org.apache.dubbo.common.serialize.hessian.Hessian2Serialization org.apache.dubbo.common.serialize.java.JavaSerialization org.apache.dubbo.common.serialize.java.CompactedJavaSerialization Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxSerialization.java (Serialization implementation) |-XxxObjectInput.java (ObjectInput implementation) |-XxxObjectOutput.</description></item><item><title>Transporter Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/remoting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/remoting/</guid><description>Summary Transportation extension for communication between server and client.
Extension Interface org.apache.dubbo.remoting.Transporter org.apache.dubbo.remoting.Server org.apache.dubbo.remoting.Client Extension Configuration &amp;lt;!-- server and client use the same transporter --&amp;gt; &amp;lt;dubbo:protocol transporter=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- server and client use the different transporter --&amp;gt; &amp;lt;dubbo:protocol server=&amp;#34;xxx&amp;#34; client=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect when transport/server/client attribute is not set in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider transporter=&amp;#34;xxx&amp;#34; server=&amp;#34;xxx&amp;#34; client=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.remoting.transport.transporter.netty.NettyTransporter org.apache.dubbo.remoting.transport.transporter.mina.MinaTransporter org.apache.dubbo.remoting.transport.transporter.grizzly.GrizzlyTransporter Extension Guide Directory layout:</description></item><item><title>Exchanger Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/exchanger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/exchanger/</guid><description>Summary Exchange message between request and response on network transport layer.
Extension Interface org.apache.dubbo.remoting.exchange.Exchanger org.apache.dubbo.remoting.exchange.ExchangeServer org.apache.dubbo.remoting.exchange.ExchangeClient Extension Configuration &amp;lt;dubbo:protocol exchanger=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if exchanger attribute is not set in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider exchanger=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.remoting.exchange.exchanger.HeaderExchanger
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxExchanger.java (Exchanger implementation) |-XxxExchangeServer.java (ExchangeServer implementation) |-XxxExchangeClient.java (ExchangeClient implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.remoting.exchange.Exchanger (plain text file with the content: xxx=com.</description></item><item><title>Networker Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/networker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/networker/</guid><description>Summary Extension for peer to peer network grouping.
Extension Interface org.apache.dubbo.remoting.p2p.Networker
Extension Configuration &amp;lt;dubbo:protocol networker=&amp;#34;xxx&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, it takes effect if networker attribute is not set in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider networker=&amp;#34;xxx&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.remoting.p2p.support.MulticastNetworker org.apache.dubbo.remoting.p2p.support.FileNetworker Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxNetworker.java (Networker implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.remoting.p2p.Networker (plain text file with the content: xxx=com.xxx.XxxNetworker) XxxNetworker.java：
package com.xxx; import org.apache.dubbo.remoting.p2p.Networker; public class XxxNetworker implements Networker { public Group lookup(URL url) { // .</description></item><item><title>TelnetHandler Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/telnet-handler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/telnet-handler/</guid><description>Summary Extension to telnet command. All server should support telnet access for operation convenience.
Extension Interface org.apache.dubbo.remoting.telnet.TelnetHandler
Extension Configuration &amp;lt;dubbo:protocol telnet=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if telnet attribute is not specified in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider telnet=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.remoting.telnet.support.ClearTelnetHandler org.apache.dubbo.remoting.telnet.support.ExitTelnetHandler org.apache.dubbo.remoting.telnet.support.HelpTelnetHandler org.apache.dubbo.remoting.telnet.support.StatusTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.ListTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.ChangeTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.CurrentTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.InvokeTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.TraceTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.CountTelnetHandler org.apache.dubbo.rpc.dubbo.telnet.PortTelnetHandler Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxTelnetHandler.java (TelnetHandler implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.remoting.telnet.TelnetHandler (plain text file with the content: xxx=com.</description></item><item><title>StatusChecker Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/status-checker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/status-checker/</guid><description>Summary Extension to check status of resources service depends on. This status checker can be used in both telnet status command and status page.
Extension Interface org.apache.dubbo.common.status.StatusChecker
Extension Configuration &amp;lt;dubbo:protocol status=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if no status attribute is configured in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider status=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.common.status.support.MemoryStatusChecker org.apache.dubbo.common.status.support.LoadStatusChecker org.apache.dubbo.rpc.dubbo.status.ServerStatusChecker org.apache.dubbo.rpc.dubbo.status.ThreadPoolStatusChecker org.apache.dubbo.registry.directory.RegistryStatusChecker org.apache.dubbo.rpc.config.spring.status.SpringStatusChecker org.apache.dubbo.rpc.config.spring.status.DataSourceStatusChecker Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxStatusChecker.java (StatusChecker implementation) |-resources |-META-INF |-dubbo |-org.</description></item><item><title>Container Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/container/</guid><description>Summary Service container extension, useful for loading custom contents.
Extension Interface org.apache.dubbo.container.Container
Extension Configuration java org.apache.dubbo.container.Main spring jetty log4j Existing Extensions org.apache.dubbo.container.spring.SpringContainer org.apache.dubbo.container.spring.JettyContainer org.apache.dubbo.container.spring.Log4jContainer Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxContainer.java (Container implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.container.Container (plain text file with the content: xxx=com.xxx.XxxContainer) XxxContainer.java：
package com.xxx; org.apache.dubbo.container.Container; public class XxxContainer implements Container { public Status start() { // ... } public Status stop() { // ... } } META-INF/dubbo/org.</description></item><item><title>PageHandler Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/page/</guid><description>Summary Extension for page handler
Extension Interface org.apache.dubbo.container.page.PageHandler
Extension Configuration &amp;lt;dubbo:protocol page=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, will take effect if page attribute is not set in &amp;lt;dubbo:protocol&amp;gt; --&amp;gt; &amp;lt;dubbo:provider page=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.container.page.pages.HomePageHandler org.apache.dubbo.container.page.pages.StatusPageHandler org.apache.dubbo.container.page.pages.LogPageHandler org.apache.dubbo.container.page.pages.SystemPageHandler Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxPageHandler.java (PageHandler implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.container.page.PageHandler (plain text file with the content: xxx=com.xxx.XxxPageHandler) XxxPageHandler.java：
package com.xxx; import org.apache.dubbo.container.page.PageHandler; public class XxxPageHandler implements PageHandler { public Group lookup(URL url) { // .</description></item><item><title>Cache Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/cache/</guid><description>Summary Cache the return value, use request parameter as the key.
Extension Interface org.apache.dubbo.cache.CacheFactory
Extension Configuration &amp;lt;dubbo:service cache=&amp;#34;lru&amp;#34; /&amp;gt; &amp;lt;!-- method level cache --&amp;gt; &amp;lt;dubbo:service&amp;gt;&amp;lt;dubbo:method cache=&amp;#34;lru&amp;#34; /&amp;gt;&amp;lt;/dubbo:service&amp;gt; &amp;lt;!-- 缺省值设置，当&amp;lt;dubbo:service&amp;gt;没有配置cache属性时，使用此配置 --&amp;gt; &amp;lt;!-- default configuration, will take affect if cache attribute isn&amp;#39;t configured in &amp;lt;dubbo:service&amp;gt; --&amp;gt; &amp;lt;dubbo:provider cache=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extensions org.apache.dubbo.cache.support.lru.LruCacheFactory org.apache.dubbo.cache.support.threadlocal.ThreadLocalCacheFactory org.apache.dubbo.cache.support.jcache.JCacheFactory Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxCacheFactory.java (CacheFactory implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.cache.CacheFactory (plain text file with contents: xxx=com.</description></item><item><title>Validation Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/validation/</guid><description>Summary Extension for parameter validation.
Extension Interface org.apache.dubbo.validation.Validation
Extension Configuration &amp;lt;dubbo:service validation=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; &amp;lt;!-- default configuration, it will take effect when there&amp;#39;s no validation attribute specified in &amp;lt;dubbo:service&amp;gt; --&amp;gt; &amp;lt;dubbo:provider validation=&amp;#34;xxx,yyy&amp;#34; /&amp;gt; Existing Extension org.apache.dubbo.validation.support.jvalidation.JValidation
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxValidation.java (Validation implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.validation.Validation (plain text file with the content: xxx=com.xxx.XxxValidation) XxxValidation.java：
package com.xxx; import org.apache.dubbo.validation.Validation; public class XxxValidation implements Validation { public Object getValidator(URL url) { // .</description></item><item><title>LoggerAdapter Extension</title><link>https://dubbo.apache.org/en/docs/v2.7/dev/impls/logger-adapter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v2.7/dev/impls/logger-adapter/</guid><description>Summary Extension for adapting logger output
Extension Interface org.apache.dubbo.common.logger.LoggerAdapter
Extension Configuration &amp;lt;dubbo:application logger=&amp;#34;xxx&amp;#34; /&amp;gt; Or:
-Ddubbo:application.logger=xxx Existing Extension org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter org.apache.dubbo.common.logger.jcl.JclLoggerAdapter org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxLoggerAdapter.java (LoggerAdapter implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.common.logger.LoggerAdapter (plain text file with the content: xxx=com.xxx.XxxLoggerAdapter) XxxLoggerAdapter.java：
package com.xxx; import org.apache.dubbo.common.logger.LoggerAdapter; public class XxxLoggerAdapter implements LoggerAdapter { public Logger getLogger(URL url) { // ... } } XxxLogger.java：
package com.xxx; import org.</description></item></channel></rss>