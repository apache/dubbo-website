<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Registry Server References on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/</link><description>Recent content in Registry Server References on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/index.xml" rel="self" type="application/rss+xml"/><item><title>Nacos Registry Center</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/nacos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/nacos/</guid><description>&lt;p>Nacos is a very important registry center for Dubbo ecosystem, &lt;a href="https://github.com/apache/incubator-dubbo/tree/master/dubbo-registry/dubbo-registry-nacos">&lt;code>dubbo-registry-nacos&lt;/code>&lt;/a> is the implementation of Nacos integration to Nacos.&lt;/p>
&lt;h2 id="prepare-work">Prepare Work&lt;/h2>
&lt;p>When you integrate &lt;a href="https://github.com/apache/incubator-dubbo/tree/master/dubbo-registry/dubbo-registry-nacos">&lt;code>dubbo-registry-nacos&lt;/code>&lt;/a> into your Dubbo project, please Make sure the Nacos service is started in the background. If you are not familiar with the basic use of Nacos, you can refer to &lt;a href="https://nacos.io/en-us/docs/quick-start.html">Nacos Quick Start&lt;/a>. It is recommended to use the version equal or above Nacos &lt;code>1.0.0&lt;/code>.&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>The steps for Dubbo to integrate Nacos as a registry center are very simple. The general steps can be divided into &amp;ldquo;add Maven dependencies&amp;rdquo; and &amp;ldquo;configure registry center&amp;rdquo;.&lt;/p></description></item><item><title>Zookeeper Registry Server</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/zookeeper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/zookeeper/</guid><description>&lt;p>&lt;a href="http://zookeeper.apache.org">Zookeeper&lt;/a> is the child project of apache hadoop. Since it offers tree-like directory service and supports change notification, it&amp;rsquo;s suitable to use it as dubbo&amp;rsquo;s registry server. It&amp;rsquo;s a field-proven product, therefore it&amp;rsquo;s recommended to use it in the production environment. &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>&lt;img alt="/user-guide/images/zookeeper.jpg" src="https://cn.dubbo.apache.org/imgs/user/zookeeper.jpg">&lt;/p>
&lt;p>Description on registration procedure:&lt;/p>
&lt;ul>
&lt;li>When service provider boots up: write service URL address under directory &lt;code>/dubbo/com.foo.BarService/providers&lt;/code>&lt;/li>
&lt;li>When service consumer boots up: subscribe to &lt;code>/dubbo/com.foo.BarService/providers&lt;/code> for provider&amp;rsquo;s URL addresses. At the same time, write consumer&amp;rsquo;s URL address under &lt;code>/dubbo/com.foo.BarService/consumers&lt;/code>.&lt;/li>
&lt;li>When monitor center boots up: subscribe to &lt;code>/dubbo/com.foo.BarService&lt;/code> for the URL addresses from all providers and consumers.&lt;/li>
&lt;/ul>
&lt;p>The following abilities are supported:&lt;/p></description></item><item><title>Multicast Registry</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/multicast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/multicast/</guid><description>&lt;p>Multicast registry doesn&amp;rsquo;t require to setup any central node. Just like IP address broadcast, dubbo service providers and consumers can discover each other through this mechanism.&lt;/p>
&lt;p>&lt;img alt="/user-guide/images/multicast.jpg" src="https://cn.dubbo.apache.org/imgs/user/multicast.jpg">&lt;/p>
&lt;ol start="0">
&lt;li>Service provider broadcasts its address when it boots up.&lt;/li>
&lt;li>Service consumer broadcasts its subscription request when it boots up.&lt;/li>
&lt;li>Once service provider receives subscription request, it unicasts its own address to the corresponding consumer, if &lt;code>unicast=false&lt;/code> is set, then broadcast will be used instead.&lt;/li>
&lt;li>When service consumer receives provider&amp;rsquo;s address, it can start RPC invocation on the received address.&lt;/li>
&lt;/ol>
&lt;p>Multicast is limited to network topology, and is only suitable for development purpose or small deployment. The valid multcast addresses scope is: 224.0.0.0 - 239.255.255.255.&lt;/p></description></item><item><title>Redis Registry Server</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/redis/</guid><description>&lt;h1 id="redis-registry-server">Redis Registry Server&lt;/h1>
&lt;p>It is a registry server implementation &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> based on redis &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>&lt;img alt="/user-guide/images/dubbo-redis-registry.jpg" src="https://cn.dubbo.apache.org/imgs/user/dubbo-redis-registry.jpg">&lt;/p>
&lt;p>Use key/map structure in redis to save the registration info:&lt;/p>
&lt;ul>
&lt;li>Main key for service name and type&lt;/li>
&lt;li>Key in the map is URL address&lt;/li>
&lt;li>Value in the map is the expiration time. Monitor center uses it to track and remove dirty data &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;p>Publish/Subscribe events in redis is leveraged for data change notification:&lt;/p>
&lt;ul>
&lt;li>Distinguish event type with event&amp;rsquo;s value: &lt;code>register&lt;/code>, &lt;code>unregister&lt;/code>, &lt;code>subscribe&lt;/code>, &lt;code>unsubscribe&lt;/code>.&lt;/li>
&lt;li>Regular subscriber subscribes the particular key presenting service provider, then will receive &lt;code>register&lt;/code> and &lt;code>unregister&lt;/code> events fired from the specified service.&lt;/li>
&lt;li>Monitor center subscribes &lt;code>/dubbo/*&lt;/code> via &lt;code>psubscribe&lt;/code>, then will receive all change notifications from all services.&lt;/li>
&lt;/ul>
&lt;p>Procedure:&lt;/p></description></item><item><title>Simple Registry Server</title><link>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/simple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs/v2.7/user/references/registry/simple/</guid><description>&lt;p>Simple registry server itself is a regular dubbo service. In this way, third-party dependency is unnecessary, and communication keeps consistent at the same moment.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Register simple registry server as dubbo service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;beans&lt;/span> xmlns=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:xsi=&lt;span style="color:#2aa198">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:dubbo=&lt;span style="color:#2aa198">&amp;#34;http://dubbo.apache.org/schema/dubbo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xsi:schemaLocation=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">&amp;lt;!-- application info configuration --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:application&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;simple-registry&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">&amp;lt;!-- service protocol configuration --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:protocol&lt;/span> port=&lt;span style="color:#2aa198">&amp;#34;9090&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">&amp;lt;!-- service configuration --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:service&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.registry.RegistryService&amp;#34;&lt;/span> ref=&lt;span style="color:#2aa198">&amp;#34;registryService&amp;#34;&lt;/span> registry=&lt;span style="color:#2aa198">&amp;#34;N/A&amp;#34;&lt;/span> ondisconnect=&lt;span style="color:#2aa198">&amp;#34;disconnect&amp;#34;&lt;/span> callbacks=&lt;span style="color:#2aa198">&amp;#34;1000&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:method&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;subscribe&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&amp;lt;dubbo:argument&lt;/span> index=&lt;span style="color:#2aa198">&amp;#34;1&amp;#34;&lt;/span> callback=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&amp;lt;/dubbo:method&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:method&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;unsubscribe&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&amp;lt;dubbo:argument&lt;/span> index=&lt;span style="color:#2aa198">&amp;#34;1&amp;#34;&lt;/span> callback=&lt;span style="color:#2aa198">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&amp;lt;/dubbo:method&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;/dubbo:service&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">&amp;lt;!-- simple registry server implementation, register other implementation if cluster ability is a requirement--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;bean&lt;/span> id=&lt;span style="color:#2aa198">&amp;#34;registryService&amp;#34;&lt;/span> class=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.registry.simple.SimpleRegistryService&amp;#34;&lt;/span> &lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reference simple registry server service:&lt;/p></description></item></channel></rss>