<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Erlang on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/</link><description>Recent content in Erlang on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs/v3.0/languages/erlang/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick start</title><link>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/quick-start/</guid><description>It is recommended to use java to define the interface jar first, and use the erlanalysis tool to parse the java interface to Erlang lib
Import dependent libraries Use the Rebar compilation tool. Add dubblerl to rebar.config to your project
{deps, [ {dubboerl, {git, &amp;#34;https://github.com/apache/dubbo-erlang.git&amp;#34;, {branch, &amp;#34;master&amp;#34;}}} ]}. Use erlang.mk compilation tool in progress...
Import interface library Suppose the interface lib you exported is called dubbo_service.
If you didn&amp;rsquo;t upload your lib to your git repository, It is recommended that you copy the dubbo_service lib into the project&amp;rsquo;s apps directory.</description></item><item><title>Consumer configuration</title><link>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/reference/</guid><description>Basic configuration Consumers need to add configuration items to sys.config file dubboerl filed.
{dubboerl,[ %% other config ... {consumer,[ {&amp;lt;&amp;lt;&amp;#34;interface fullname&amp;#34;&amp;gt;&amp;gt;,[Option]}, %% eg: {&amp;lt;&amp;lt;&amp;#34;org.apache.dubbo.erlang.sample.service.facade.UserOperator&amp;#34;&amp;gt;&amp;gt;,[]}, ]} ]} Option is to be added.</description></item><item><title>Provider configuration</title><link>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/service/</guid><description>basic configuration Provider configuration items to add to the sys.config file dubboerl field
{dubboerl,[ %% other config ... {provider,[ {module_implements,interface_module,interface_fullname,[Options]}, %% eg: {userOperator_impl,userOperator,&amp;lt;&amp;lt;&amp;#34;org.apache.dubbo.erlang.sample.service.facade.UserOperator&amp;#34;&amp;gt;&amp;gt;,[Option]} ]} ]} ConfigName Type DefaultValue Remarks module_implements atom() - The service implements module name interface_module atom() - Interface module name is transfer form java jar interface_fullname binary() - Interface full name is the java class name Option is to be added.</description></item><item><title>Serialized configuration items</title><link>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/serialization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/languages/erlang/serialization/</guid><description>The library currently only implements the dubbo:// communication protocol.
It supports hessian and json as serialization method.
Configuration example Provider configuration items to add to the sys.config file dubboerl field.
{dubboerl,[ %% other config ... {protocol,hessian} ]} ConfigName Type DefaultValue Remarks protocol atom() hessian hessian,json</description></item></channel></rss>