<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Align with Kubernetes Lifecycle on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/</link><description>Recent content in Align with Kubernetes Lifecycle on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/index.xml" rel="self" type="application/rss+xml"/><item><title>Brief</title><link>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/brief/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/brief/</guid><description>Pod Lifecycle is closely related to micro-service scheduling. Through the implementation of official Kubernetes probes, the life cycle of Dubbo and even the entire application can be aligned with the Pod Lifecycle. Using Dubbo&amp;rsquo;s SPI mechanism, a variety of &amp;ldquo;probes&amp;rdquo; are implemented internally. Based on the HTTP service of the Dubbo QOS operation and maintenance module, the container probe can obtain the status of the corresponding probe in the application. In addition, the implementation mechanism of SPI is also conducive to users to expand their own internal &amp;ldquo;probes&amp;rdquo;, so that the entire application life cycle can be more effectively controlled.</description></item><item><title>Liveness Probe</title><link>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/liveness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/liveness/</guid><description>Summary Extend the detection point of application survival.
Extension Interface org.apache.dubbo.qos.probe.LivenessProbe
Extension Configuration Dubbo QOS live command will automaticly discovery.
Existing Extensions No default implementation
Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxLivenessProbe.java (LivenessProbe implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.qos.probe.LivenessProbe (plain text file with the content：xxx=com.xxx.XxxLivenessProbe) XxxLivenessProbe.java：
package com.xxx; public class XxxLivenessProbe implements LivenessProbe { public boolean check() { // ... } } META-INF/dubbo/org.apache.dubbo.qos.probe.LivenessProbe：
xxx=com.xxx.XxxLivenessProbe</description></item><item><title>Readiness Probe</title><link>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/readiness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/readiness/</guid><description>Summary Extend the detection point of application readiness.
Extension Interface org.apache.dubbo.qos.probe.ReadinessProbe
Extension Configuration Dubbo QOS ready command will automaticly discovery.
Existing Extensions org.apache.dubbo.qos.probe.impl.BootstrapReadinessProbe org.apache.dubbo.qos.probe.impl.ProviderReadinessProbe Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxReadinessProbe.java (ReadinessProbe implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.qos.probe.ReadinessProbe (plain text file with the content：xxx=com.xxx.XxxReadinessProbe) XxxReadinessProbe.java：
package com.xxx; public class XxxReadinessProbe implements ReadinessProbe { public boolean check() { // ... } } META-INF/dubbo/org.apache.dubbo.qos.probe.ReadinessProbe：
xxx=com.xxx.XxxReadinessProbe</description></item><item><title>Startup Probe</title><link>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/startup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs/v3.0/references/lifecycle/startup/</guid><description>Summary Extend the detection point of application startup.
Extension Interface org.apache.dubbo.qos.probe.StartupProbe
Extension Configuration Dubbo QOS startup command will automaticly discovery.
Existing Extensions org.apache.dubbo.qos.probe.impl.BootstrapStartupProbe Extension Guide Directory layout:
src |-main |-java |-com |-xxx |-XxxStartupProbe.java (StartupProbe implementation) |-resources |-META-INF |-dubbo |-org.apache.dubbo.qos.probe.StartupProbe (plain text file with the content：xxx=com.xxx.XxxStartupProbe) XxxStartupProbe.java：
package com.xxx; public class XxxStartupProbe implements StartupProbe { public boolean check() { // ... } } META-INF/dubbo/org.apache.dubbo.qos.probe.StartupProbe：
xxx=com.xxx.XxxStartupProbe</description></item></channel></rss>