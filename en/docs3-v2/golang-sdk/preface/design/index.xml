<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/</link><description>Recent content in Architecture on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/index.xml" rel="self" type="application/rss+xml"/><item><title>AOP and Extensibility Mechanisms</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/aop_and_extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/aop_and_extension/</guid><description>1. extension module and init method 1.1 Interface and implementation An interface in golang is often accompanied by multiple implementation classes, dubbo-go provides a pluggable and extensible mechanism for interface implementation classes. Reduce the coupling between modules, making it easier for developers to introduce and customize components.
1.2 init method in golang The init method is a special method in golang. After the user introduces a group of modules, the init method in these modules will be executed first when the program starts to perform loading logic.</description></item><item><title>Architecture</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/architecture/</guid><description>Node description Registry : The registry responsible for service registration and discovery in dubbo-go Consumer : The service consumer who invokes the remote service Provider : The service provider of the exposed service Process description 0.register : When the service provider starts, it will automatically register its own service to the registration center 1. subscribe : The service consumer will subscribe to the registration center for the services it needs when it starts 2.</description></item><item><title>Dubbo's application and interface</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/app_and_interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/preface/design/app_and_interface/</guid><description>Dubbogo service level Dubbogo has two service levels: App Level and Interface Level, which are closely related to the framework configuration structure.
As shown in the figure below, you can see that the components at the application level are marked in light red, and the components at the interface level are marked in light blue:
1. Application level components Features of application-level components: shared by all interface-level components of the current application.</description></item></channel></rss>