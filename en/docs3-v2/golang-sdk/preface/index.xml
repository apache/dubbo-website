<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Preface on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/</link><description>Recent content in Preface on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/index.xml" rel="self" type="application/rss+xml"/><item><title>What is Dubbo-go</title><link>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/what/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/what/</guid><description>&lt;p>&lt;img alt="img" src="https://cn.dubbo.apache.org/imgs/docs3-v2/golang-sdk/concept/dubbogo.png">&lt;/p>
&lt;p>Apache/Dubbo-go (&lt;a href="https://github.com/apache/dubbo-go">github.com/apache/dubbo-go&lt;/a>)&lt;/p>
&lt;p>It is a distributed RPC framework; it is the Go language implementation of Apache/Dubbo. It aims to provide developers with a convenient microservice application development experience.&lt;/p>
&lt;p>Dubbo-go builds a bridge between Java and Go languages, interconnects with the gRPC/Dubbo/SpringCloud ecology, and relies on the Go language ecology to explore the technical dividends of the cloud-native era.&lt;/p></description></item><item><title>New Features of Dubbo-go 3.0</title><link>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/3.0_feature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/3.0_feature/</guid><description>&lt;p>&lt;img alt="star" src="https://shields.io/github/stars/apache/dubbo-go?style=dark">&lt;/p>
&lt;h2 id="1-triple-protocol">1. Triple protocol&lt;/h2>
&lt;h3 id="11-overview">1.1 Overview&lt;/h3>
&lt;p>&lt;img alt="img" src="https://cn.dubbo.apache.org/imgs/docs3-v2/golang-sdk/concept/more/3.0_feature/tri.png">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>communication level&lt;/p>
&lt;p>The Triple protocol, also known as the Dubbo3 protocol, is an extension protocol based on the HTTP2 + gRPC protocol, adding specific fields and logic, ensuring interoperability with the &lt;strong>native gRPC protocol&lt;/strong>. On this basis, Triple&amp;rsquo;s new protocol will more natively support &lt;strong>Dubbo service governance capabilities&lt;/strong>. And supports &lt;strong>streaming RPC calls&lt;/strong>.&lt;/p>
&lt;p>In simple terms, it can be understood as Triple = gRPC + Dubbo&lt;/p></description></item><item><title>Dubbo-go Samples</title><link>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/samples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/docs3-v2/golang-sdk/preface/samples/</guid><description>&lt;p>In order to facilitate the use of Dubbogo framework users, we provide the Samples repository for user reference:&lt;/p>
&lt;p>&lt;a href="https://github.com/apache/dubbo-go-samples">[Dubbo-go-samples warehouse address]&lt;/a>&lt;/p>
&lt;h2 id="1-examples-contained-in-the-samples-repository">1. Examples contained in the Samples repository&lt;/h2>
&lt;ul>
&lt;li>config-api: use API for configuration initialization&lt;/li>
&lt;li>configcenter: Use different configuration centers, currently supports three types: zookeeper, apollo, and nacos&lt;/li>
&lt;li>context: how to use context to pass attachment&lt;/li>
&lt;li>direct: direct connection mode&lt;/li>
&lt;li>game: game service example&lt;/li>
&lt;li>generic: generalized call&lt;/li>
&lt;li>rpc: RPC call example, including Triple, Dubbo and other protocols and cross-language/gRPC interoperability examples&lt;/li>
&lt;li>helloworld: RPC call entry example&lt;/li>
&lt;li>logger: log example&lt;/li>
&lt;li>registry: Show the docking with different registry centers, including zk, nacos, etcd&lt;/li>
&lt;li>metrics: data reporting&lt;/li>
&lt;li>filter: Examples of using provided filters and custom filters&lt;/li>
&lt;li>registry/servicediscovery: application-level service discovery example&lt;/li>
&lt;li>router: routing example&lt;/li>
&lt;li>tracing: link tracing example&lt;/li>
&lt;/ul>
&lt;h2 id="2-how-to-run">2. How to run&lt;/h2>
&lt;p>There are currently three ways to run dubbo-go examples:&lt;/p></description></item></channel></rss>