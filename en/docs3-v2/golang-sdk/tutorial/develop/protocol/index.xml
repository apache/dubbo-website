<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Protocol Configuration on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/</link><description>Recent content in Protocol Configuration on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/index.xml" rel="self" type="application/rss+xml"/><item><title>Triple exception return</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/exception_response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/exception_response/</guid><description>&lt;p>Refer to samples &lt;a href="https://github.com/apache/dubbo-go-samples/tree/f7febed9d686cb940ea55d34b5baa567d7574a44/error">dubbo-go-samples/error&lt;/a>&lt;/p>
&lt;h2 id="user-exception-return-introduction">User exception return introduction&lt;/h2>
&lt;p>The user can generate user-defined exception information on the provider side, and can record the exception generation stack. The triple protocol can ensure that the user can get the exception message on the client side, and can view the error stack, which is convenient for locating the problem.&lt;/p>
&lt;p>Note that when returning an error other than nil, the framework is not responsible for the delivery of other return values.&lt;/p></description></item><item><title>exception information return</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/error/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/error/</guid><description>&lt;h2 id="1-preparations">1. Preparations&lt;/h2>
&lt;ul>
&lt;li>dubbo-go cli tools and dependent tools have been installed&lt;/li>
&lt;li>Create a new demo application&lt;/li>
&lt;/ul>
&lt;h2 id="2-pass-exception-information">2. Pass exception information&lt;/h2>
&lt;p>Refer to samples &lt;a href="https://github.com/apache/dubbo-go-samples/tree/f7febed9d686cb940ea55d34b5baa567d7574a44/error">dubbo-go-samples/error&lt;/a>&lt;/p>
&lt;h3 id="user-exception-return-introduction">User exception return introduction&lt;/h3>
&lt;p>The user can generate user-defined exception information on the provider side, and can record the exception generation stack. The triple protocol can ensure that the user can get the exception message on the client side, and can view the error stack, which is convenient for locating the problem.&lt;/p></description></item><item><title>Select the network protocol to use</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/choose_protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/develop/protocol/choose_protocol/</guid><description>&lt;h1 id="modify-the-protocol-used">Modify the protocol used&lt;/h1>
&lt;h2 id="1-preparations">1. Preparations&lt;/h2>
&lt;ul>
&lt;li>dubbo-go cli tools and dependent tools have been installed&lt;/li>
&lt;li>Create a new demo application&lt;/li>
&lt;/ul>
&lt;h2 id="2-how-to-configure-the-network-protocol">2. How to configure the network protocol&lt;/h2>
&lt;p>As you can see in the Quick Start section, the generated Demo sets the Protocol to tri, indicating that the Triple protocol is used for service exposure and service invocation. The configuration API used in the quick start chapter writes the configuration, which has the advantage of not needing to use configuration files. We extract and explain the content related to the network protocol.&lt;/p></description></item></channel></rss>