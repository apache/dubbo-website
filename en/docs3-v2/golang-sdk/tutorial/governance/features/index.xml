<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advanced Features on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/</link><description>Recent content in Advanced Features on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom service call middleware</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/aop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/aop/</guid><description>Refer to samples dubbo-go-samples/filter
1. Preparations dubbo-go cli tools and dependent tools have been installed Read [Component Loading and Extensibility] Create a new demo application 2. Configure the specified Filter When specifying a filter, it can be separated by &amp;lsquo;,&amp;rsquo;
Consumer side
dubbo: consumer: filter: echo,token,tps,myCustomFilter # Custom filter can be specified Provider side
dubbo: provider: services: GreeterProvider: filter: myCustomFilter, echo, tps 3. Custom Filter Users can customize Filter in the code, register it on the framework, and choose to use it in the configuration.</description></item><item><title>timeout for configuration calls</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/timeout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/timeout/</guid><description>1. Preparations dubbo-go cli tools and dependent tools have been installed Create a new demo application 2. Modify RPC call-related parameters through configuration items 2.1 Modify the timeout of the call and verify dubbo: consumer: request-timeout: 15s # Configure client timeout The default RPC timeout of the Dubbo-go application is 3s. After the request times out, the client will return an error with the error context deadline exceeded. In this task, you need to first modify the server function of the demo application to take a long time, and then check the client&amp;rsquo;s timeout error; and then configure the client timeout so that the time-consuming function can be called normally.</description></item><item><title>Custom Filter component</title><link>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/custom-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/golang-sdk/tutorial/governance/features/custom-filter/</guid><description>Refer to samples dubbo-go-samples/filter
1. Filter concept // Filter interface defines the functions of a filter // Extension - Filter type Filter interface { // Invoke is the core function of a filter, it determines the process of the filter Invoke(context.Context, protocol.Invoker, protocol.Invocation) protocol.Result // OnResponse updates the results from Invoke and then returns the modified results. OnResponse(context.Context, protocol.Result, protocol.Invoker, protocol.Invocation) protocol.Result } Filter can be loaded on the Consumer side or the Provider side.</description></item></channel></rss>