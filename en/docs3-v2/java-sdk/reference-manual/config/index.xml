<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration Manual on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/</link><description>Recent content in Configuration Manual on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuration Overview</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/overview/</guid><description>&lt;p>Quickly jump to the content you care about through the following links:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../../../quick-start/spring-boot/">Use Spring Boot to quickly develop Dubbo applications&lt;/a>&lt;/li>
&lt;li>&lt;a href="../properties">Configuration item reference manual to know what configuration items are available&lt;/a>&lt;/li>
&lt;li>&lt;a href="../principle">How configuration loading and overriding works&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuration-components">Configuration components&lt;/h2>
&lt;p>In order to better manage various configurations, Dubbo abstracts a set of structured configuration components. Each component is generally divided by purpose and controls the behavior of different scopes.&lt;/p>
&lt;p>&lt;img alt="dubbo-config" src="https://dubbo.apache.org/imgs/user/dubbo-config.jpg">&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Component Name&lt;/th>
 &lt;th style="text-align: left">Description&lt;/th>
 &lt;th style="text-align: left">Scope&lt;/th>
 &lt;th style="text-align: left">Required&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">application&lt;/td>
 &lt;td style="text-align: left">Specify the application-level information such as the application name&lt;/td>
 &lt;td style="text-align: left">Only one application is allowed in an application&lt;/td>
 &lt;td style="text-align: left">Required&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">service&lt;/td>
 &lt;td style="text-align: left">Declare a common interface or implementation class as a Dubbo service&lt;/td>
 &lt;td style="text-align: left">There can be 0 or more services in an application&lt;/td>
 &lt;td style="text-align: left">At least one service/reference&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">reference&lt;/td>
 &lt;td style="text-align: left">Declare a common interface as a Dubbo service&lt;/td>
 &lt;td style="text-align: left">There can be 0 or more references in an application&lt;/td>
 &lt;td style="text-align: left">At least one service/reference&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">protocol&lt;/td>
 &lt;td style="text-align: left">The RPC protocol to be exposed and related configurations such as port numbers, etc.&lt;/td>
 &lt;td style="text-align: left">One application can be configured with multiple, one protocol can be used for a set of service&amp;amp;reference&lt;/td>
 &lt;td style="text-align: left">optional, default dubbo&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">registry&lt;/td>
 &lt;td style="text-align: left">Registry type, address and related configuration&lt;/td>
 &lt;td style="text-align: left">Multiple configurations can be made in one application, and one registry can be applied to a group of service&amp;amp;references&lt;/td>
 &lt;td style="text-align: left">Mandatory&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">config-center&lt;/td>
 &lt;td style="text-align: left">configuration center type, address and related configurations&lt;/td>
 &lt;td style="text-align: left">multiple configurations in one application, shared by all services&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">metadata-report&lt;/td>
 &lt;td style="text-align: left">metadata center type, address and related configuration&lt;/td>
 &lt;td style="text-align: left">multiple configurations in one application, shared by all services&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Consumer&lt;/td>
 &lt;td style="text-align: left">The default configuration shared between references&lt;/td>
 &lt;td style="text-align: left">Multiple configurations can be configured in one application, and one consumer can act on a group of references&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">Provider&lt;/td>
 &lt;td style="text-align: left">The default configuration shared between services&lt;/td>
 &lt;td style="text-align: left">Multiple configurations can be configured in one application, and one provider can be used for a group of services&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">monitor&lt;/td>
 &lt;td style="text-align: left">monitoring system type and address&lt;/td>
 &lt;td style="text-align: left">only one can be configured in an application&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">metrics&lt;/td>
 &lt;td style="text-align: left">related configuration of the data acquisition module&lt;/td>
 &lt;td style="text-align: left">only one configuration is allowed in an application&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">ssl&lt;/td>
 &lt;td style="text-align: left">ssl/tls security link-related certificate configuration&lt;/td>
 &lt;td style="text-align: left">Only one configuration is allowed in an application&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">method&lt;/td>
 &lt;td style="text-align: left">specifies method-level configuration&lt;/td>
 &lt;td style="text-align: left">subconfigurations for service and reference&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">argument&lt;/td>
 &lt;td style="text-align: left">parameter configuration of a method&lt;/td>
 &lt;td style="text-align: left">subconfiguration of method&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;ol>
&lt;li>From the perspective of implementation principle, all configuration items of Dubbo will be assembled into the URL in the end, and the URL will be used as the carrier to pass during subsequent startup and RPC calls, thereby controlling the behavior of the framework. For more information, please refer to the Dubbo source code analysis series of documents or [Blog](/zh-cn/blog/2019/10/17/dubbo-in-url-unified model/#rpc call).&lt;/li>
&lt;li>For the specific configuration items supported by each component and their meanings, please refer to &lt;a href="../properties">Configuration Item Manual&lt;/a>&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h3 id="service-and-reference">service and reference&lt;/h3>
&lt;p>&lt;code>service&lt;/code> and &lt;code>reference&lt;/code> are the two most basic configuration items of Dubbo, they are used to register a specified interface or implementation class as a Dubbo service, and control the behavior of the service through configuration items.&lt;/p></description></item><item><title>API Configuration</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/api/</guid><description>&lt;p>Assemble configuration, start Dubbo, publish and subscribe services through API coding. This method can support dynamic creation of ReferenceConfig/ServiceConfig, combined with generalized calls to meet the needs of API Gateway or test platform.&lt;/p>
&lt;blockquote>
&lt;p>Reference &lt;a href="https://github.com/apache/dubbo-samples/tree/master/1-basic/dubbo-samples-api">API Samples&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="service-provider">service provider&lt;/h2>
&lt;p>Expose the service interface through ServiceConfig, and publish the service interface to the registration center.&lt;/p>
&lt;blockquote>
&lt;p>Note: In order to better support Dubbo3 application-level service discovery, it is recommended to use the new &lt;a href="https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/api/#bootstrap-api">DubboBootstrap API&lt;/a>.&lt;/p></description></item><item><title>Annotation configuration</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/annotation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/annotation/</guid><description>&lt;p>This article uses the Spring Boot + Annotation mode to describe Dubbo application development. Check out the Spring Annotation development mode without Spring Boot here [complete example](&lt;a href="https://github.com/apache/dubbo-samples/tree/master/1-basic/">https://github.com/apache/dubbo-samples/tree/master/1-basic/&lt;/a> dubbo-samples-annotation)&lt;/p>
&lt;p>In Dubbo Spring Boot development, you only need to add a few annotations and configure the &lt;code>application.properties&lt;/code> or &lt;code>application.yml&lt;/code> file to complete the Dubbo service definition:&lt;/p>
&lt;ul>
&lt;li>Annotations include &lt;code>@DubboService&lt;/code>, &lt;code>@DubboReference&lt;/code> and &lt;code>EnableDubbo&lt;/code>. Among them, &lt;code>@DubboService&lt;/code> and &lt;code>@DubboReference&lt;/code> are used to mark Dubbo services, and &lt;code>EnableDubbo&lt;/code> starts Dubbo-related configuration and specifies the Spring Boot scanning package path.&lt;/li>
&lt;li>Configuration file &lt;code>application.properties&lt;/code> or &lt;code>application.yml&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>For complete examples of the following content, please refer to &lt;a href="https://github.com/apache/dubbo-samples/tree/master/1-basic/dubbo-samples-spring-boot">dubbo-samples&lt;/a>&lt;/p></description></item><item><title>XML Configuration</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/xml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/xml/</guid><description>&lt;p>Dubbo has custom configuration components based on Spring Schema extensions, and the configuration capabilities that can be achieved using XML are generally equivalent to &lt;a href="../properties">Configuration Reference Manual&lt;/a>.&lt;/p>
&lt;p>For complete examples of the following content, please refer to &lt;a href="https://github.com/apache/dubbo-samples/tree/master/2-advanced/dubbo-samples-spring-xml">dubbo-samples&lt;/a>&lt;/p>
&lt;h2 id="service-provider">service provider&lt;/h2>
&lt;h3 id="define-service-interface">Define service interface&lt;/h3>
&lt;p>DemoService.java:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">package&lt;/span> org.apache.dubbo.demo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">interface&lt;/span> &lt;span style="color:#268bd2">DemoService&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#268bd2">sayHello&lt;/span>(String name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="implement-the-interface-on-the-service-provider-side">Implement the interface on the service provider side&lt;/h3>
&lt;p>DemoServiceImpl.java:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">package&lt;/span> org.apache.dubbo.demo.provider;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">import&lt;/span> org.apache.dubbo.demo.DemoService;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">class&lt;/span> &lt;span style="color:#268bd2">DemoServiceImpl&lt;/span> &lt;span style="color:#268bd2">implements&lt;/span> DemoService {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">public&lt;/span> String &lt;span style="color:#268bd2">sayHello&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#719e07">return&lt;/span> &lt;span style="color:#2aa198">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="expose-services-with-spring-configuration-declarations">Expose services with Spring configuration declarations&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;beans&lt;/span> xmlns:xsi=&lt;span style="color:#2aa198">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:dubbo=&lt;span style="color:#2aa198">&amp;#34;http://dubbo.apache.org/schema/dubbo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span> xmlns:context=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xsi:schemaLocation=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#2aa198"> http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework .org/schema/context/spring-context.xsd&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;context:property-placeholder/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:application&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;demo-provider&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:registry&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;zookeeper://${zookeeper.address:127.0.0.1}:2181&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:provider&lt;/span> token=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;bean&lt;/span> id=&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span> class=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.basic.impl.DemoServiceImpl&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:service&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.basic.api.DemoService&amp;#34;&lt;/span> ref=&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="load-spring-configuration">Load Spring configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">class&lt;/span> &lt;span style="color:#268bd2">DemoServiceImpl&lt;/span> &lt;span style="color:#268bd2">implements&lt;/span> DemoService {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">public&lt;/span> String &lt;span style="color:#268bd2">sayHello&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.out.println(&lt;span style="color:#2aa198">&amp;#34;[&amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> &lt;span style="color:#719e07">new&lt;/span> SimpleDateFormat(&lt;span style="color:#2aa198">&amp;#34;HH:mm:ss&amp;#34;&lt;/span>).format(&lt;span style="color:#719e07">new&lt;/span> Date()) &lt;span style="color:#719e07">+&lt;/span> &lt;span style="color:#2aa198">&amp;#34;] Hello &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> name &lt;span style="color:#719e07">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#2aa198">&amp;#34;, request from consumer: &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> RpcContext. &lt;span style="color:#268bd2">getContext&lt;/span>(). getRemoteAddress());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#719e07">return&lt;/span> &lt;span style="color:#2aa198">&amp;#34;Hello &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> name &lt;span style="color:#719e07">+&lt;/span> &lt;span style="color:#2aa198">&amp;#34;, response from provider: &amp;#34;&lt;/span> &lt;span style="color:#719e07">+&lt;/span> RpcContext.getContext().getLocalAddress();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="service-consumer">Service Consumer&lt;/h2>
&lt;h3 id="reference-remote-services-through-spring-configuration">Reference remote services through Spring configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;beans&lt;/span> xmlns:xsi=&lt;span style="color:#2aa198">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:dubbo=&lt;span style="color:#2aa198">&amp;#34;http://dubbo.apache.org/schema/dubbo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span> xmlns:context=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xsi:schemaLocation=&lt;span style="color:#2aa198">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#2aa198"> http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework .org/schema/context/spring-context.xsd&amp;#34;&lt;/span>&lt;span style="color:#268bd2">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;context:property-placeholder/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:application&lt;/span> name=&lt;span style="color:#2aa198">&amp;#34;demo-consumer&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:registry&lt;/span> address=&lt;span style="color:#2aa198">&amp;#34;zookeeper://${zookeeper.address:127.0.0.1}:2181&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">&amp;lt;dubbo:reference&lt;/span> id=&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span> check=&lt;span style="color:#2aa198">&amp;#34;true&amp;#34;&lt;/span> interface=&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.basic.api.DemoService&amp;#34;&lt;/span>&lt;span style="color:#268bd2">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="load-spring-configuration-and-call-remote-service">Load Spring configuration and call remote service&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">class&lt;/span> &lt;span style="color:#268bd2">BasicConsumer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#268bd2">public&lt;/span> &lt;span style="color:#268bd2">static&lt;/span> &lt;span style="color:#dc322f">void&lt;/span> &lt;span style="color:#268bd2">main&lt;/span>(String&lt;span style="color:#719e07">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassPathXmlApplicationContext context &lt;span style="color:#719e07">=&lt;/span> &lt;span style="color:#719e07">new&lt;/span> ClassPathXmlApplicationContext(&lt;span style="color:#2aa198">&amp;#34;spring/dubbo-demo-consumer.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context. &lt;span style="color:#268bd2">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DemoService demoService &lt;span style="color:#719e07">=&lt;/span> (DemoService) context. &lt;span style="color:#268bd2">getBean&lt;/span>(&lt;span style="color:#2aa198">&amp;#34;demoService&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String hello &lt;span style="color:#719e07">=&lt;/span> demoService.sayHello(&lt;span style="color:#2aa198">&amp;#34;world&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.out.println(hello);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How Configuration Works</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/principle/</guid><description>&lt;p>The following is an example of Dubbo property configuration &lt;a href="https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples">dubbo-spring-boot-samples&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## application.properties&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Spring boot application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spring.application.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo-externalized-configuration-provider-sample&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Base packages to scan Dubbo Component: @com.alibaba.dubbo.config.annotation.Service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.scan.base-packages&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">com.alibaba.boot.dubbo.demo.provider.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75"># Dubbo Application&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## The default value of dubbo.application.name is ${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## dubbo.application.name=${spring.application.name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">#Dubbo Protocol&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.protocol.name&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">dubbo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.protocol.port&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">12345&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## Dubbo Registry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.registry.address&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">N/A&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#586e75">## service default version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo.provider.version&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">1.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, around this example, we analyze the working principle of Dubbo configuration from three aspects: configuration format, configuration source, and loading process.&lt;/p></description></item><item><title>Configuration Item Reference Manual</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/properties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/config/properties/</guid><description>&lt;h2 id="configuration-details">Configuration Details&lt;/h2>
&lt;h3 id="application">application&lt;/h3>
&lt;p>Each application must have one and only one application configuration, corresponding configuration class: &lt;code>org.apache.dubbo.config.ApplicationConfig&lt;/code>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">Attribute&lt;/th>
 &lt;th style="text-align: left">Corresponding URL parameter&lt;/th>
 &lt;th style="text-align: left">Type&lt;/th>
 &lt;th style="text-align: left">Required&lt;/th>
 &lt;th style="text-align: left">Default&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;th style="text-align: left">&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">name&lt;/td>
 &lt;td style="text-align: left">application&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">&lt;b>Required&lt;/b>&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">The name of the current application, which is used by the registry to calculate dependencies between applications. Note: the consumer and provider application names should not be the same, this parameter is not Matching conditions, you can fill in the name of your current project, which has nothing to do with the role of the provider and consumer. For example, if the kylin application calls the service of the morgan application, the kylin project will be kylin, and the morgan project will be morgan. Maybe kylin also provides other The service is used by others, but the kylin project will always be dubbed kylin, so the registry will show that kylin depends on morgan&lt;/td>
 &lt;td style="text-align: left">version 2.7 .0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">compiler&lt;/td>
 &lt;td style="text-align: left">compiler&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">javassist&lt;/td>
 &lt;td style="text-align: left">performance optimization&lt;/td>
 &lt;td style="text-align: left">Java bytecode compiler, used to generate dynamic classes, optional: jdk or javassist&lt;/td>
 &lt;td style="text-align: left">version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">logger&lt;/td>
 &lt;td style="text-align: left">logger&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">slf4j&lt;/td>
 &lt;td style="text-align: left">performance optimization&lt;/td>
 &lt;td style="text-align: left">log output method, optional: slf4j, jcl, log4j, log4j2, jdk&lt;/td>
 &lt;td style="text-align: left">version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">owner&lt;/td>
 &lt;td style="text-align: left">owner&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">The person in charge of the application, used for service governance, please fill in the email prefix of the person in charge&lt;/td>
 &lt;td style="text-align: left">Version above 2.0.5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">organization&lt;/td>
 &lt;td style="text-align: left">organization&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Organization name (BU or department), which is used by the registration center to distinguish service sources. It is recommended not to use autoconfig for this configuration item, and write it directly in the configuration, such as china, intl, itu, crm, asc, dw, aliexpress, etc.&lt;/td>
 &lt;td style="text-align: left">Version 2.0.0 and above&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">architecture &lt;br class="atl-forced-newline" />&lt;/td>
 &lt;td style="text-align: left">architecture &lt;br class="atl-forced-newline" />&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">. Different architectures use different layers.&lt;/td>
 &lt;td style="text-align: left">Version 2.0. 7 and above&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">environment&lt;/td>
 &lt;td style="text-align: left">environment&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Application environment, such as: develop/test/product, different environments use different default values, and it is only used as a restriction for developing and testing functions&lt;/td>
 &lt;td style="text-align: left">2.0.0 and above version&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">version&lt;/td>
 &lt;td style="text-align: left">application.version&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">current application version&lt;/td>
 &lt;td style="text-align: left">version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">dumpDirectory&lt;/td>
 &lt;td style="text-align: left">dump.directory&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">When the process has a problem such as the thread pool is full, the storage path of the framework&amp;rsquo;s automatic dump file&lt;/td>
 &lt;td style="text-align: left">Version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">qosEnable&lt;/td>
 &lt;td style="text-align: left">qos.enable&lt;/td>
 &lt;td style="text-align: left">boolean&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service governance&lt;/td>
 &lt;td style="text-align: left">Whether to enable the qos operation and maintenance port&lt;/td>
 &lt;td style="text-align: left">Version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">qosHost&lt;/td>
 &lt;td style="text-align: left">qos.host&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Network interface address to monitor, default 0.0.0.0&lt;/td>
 &lt;td style="text-align: left">Version 2.7.3 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">qosPort&lt;/td>
 &lt;td style="text-align: left">qos.port&lt;/td>
 &lt;td style="text-align: left">int&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">network port to monitor&lt;/td>
 &lt;td style="text-align: left">version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">qosAcceptForeignIp&lt;/td>
 &lt;td style="text-align: left">qos.accept.foreign.ip&lt;/td>
 &lt;td style="text-align: left">boolean&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Security configuration, whether to accept external requests except localhost local access&lt;/td>
 &lt;td style="text-align: left">Version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">shutwait&lt;/td>
 &lt;td style="text-align: left">dubbo.service.shutdown.wait&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">shutdown waiting time (ms) during graceful shutdown&lt;/td>
 &lt;td style="text-align: left">version 2.7.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">hostname&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">local hostname&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">hostname&lt;/td>
 &lt;td style="text-align: left">version 2.7.5 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">registerConsumer&lt;/td>
 &lt;td style="text-align: left">registerConsumer&lt;/td>
 &lt;td style="text-align: left">boolean&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">true&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">whether to register the instance to the registry. Only set to &lt;code>false&lt;/code> when the instance is a pure consumer&lt;/td>
 &lt;td style="text-align: left">Version 2.7.5 and above&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">repository&lt;/td>
 &lt;td style="text-align: left">application.version&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">current application version&lt;/td>
 &lt;td style="text-align: left">version 2.7.6 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">enableFileCache&lt;/td>
 &lt;td style="text-align: left">file.cache&lt;/td>
 &lt;td style="text-align: left">boolean&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">true&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">whether to enable local cache&lt;/td>
 &lt;td style="text-align: left">version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">protocol&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">dubbo&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">preferred protocol, applicable when the preferred protocol cannot be determined&lt;/td>
 &lt;td style="text-align: left">version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">metadataType&lt;/td>
 &lt;td style="text-align: left">metadata-type&lt;/td>
 &lt;td style="text-align: left">String&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">local&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Application-level service discovery The metadata delivery method is from the perspective of Provider, and the configuration on the Consumer side is invalid. The optional values are:&lt;br> * remote - Provider Put the metadata in the remote registry, and the Consumer gets it from the registry;&lt;br/>* local - Provider puts the metadata locally, and the Consumer gets it directly from the Provider;&lt;/td>
 &lt;td style="text-align: left">Version 2.7.5 and above&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">metadataServicePort&lt;/td>
 &lt;td style="text-align: left">metadata-service-port&lt;/td>
 &lt;td style="text-align: left">int&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">If metadataType is configured as local, this property sets the port number used by the MetadataService service&lt;/td>
 &lt;td style="text-align: left">Version 2.7.9 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">livenessProbe&lt;/td>
 &lt;td style="text-align: left">liveness-probe&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">concept and format corresponding to k8s system liveness probe&lt;/td>
 &lt;td style="text-align: left">version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">readinessProbe&lt;/td>
 &lt;td style="text-align: left">readiness-probe&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">service governance&lt;/td>
 &lt;td style="text-align: left">concept and format corresponding to k8s system readiness probe&lt;/td>
 &lt;td style="text-align: left">version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">startupProbe&lt;/td>
 &lt;td style="text-align: left">startup-probe&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">The concept and format correspond to the k8s system startup probe&lt;/td>
 &lt;td style="text-align: left">Version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">registerMode&lt;/td>
 &lt;td style="text-align: left">register-mode&lt;/td>
 &lt;td style="text-align: left">string&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">all&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Control address registration behavior, used for application-level service discovery and migration. &lt;br/>* instance only registers application-level addresses;&lt;br/>* interface only registers interface-level addresses;&lt;br/>* all (default) registers both application-level and interface-level addresses;&lt;/td>
 &lt;td style="text-align: left">Version 3.0.0 and above&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">enableEmptyProtection&lt;/td>
 &lt;td style="text-align: left">enable-empty-protection&lt;/td>
 &lt;td style="text-align: left">boolean&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">true&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Whether to enable the protection of the empty address list on the consumer side globally. After enabling it, the empty address push from the registration center will be ignored. The default is true&lt;/td>
 &lt;td style="text-align: left">Version 3.0.0 or later&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">parameters&lt;/td>
 &lt;td style="text-align: left">None&lt;/td>
 &lt;td style="text-align: left">Map&amp;lt;string, string&amp;gt;&lt;/td>
 &lt;td style="text-align: left">Optional&lt;/td>
 &lt;td style="text-align: left">&lt;/td>
 &lt;td style="text-align: left">Service Governance&lt;/td>
 &lt;td style="text-align: left">Reserved for extensions, any parameters can be extended and defined, and all extended parameters will be reflected in the URL configuration as they are&lt;/td>
 &lt;td style="text-align: left">Version 2.7.0 and above&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="service">service&lt;/h3>
&lt;p>A service provider exposes service configuration. Corresponding configuration class: &lt;code>org.apache.dubbo.config.ServiceConfig&lt;/code>&lt;/p></description></item></channel></rss>