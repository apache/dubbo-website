<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RPC protocol on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/</link><description>Recent content in RPC protocol on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/index.xml" rel="self" type="application/rss+xml"/><item><title>Protocol Overview</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/overview/</guid><description>Dubbo3 provides Triple (Dubbo3) and Dubbo2 protocols, which are native protocols of the Dubbo framework. In addition, Dubbo3 also integrates many third-party protocols and incorporates them into Dubbo&amp;rsquo;s programming and service governance system. Including gRPC, Thrift, JsonRPC, Hessian2, REST, etc. The following focuses on the Triple and Dubbo2 protocols.
protocol description The Triple protocol is the main protocol launched by Dubbo3. Triple means the third generation. Through the evolution of the Dubbo1.</description></item><item><title>Dubbo protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/dubbo/</guid><description>Feature description Dubbo&amp;rsquo;s default protocol uses a single long connection and NIO asynchronous communication, which is suitable for small data volume and large concurrent service calls, and the situation where the number of service consumer machines is much larger than the number of service provider machines.
Conversely, Dubbo&amp;rsquo;s default protocol is not suitable for services that transmit large amounts of data, such as file transfers, video transfers, etc., unless the request volume is very low.</description></item><item><title>Rest protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/rest/</guid><description>Note Since Dubbo 3.3, the rest protocol has been moved to the extensions library, with the triple protocol now providing more comprehensive support for Rest. For details refer to Triple Rest User Manual.
If you wish to continue using the original rest protocol, please include the corresponding dubbo-spi-extensions dependency. Support for REST calls based on the standard Java REST API - JAX-RS 2.0 (short for Java API for RESTful Web Services)</description></item><item><title>gRPC Protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/grpc/</guid><description>Feature description Dubbo has supported the gRPC protocol since version 2.7.5. For developers who plan to use HTTP/2 communication, or want to take advantage of the capabilities of Stream, backpressure, and Reactive programming brought by gRPC, You can consider enabling the gRPC protocol.
Benefits of supporting gRPC Bring service governance capabilities to users who expect to use the gRPC protocol, and facilitate access to the Dubbo system Users can use Dubbo-style, interface-based programming style to define and use remote services scenes to be used Synchronous backend microservice-to-microservice communication that requires an immediate response to continue processing.</description></item><item><title>HTTP protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/http/</guid><description>Note Since Dubbo 3.3, the rest protocol has been moved to the extensions library, with the triple protocol now providing more comprehensive support for Rest. For details refer to Triple Rest User Manual.
If you wish to continue using the original rest protocol, please include the corresponding dubbo-spi-extensions dependency. Feature description HTTP form-based remote invocation protocol, implemented by Spring&amp;rsquo;s HttpInvoker, supported by versions above 2.3.0.
Number of connections: multiple connections Connection method: short connection Transmission protocol: HTTP Transmission method: synchronous transmission Serialization: form serialization Scope of application: The size of incoming and outgoing parameter data packets is mixed, the number of providers is more than that of consumers, it can be viewed with a browser, and parameters can be passed in by form or URL, and file transfer is not supported for now.</description></item><item><title>Thrift protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/thrift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/thrift/</guid><description>Feature description The thrift protocol currently supported by dubbo is an extension of the thrift native protocol, adding some additional header information on the basis of the native protocol, such as service name, magic number, etc. 2.3.0 and above are supported.
Thrift is an RPC framework donated by Facebook to Apache.
Using the dubbo thrift protocol also needs to use thrift&amp;rsquo;s idl compiler to compile and generate the corresponding java code, and some enhancements will be made in this regard in subsequent versions.</description></item><item><title>Rmi agreement</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/rmi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/rmi/</guid><description>Feature description The RMI protocol is implemented using the JDK standard java.rmi.*, using blocking short connections and JDK standard serialization.
Number of connections: multiple connections Connection method: short connection Transport protocol: TCP Transmission method: synchronous transmission Serialization: Java standard binary serialization Scope of application: Incoming and outgoing parameter packets are mixed in size, the number of consumers and providers is similar, and files can be transferred. Applicable scenarios: regular remote service method calls, interoperability with native RMI services Constraints Parameters and return values need to implement Serializable interface The timeout in dubbo configuration is invalid for RMI, you need to use the java startup parameter setting: -Dsun.</description></item><item><title>Redis protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/redis/</guid><description>Feature description RPC protocol implemented based on Redis. 2.3.0 and above are supported.
Redis is an efficient KV storage server.
scenes to be used Caching, current limiting, distributed locks, etc.
How to use Import dependencies Starting from Dubbo 3, the Redis protocol is no longer embedded in Dubbo, and an independent module needs to be introduced separately.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo.extensions&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-rpc-redis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Register the address of the redis service RegistryFactory registryFactory = ExtensionLoader.</description></item><item><title>Hessian Agreement</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/hessian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/hessian/</guid><description>Feature description The Hessian protocol is used to integrate Hessian&amp;rsquo;s services. The bottom layer of Hessian uses Http communication and Servlet to expose services. Dubbo&amp;rsquo;s default embedded Jetty is implemented as a server.
Hessian is an open source RPC framework of Caucho, whose communication efficiency is higher than the serialization that comes with WebService and Java.
Number of connections: multiple connections Connection method: short connection Transmission protocol: HTTP Transmission method: synchronous transmission Serialization: Hessian binary serialization Scope of application: The incoming and outgoing parameter data packets are large, the number of providers is larger than that of consumers, the pressure on providers is high, and files can be transferred.</description></item><item><title>Webservice protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/webservice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/webservice/</guid><description>Feature description WebService-based remote invocation protocol, implemented based on frontend-simple and transports-http of Apache CXF. 2.3.0 and above are supported.
CXF is an open source RPC framework of Apache, which is merged from Xfire and Celtix.
Number of connections: multiple connections Connection method: short connection Transmission protocol: HTTP Transmission method: synchronous transmission Serialization: SOAP text serialization Applicable scenarios: system integration, cross-language call It can interoperate with native WebService services, namely:</description></item><item><title>Memcached protocol</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/memcached/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/memcached/</guid><description>Feature description RPC protocol implemented based on memcached. 2.3.0 and above are supported.
Memcached is an efficient KV cache server.
scenes to be used Relieve database pressure, improve interaction speed, etc.
How to use Import dependencies Starting from Dubbo 3, the Memcached protocol is no longer embedded in Dubbo, and an independent module needs to be introduced separately.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo.extensions&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-rpc-memcached&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Register the address of memcached service RegistryFactory registryFactory = ExtensionLoader.</description></item><item><title>Tripe 3.3 New Features</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/tripe-3.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/tripe-3.3/</guid><description>New REST Support Rest Features Since Dubbo 3.3, the Triple protocol reuses the existing HTTP stack to fully support RESTful service exports. Without the need for generic or gateway protocol conversion, users can directly access backend Triple protocol services via HTTP in a decentralized manner. Additionally, it offers extensive annotation and SPI extension support for advanced REST usage, such as path customization, output format customization, and exception handling. Key features include:</description></item><item><title>Triple Rest User Manual</title><link>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/tripe-rest-manual/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/tripe-rest-manual/</guid><description>Note Since Dubbo 3.3, the original Rest protocol has been moved to the Extensions library, and the Triple protocol now provides more comprehensive support for Rest. To continue using the original Rest protocol, you can add the corresponding dubbo-spi-extensions library dependency. Introduction Since Dubbo 3.3, the Triple protocol reuses the existing HTTP stack to fully support RESTful service exports. Without the need for generic or gateway protocol conversion, users can directly access backend Triple protocol services via HTTP in a decentralized manner.</description></item></channel></rss>