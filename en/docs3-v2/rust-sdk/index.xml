<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Apache Dubbo</title><link>https://dubbo.apache.org/en/docs3-v2/rust-sdk/</link><description>Recent content in Rust on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/docs3-v2/rust-sdk/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick start</title><link>https://dubbo.apache.org/en/docs3-v2/rust-sdk/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/rust-sdk/quick-start/</guid><description>See the full example here.
1 Prerequisite Install Rust development environment. Install protoc. 2 Use IDL to define Dubbo service The Greeter service is defined as follows, contains a Unary, Client stream, Server stream, Bidirectional stream model Dubbo service:
// ./proto/greeter.proto syntax = &amp;#34;proto3&amp;#34;; option java_multiple_files = true; package org.apache.dubbo.sample.tri; // The request message containing the user&amp;#39;s name. message GreeterRequest { string name = 1; } // The response message containing the greetings message GreeterReply { string message = 1; } service Greeter{ // unary rpc greet(GreeterRequest) returns (GreeterReply); // clientStream rpc greetClientStream(stream GreeterRequest) returns (GreeterReply); // serverStream rpc greetServerStream(GreeterRequest) returns (stream GreeterReply); // bi streaming rpc greetStream(stream GreeterRequest) returns (stream GreeterReply); } 3 Add Dubbo-rust and other dependencies # .</description></item><item><title>Rust and Java interoperability</title><link>https://dubbo.apache.org/en/docs3-v2/rust-sdk/java-interoperability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/rust-sdk/java-interoperability/</guid><description>1 Prerequisite Install Rust development environment. Install protoc. Install Java development environment. 2 Run example of Java Dubbo provider Java version of Dubbo provider example https://github.com/apache/dubbo-samples/tree/master/3-extensions/protocol/dubbo-samples-triple.
Clone the source code, compile, and run provider:
$ # clone the source code $ git clone https://github.com/apache/dubbo-samples.git $ cd dubbo-samples/dubbo-samples-triple/ $ # compile and build $ mvn clean compile package -DskipTests $ # run provider $ java -Dprovider.port=8888 -jar ./target/dubbo-samples-triple-1.0-SNAPSHOT.jar # â€¦ some logs Dubbo triple stub server started, port=8888 The interface defination on Java side</description></item><item><title>Network Protocol</title><link>https://dubbo.apache.org/en/docs3-v2/rust-sdk/protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/docs3-v2/rust-sdk/protocol/</guid><description/></item></channel></rss>