<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Contributor Guidelines on Apache Dubbo</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/</link><description>Recent content in Contributor Guidelines on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/index.xml" rel="self" type="application/rss+xml"/><item><title>如何成为 Dubbo Committer</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/become-a-committer_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/become-a-committer_dev/</guid><description>每个人都可以成为 Apache 项目的贡献者。作为一个贡献者只是意味着你对项目感兴趣并以某种方式做出贡献，从提出合理的问题（这些问题记录了项目并向开发人员提供反馈）到提供新的特性作为补丁。
如果你成为对一个项目有价值的贡献者，你有可能被邀请成为一个 committer。committer 是 ASF（Apache软件基金会）中用来表示提交特定项目的人的术语。它给你带来对项目仓库和资源写的权限。
在 Dubbo 社区，如果一个 committer 获得大量的优秀成绩，就可以被邀请加入项目管理委员会（PMC）。
当您不熟悉ASF使用的开源的开发过程时，有时难以理解的一点，就是我们更重视社区而不是代码。一个强大而健康的社区将受到尊重，成为一个有趣和有益的地方。更重要的是，一个多元化和健康的社区可以长时间的持续支持代码，即使个别公司在这个领域来来往往，也是如此。
更多详细信息可以在这里找到。
我可以贡献什么？ 请参阅新的贡献者指南。</description></item><item><title>CLA 签署向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/cla-signing-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/cla-signing-guide_dev/</guid><description>以下情况，需要您签署 Apache ICLA：
在 Dubbo 被捐赠给 Apache 之前，您已经为 Dubbo 作出了很多贡献，并且您以前没有签署过 Alibaba-CLA。 您已经为 Dubbo 作出了很多贡献，并且您被邀请成为 Dubbo 提交者，且之前没有签署过 Alibaba-CLA 或者 Apache ICLA。 步骤 下载这篇 pdf 文档 编辑该文档，在必要的空格处填上适当的内容 打印 在打印好的文件上签字 扫描 发送一封邮件到secretary@apache.org，并抄送给private@dubbo.apache.org： 邮件标题为“ICLA submission” 请在邮件正文附上您的github账号链接 请记得将您的ICLA文档放入邮件的附件里 空格填写必要说明 Mailing address：首选英文格式的公司地址 preferred apache id(s)：如果您被邀请成为一名提交者，那么需要您填写一个apache账号，否则，可以不填 notify project：Dubbo（意思就是Dubbo就是通知您签署ICLA的项目）</description></item><item><title>新贡献者向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/new-contributor-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/new-contributor-guide_dev/</guid><description>这篇向导旨在给正在准备向 Dubbo 提交贡献的新手提供指导。
邮件列表描述 邮件列表是 Dubbo 官方推荐的讨论方式，所有与 Dubbo 相关的内容都可以在这里讨论，请点击 issue 了解更多关于邮件列表订阅的内容
如需订阅如下邮件列表，请参考 邮件列表订阅向导
dev@dubbo.apache.org：开发邮件列表，您在使用或者开发 Dubbo 的过程中遇到的任何问题，都可以在这里进行提问。 commits@dubbo.apache.org：所有的提交内容都会推送到这个邮件列表，如果您对 Dubbo 的进展感兴趣，可以订阅这个邮件列表。 issues@dubbo.apache.org：所有的 JIRA issues 和修改信息都会推送到这个邮件列表。Dubbo 社区已经决定使用 github issues 代替 JIRA issues，因此大部分 issues 将由 github issues 进行跟踪。JIRA issues 用于跟踪 ASF 相关问题。 报告问题 贡献代码 贡献流程 此贡献流程适用于所有的Apache Dubbo社区内容，包括但不限于dubbo(主干仓库)、dubbo admin、dubbo website。
以下以贡献dubbo(主干仓库)为例，详细说明贡献流程。
1. fork Apache/Dubbo 项目到您的github帐号下 2. 克隆您fork的Dubbo代码仓库到您本地 git clone ${your fork dubbo repo address，for example：https://github.com/${your github id}/dubbo.git} cd dubbo 3. 添加Apache/Dubbo仓库为upstream仓库 git remote add upstream https://github.</description></item><item><title>邮件列表订阅向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/mailing-list-subscription-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/mailing-list-subscription-guide_dev/</guid><description>Apache incubator 的 Dubbo 开发者邮件列表（dev@dubbo.apache.org）已经建立，请随时订阅并参考[^1]获取更多细节。
你也可以直接查看历史邮件
下面是一个关于 Dubbo 邮件列表订阅的简短指南：
发一封邮件到 dev-subscribe@dubbo.apache.org，其内容和标题均可为空。随后，您会收到一封邮件，其内容如下： from: dev-help@dubbo.apache.org reply-to: dev-sc.xxxxxxx.xxxxxxxx-hello=example.com@dubbo.apache.org to: hello@example.com date: Sat, Feb 24, 2018 at 3:12 PM subject: confirm subscribe to dev@dubbo.apache.org mailed-by: apache.org Hi! This is the ezmlm program. I&amp;#39;m managing the dev@dubbo.apache.org mailing list. I&amp;#39;m working for my owner, who can be reached at dev-owner@dubbo.apache.org. To confirm that you would like hello@example.com added to the dev mailing list, please send a short reply to this address: dev-sc.</description></item><item><title>报告安全问题</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/reporting-security-issues_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/reporting-security-issues_dev/</guid><description>Apache Software Foundation 在消除其软件项目中的安全性问题方面采取严格的立场。Apache Dubbo 对与其功能和特性有关的问题非常敏感并很快提出。
报告漏洞 如果您对 Dubbo 的安全性有担心，或者发现漏洞或潜在威胁，请发送电子邮件至 security@dubbo.apache.org 与 Apache Dubbo 安全团队联系。在邮件中，指定问题或潜在威胁的描述。还敦促您推荐重现和复制问题的方法。Dubbo 社区会在评估和分析调查结果之后与您联系。
请先注意在安全电子邮件中报告安全问题，然后再在公共领域公开该问题。
漏洞处理 漏洞处理过程的概述是：
报告者将漏洞秘密报告给 Apache。 相应项目的安全团队与报告者私下合作来解决漏洞。 制作了包含该修复程序的有关 Apache 产品的新版本。 该漏洞已公开宣布。 有关此过程的详细说明，请参见此处</description></item><item><title>软件捐献向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/software-donation-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/software-donation-guide_dev/</guid><description>在您阅读这篇指南之前，请确保您已经向PMC确认了实际需要的 SGA。
如果您向 Apache Dubbo 捐赠了大量的代码或文档，则需要在合并代码或者文档之前签署软件授权书。
操作步骤 下载这篇pdf文档 打印下载好的文档 按要求填充表格（请看下边示例） 请您的领导在上边签字 扫描 将扫描好的文档以邮件的方式发送给secretary@apache.org，并抄送给private@dubbo.apache.org 示例 下边是一个文本示例，原始文本可以在这里找到
License Agreement This License Agreement is entered into as of the _12th_ day of ___April____, __2018__ by ___ABC Software Co., Ltd.____ (&amp;#34;Licensor&amp;#34;), in favor of The Apache Software Foundation, a Delaware nonstock membership corporation (the &amp;#34;Foundation&amp;#34;). WHEREAS, Licensor owns or has sufficient rights to contribute the software source code and other related intellectual property as itemized on Exhibit A (&amp;#34;Software&amp;#34;) under the terms of this agreement to the Foundation for use within Foundation software development projects (&amp;#34;Projects&amp;#34;).</description></item><item><title>扩展 Dubbo 向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/dubbo-extension-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/dubbo-extension-guide_dev/</guid><description>Dubbo 使用微内核+插件的设计模式。内核只负责组装插件，Dubbo 的功能都是由扩展点（插件）实现，这就意味着 Dubbo 的所有功能都可以被用户定制的扩展所替代。
Dubbo 生态系统 我们建议您将扩展加入到 Dubbo 生态系统。使用这种模式，可以使 Dubbo 的核心仓库更干净，并且可以减少维护工作。更少的代码也可以提高核心仓库的构建速度。
依赖 要实现您自己的 Dubbo 扩展，通常只需依赖 API jar 就可以满足您的需求。例如：
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-serialization-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${dubbo.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Src指导 通常，要实现特殊的扩展，只需要参考开发者指南，实现Dubbo必要的接口和合适的扩展即可。除此之外，还有一些其它的事项需要注意：
良好的测试，您需要编写单元测试和冒烟测试以消除潜在的 bug。 没有警告，如有不可避免的警告，请使用 @SuppressWarnings 阻止它，但是请不要乱用。 README。添加必要的自述以说明如何使用扩展，以及需要注意的事项。 许可证：请确保使用Apache License 2.0。 通知社区 提交您的代码到 github。 加入邮件列表（建议）。点击这里查看如何加入邮件列表。 发送一封邮件到 dev@incubator.dubbo.apache.org 通知社区。 通常，发送邮件之后，社区会对您的扩展进行讨论，dubbo 组的管理员会联系您转移您的项目到 dubbo 生态系统。 转移项目到dubbo生态系统 dubbo 组的管理员会请您将您的项目的所有者转让给 dubbo。 dubbo 组的管理员会在 dubbo 组下新建一个项目并邀请您加入到这个项目。 一旦您接受邀请，您可以将您的项目转移到 dubbo 组下的新项目里。 dubbo 组的成员会对您的项目进行代码审查。随后，您可以对这些代码进行改进。</description></item><item><title>测试覆盖率向导</title><link>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/test-coverage-guide_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/latest/contribution-guidelines/contributor/test-coverage-guide_dev/</guid><description>写单元测试的收益 单元测试能帮助每个人深入代码细节，了解代码的功能。 通过测试用例我们能发现bug，并提交代码的健壮性。 测试用例同时也是代码的demo用法。 单元测试用例的一些设计原则 应该精心设计好步骤，颗粒度和组合条件。 注意边界条件。 单元测试也应该好好设计，不要写无用的代码。 当你发现一个方法很难写单元测试时，如果可以确认这个方法是臭代码，那么就和开发者一起重构它。 Dubbo中用的mock框架是: mockito. 下面是一些开发向导:mockito tutorial,mockito refcard TDD（可选）：当你开始写一个新的功能时，你可以试着先写测试用例。 测试覆盖率设定值 在现阶段，Delta更改代码的测试覆盖设定值为：&amp;gt;＝60%，越高越好。 我们可以在这个页面中看到测试报告: https://codecov.io/gh/apache/dubbo</description></item></channel></rss>