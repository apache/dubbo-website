<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Admin Console User Guide on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/</link><description>Recent content in Admin Console User Guide on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/control-plane/index.xml" rel="self" type="application/rss+xml"/><item><title>Admin Overall Architecture and Installation Steps</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/architecture/</guid><description>&lt;p>Reviewing the &lt;a href="../../../what/overview/">overall architecture of the Dubbo service governance system&lt;/a>, Admin is a core component in the service governance control plane, responsible for service governance and visualization display for microservice clusters.&lt;/p>
&lt;h2 id="admin-deployment-architecture">Admin Deployment Architecture&lt;/h2>
&lt;p>&lt;img alt="admin-core-components.png" src="https://cn.dubbo.apache.org/imgs/v3/reference/admin/admin-core-components.png">&lt;/p>
&lt;p>Overall, the Admin deployment architecture is divided into the following parts:&lt;/p>
&lt;ul>
&lt;li>The Admin main process, including service discovery metadata management, a visualization console, security authentication policy control, and other customized service governance capabilities.&lt;/li>
&lt;li>Strong dependency components, including Mysql database, registration/configuration/metadata centers (which can be Kubernetes, Nacos, Zookeeper, etc.)&lt;/li>
&lt;li>Optional dependency components, including Prometheus, Grafana, Zipkin, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="install-admin">Install Admin&lt;/h2>
&lt;h3 id="dubboctl-installation">Dubboctl Installation&lt;/h3>
&lt;h4 id="download">Download&lt;/h4>
&lt;p>Currently, Dubboctl is not formally released and can be tried as follows.
Pull Dubbo Admin and compile Dubboctl&lt;/p></description></item><item><title>Admin Service Query</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/search/</guid><description>&lt;p>The Admin supports a visual display of the status of the Dubbo microservice cluster, making it easy for users to globally grasp the distribution of applications, services, and instances in the cluster. Admin can also obtain more detailed information about a specific service through queries:&lt;/p>
&lt;ul>
&lt;li>Home page cluster dashboard, displaying the overall distribution of cluster applications, services, instances, and overall traffic conditions.&lt;/li>
&lt;li>Supports querying detailed information based on application name, service name (can include version &amp;amp; group), instance IP.&lt;/li>
&lt;li>Supports automatic completion of service name/application name.&lt;/li>
&lt;li>Supports viewing the details of a single service instance.&lt;/li>
&lt;/ul>
&lt;h2 id="home-dashboard">Home Dashboard&lt;/h2>
&lt;p>&lt;img alt="admin-dashboard" src="https://cn.dubbo.apache.org/imgs/v3/reference/admin/console/dashboard.png">&lt;/p></description></item><item><title>Overview of Admin Service Testing Features</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/test/</guid><description>&lt;p>The service testing feature is usually provided for developers of Dubbo services to perform self-testing on their published services. By simulating a real consumer process on the Admin console, calls can be made to the service provider, and the results can be verified to meet expectations.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="prepare-test-cases">Prepare Test Cases&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Start the test case&lt;/p>
&lt;p>You can refer to &lt;a href="../../../quickstart/java/">Quick Start&lt;/a> to start a simple Dubbo service. For service testing, you only need to start the provider.&lt;/p></description></item><item><title>Introduction to Admin Service Mock Functionality</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/mock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/mock/</guid><description>&lt;p>The mock functionality is designed to enhance the efficiency of microservices development and testing. It can short circuit remote calls initiated by the consumer side and return pre-set mock values in advance, allowing the consumer to continue development and testing even when no provider is available. Additionally, mocking can be used for quickly simulating test data responsible for return values and simulating server exceptions.&lt;/p>
&lt;p>It is important to note that the mock capability is limited to the testing environment and should be avoided in the production environment.&lt;/p></description></item><item><title>Introduction to Admin Documentation Management Features</title><link>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/control-plane/documentation/</guid><description>&lt;p>// TBD&lt;/p></description></item></channel></rss>