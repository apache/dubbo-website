<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration File on Apache Dubbo</title><link>https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/</link><description>Recent content in Configuration File on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>Use the dubbogo.yml Configuration File to Develop Applications</title><link>https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/file/</guid><description>&lt;h2 id="1-introduction">1. Introduction&lt;/h2>
&lt;p>This document demonstrates how to use a &lt;code>yaml&lt;/code> configuration file in the framework for microservice development, which is an alternative development model compared to &lt;code>API&lt;/code>. You can fully develop using a &lt;code>yml&lt;/code> configuration file or put some global configurations in the configuration file, while defining services only in the API.&lt;/p>
&lt;p>In this mode, you must specify the configuration file path through &lt;code>DUBBO_GO_CONFIG_PATH&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b58900">export&lt;/span> &lt;span style="color:#268bd2">DUBBO_GO_CONFIG_PATH&lt;/span>&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">&amp;#34;../conf/dubbogo.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-usage-instructions">2. Usage Instructions&lt;/h2>
&lt;p>You can view the &lt;a href="https://github.com/apache/dubbo-go-samples/tree/main/config_yaml" target="_blank">complete example source code&lt;/a> here.&lt;/p></description></item><item><title>Remote Configuration File</title><link>https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/remote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/configuration/remote/</guid><description>&lt;p>The Dubbo framework supports preloading the contents of the configuration file &amp;lsquo;dubbogo.yaml&amp;rsquo; into the configuration center, and then merging it with local configurations through remote loading, thus achieving some dynamic and centralized management of configurations.&lt;/p>


&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Notice&lt;/h4>

 Applications that have correctly configured the config-center address will prioritize loading the entire configuration file from the configuration center.

&lt;/div>

&lt;p>You can view the &lt;a href="https://github.com/apache/dubbo-go-samples/tree/main/config_center" target="_blank">full example source code here&lt;/a>. This article demonstrates using Zookeeper, and the usage of Nacos is similar, with specific source code examples available at the above address.&lt;/p></description></item></channel></rss>