<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Interoperability with Dubbo Java on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/</link><description>Recent content in Interoperability with Dubbo Java on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/index.xml" rel="self" type="application/rss+xml"/><item><title>Non-Protobuf Mode Protocol Interoperability (Applicable to Old Version Dubbo Java Applications)</title><link>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/call_java_protocol_dubbo_non_protobuf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/call_java_protocol_dubbo_non_protobuf/</guid><description>&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>

 Before reading this document, please remember that we recommend using the protobuf+triple model to write services that are interoperable between Java and Go. This article only applies if you already have an old version of a Dubbo Java application; otherwise, please refer to the previous documentation for developing services using protobuf+triple.

&lt;/div>

&lt;p>You can view the &lt;a href="https://github.com/apache/dubbo-go-samples/tree/main/java_interop/non-protobuf-dubbo">complete example source code&lt;/a> here.&lt;/p>
&lt;h2 id="go-client-calling-java-server">Go-client Calling Java-server&lt;/h2>
&lt;p>If you are an old user of Dubbo Java, your Dubbo Java application may not be using Protobuf (defining services directly using Java interfaces). In this case, you need to develop the Dubbo Go-client as follows to call the older version of Dubbo services.&lt;/p></description></item><item><title>Intercommunication of the triple protocol based on protobuf (suitable for scenarios developed with protobuf on both sides)</title><link>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/call_java_protocol_triple_protobuf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/call_java_protocol_triple_protobuf/</guid><description>&lt;p>Here we provide an example demonstrating how to implement intercommunication between dubbo-java and dubbo-go using the triple protocol. The complete source code can be viewed &lt;a href="https://github.com/apache/dubbo-go-samples/tree/main/java_interop/protobuf-triple">here&lt;/a>.&lt;/p>
&lt;p>The main content of the example is as follows:&lt;/p>
&lt;ul>
&lt;li>Go: RPC server and client implemented in Go&lt;/li>
&lt;li>Java: RPC server and client implemented in Java&lt;/li>
&lt;/ul>
&lt;h2 id="shared-protobuf-service-definition">Shared protobuf service definition&lt;/h2>
&lt;p>The shared service definition is as follows. Please pay attention to the specific definitions of &lt;code>package&lt;/code>, &lt;code>go_package&lt;/code>, and &lt;code>java_package&lt;/code>:&lt;/p></description></item><item><title>Achieving Address Interoperability Based on Application-Level Service Discovery</title><link>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/service-discovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/golang-sdk/tutorial/interop-dubbo/service-discovery/</guid><description>&lt;p>In the previous two examples, we demonstrated the interoperability capabilities of dubbo java and dubbo go at the protocol level, covering both the triple and dubbo protocols.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../call_java_protocol_dubbo_non_protobuf">Non-protobuf mode protocol interoperability (triple and dubbo protocols)&lt;/a>&lt;/li>
&lt;li>&lt;a href="../call_java_protocol_triple_protobuf">protobuf+triple protocol interoperability (triple protocol)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this document, we will demonstrate the service discovery interoperability between dubbo java and dubbo go. With the combination of protocol compatibility, we can achieve full interoperability between the dubbo java and dubbo go microservice systems.&lt;/p></description></item></channel></rss>