<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration Manual on Apache Dubbo</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/config/api/</link><description>Recent content in Configuration Manual on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/config/api/index.xml" rel="self" type="application/rss+xml"/><item><title>API Configuration</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/config/api/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/config/api/api/</guid><description>&lt;p>As an RPC framework, Dubbo defines a complete set of API interfaces, allowing us to develop Dubbo applications based on the native API. For specific examples of using the native API to develop lightweight RPC and microservices applications, see the examples in &lt;a href="https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/develop/api/">Tutorial - API Development Mode&lt;/a>. Its applicable scenarios fall into two categories:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Lightweight RPC Server &amp;amp; Client&lt;/strong>, typically used for simple remote call scenarios within applications, basic components, middleware, etc.&lt;/li>
&lt;li>&lt;strong>Microservice Applications&lt;/strong>, developing microservices directly using APIs without relying on Spring or Spring Boot; using APIs directly can also be useful for gateway or testing platform integration scenarios.&lt;/li>
&lt;/ul>
&lt;p>The current entry APIs primarily include &lt;code>Bootstrap&lt;/code>, &lt;code>ServiceConfig&lt;/code>, &lt;code>ReferenceConfig&lt;/code>, etc., which are used for Dubbo application development in different scenarios.&lt;/p></description></item></channel></rss>