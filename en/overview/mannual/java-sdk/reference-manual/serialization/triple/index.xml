<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Serialization supported by the triple protocol on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/</link><description>Recent content in Serialization supported by the triple protocol on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Use Protobuf and JSON Serialization in the Context of the Triple Protocol</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/protobuf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/protobuf/</guid><description>&lt;h2 id="1-introduction">1 Introduction&lt;/h2>
&lt;p>&lt;a href="" target="_blank">Protobuf (Protocol Buffers)&lt;/a> is a lightweight and efficient data interchange format developed by Google, used for the serialization, deserialization, and transmission of structured data. Compared to text formats like XML and JSON, Protobuf has smaller data sizes, faster parsing speeds, and better scalability.&lt;/p>
&lt;h2 id="2-usage">2 Usage&lt;/h2>
&lt;p>&lt;strong>When using &lt;a href="https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/triple/idl/">Protobuf (IDL) to develop triple communication services&lt;/a>, the Dubbo server will automatically enable support for protobuf and protobuf-json serialization modes.&lt;/strong>&lt;/p>
&lt;h3 id="21-add-dependencies">2.1 Add Dependencies&lt;/h3>
&lt;p>To use the triple + protobuf mode, the following dependencies must be added:&lt;/p></description></item><item><title>Implementation of the underlying serialization mechanism when developing triple services based on the Java interface model</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/wrapper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/serialization/triple/wrapper/</guid><description>&lt;h2 id="1-introduction">1 Introduction&lt;/h2>
&lt;p>The triple protocol implemented by Dubbo offers better usability (not binding Protobuf), allowing developers to directly define services using Java interfaces. For users expecting a smooth upgrade, with no multilingual services, or unfamiliar with Protobuf, the Java interface approach is the simplest way to use triple.&lt;/p>
&lt;p>The following details the underlying serialization specifics in this protocol model: the framework will wrap the request and response using a built-in protobuf object, &lt;strong>which means the object will be serialized twice. The first serialization is done using the method specified by &lt;code>serialization=hessian&lt;/code>, and the second is to wrap the byte[] serialized in the first step with the protobuf wrapper before transmission&lt;/strong>.&lt;/p></description></item></channel></rss>