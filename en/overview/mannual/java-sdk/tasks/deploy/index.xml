<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Package and Deploy Applications on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/</link><description>Recent content in Package and Deploy Applications on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>Traditional deployment architecture based on Zookeeper and Nacos for deploying Dubbo applications in a virtual machine environment</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-vm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-vm/</guid><description>&lt;p>The following diagram illustrates a typical Dubbo microservice deployment architecture using Nacos and Zookeeper as the registration center.&lt;/p>
&lt;img src="https://cn.dubbo.apache.org/imgs/v3/manual/java/tutorial/kubernetes/kubernetes.png" style="max-width:650px;height:auto;" />
&lt;h2 id="install-nacos">Install Nacos&lt;/h2>
&lt;p>Please refer to the following documentation for how to &lt;a href="https://cn.dubbo.apache.org/en/">install Nacos&lt;/a> locally.&lt;/p>
&lt;h2 id="deploy-application">Deploy Application&lt;/h2>
&lt;p>We will continue to use the project in &lt;a href="https://cn.dubbo.apache.org/en/">Quick Start&lt;/a> as an example to demonstrate the detailed steps for application packaging and deployment.&lt;/p>
&lt;p>Clone the sample project locally:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ git clone -b main --depth &lt;span style="color:#2aa198">1&lt;/span> https://github.com/apache/dubbo-samples
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Switch to the sample directory:&lt;/p></description></item><item><title>Deploying Dubbo Applications to Kubernetes Environments</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-kubernetes/</guid><description>&lt;p>This model is not much different from traditional non-Kubernetes deployments. As shown in the picture below, Nacos or Zookeeper is still used as the registry, but Kubernetes is used as the underlying platform for application lifecycle scheduling.&lt;/p>
&lt;img src="https://cn.dubbo.apache.org/imgs/v3/manual/java/tutorial/kubernetes/kubernetes.png" style="max-width:650px;height:auto;" />
&lt;h2 id="install-nacos">Install Nacos&lt;/h2>
&lt;p>In Kubernetes mode, we recommend using &lt;code>dubboctl&lt;/code> to quickly install components like Nacos, dubbo-control-plane, prometheus, etc.:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>$ dubboctl install --profile=demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>

 &lt;ol>
&lt;li>Please refer to dubboctl for more details.&lt;/li>
&lt;li>You can also check out the official Nacos installation plan for Kubernetes clusters.&lt;/li>
&lt;/ol>


&lt;/div>

&lt;h2 id="deploy-application">Deploy Application&lt;/h2>
&lt;p>We still take the project in &lt;a href="https://cn.dubbo.apache.org/en/">Quick Start&lt;/a> as an example to demonstrate the specific steps for packaging and deploying the application.&lt;/p></description></item><item><title>Deploying Dubbo Applications to a Virtual Machine Environment</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-kubernetes-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/deploy/deploy-on-kubernetes-service/</guid><description>&lt;p>This model maps Dubbo Service to the concept of &lt;a target="_blank" href="">Kubernetes Service&lt;/a>, eliminating the need for traditional registries like Nacos, with the Kubernetes APISERVER taking on the role of the registry.&lt;/p>
&lt;img src="https://cn.dubbo.apache.org/imgs/v3/manual/java/tutorial/kubernetes/kubernetes-service.png" style="max-width:650px;height:auto;" />
&lt;h2 id="install-control-plane">Install Control Plane&lt;/h2>
&lt;p>In this model, we need to install &lt;code>dubbo-control-plane&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>Should it work with istio (providing xds push capability), or should dubbo-control-plane implement the xds server itself?&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>dubboctl manifests install --profile=control-plane
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-application">Deploy Application&lt;/h2>
&lt;h3 id="package-image">Package Image&lt;/h3>
&lt;h3 id="define-yaml">Define YAML&lt;/h3>
&lt;p>Please refer to dubbo-samples for examples.&lt;/p></description></item></channel></rss>