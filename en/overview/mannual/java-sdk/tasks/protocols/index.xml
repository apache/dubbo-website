<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Communication Protocol on Apache Dubbo</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/</link><description>Recent content in Communication Protocol on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/index.xml" rel="self" type="application/rss+xml"/><item><title>RPC Communication Protocols Supported by Dubbo</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/protocol/</guid><description>&lt;p>As an RPC framework, Dubbo comes with efficient RPC communication protocols to solve encoding and communication issues between services. The currently supported protocols include:&lt;/p>
&lt;ul>
&lt;li>triple, a high-performance communication protocol based on HTTP/1 and HTTP/2, 100% compatible with gRPC, supporting Unary, Streaming, and other communication patterns; supports publishing REST-style HTTP services.&lt;/li>
&lt;li>dubbo, a high-performance private communication protocol based on TCP, with the drawback of poor universality, more suitable for use between Dubbo SDKs;&lt;/li>
&lt;li>Any protocol extension, supports any RPC protocol through extended protocol, with official ecosystem libraries providing support for JsonRPC, thrift, etc.&lt;/li>
&lt;/ul>
&lt;h2 id="protocol-overview">Protocol Overview&lt;/h2>
&lt;h3 id="which-protocol-to-use">Which protocol to use?&lt;/h3>
&lt;p>&lt;strong>How should developers determine which protocol to use?&lt;/strong> Below is a comparative analysis of several mainstream protocols from the perspectives of usage scenarios, performance, ease of programming, and multi-language interoperability:&lt;/p></description></item><item><title>TCP-based RPC Communication Protocol - dubbo</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/dubbo/</guid><description>&lt;p>This example demonstrates how to develop services based on &lt;code>dubbo&lt;/code> protocol communication, and you can view the &lt;a href="https://github.com/apache/dubbo-samples/tree/master/2-advanced/dubbo-samples-dubbo">full code of this example&lt;/a>:&lt;/p>


&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>

 To ensure compatibility with older versions, the default protocol for Dubbo 3.3.0 and earlier is &lt;code>dubbo&lt;/code>. However, if you are a new user considering using Dubbo to build a brand-new microservices system, we recommend that you explicitly configure your application to use the &lt;code>triple&lt;/code> protocol.

&lt;/div>

&lt;h2 id="running-the-example">Running the Example&lt;/h2>
&lt;p>You can follow these steps to try running the example source code corresponding to this document.&lt;/p></description></item><item><title>Publishing REST-style Services</title><link>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/mannual/java-sdk/tasks/protocols/rest/</guid><description>&lt;div class="alert alert-primary" role="alert">


 The &amp;ldquo;rest protocol&amp;rdquo; discussed in this article is not a true protocol implementation, but rather a way to make the triple protocol support direct access via REST-style HTTP requests.
We will demonstrate how to access Dubbo services using REST requests.

&lt;/div>



&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>

 Starting from Dubbo version 3.3, the REST protocol has been moved to the extensions library, with the triple protocol providing more comprehensive support for REST. The built-in protocol implementations now only include triple and dubbo.
&lt;br>Therefore, when we mention REST, we are referring to the REST access support capabilities of the triple protocol. For more details, see &lt;a href="https://dubbo.apache.org/en/overview/mannual/java-sdk/reference-manual/protocol/tripe-rest-manual/">Triple REST User Manual&lt;/a>

&lt;/div>

&lt;p>When discussing the &lt;a href="../triple/interface/#curl">triple protocol example&lt;/a>, we mentioned that the triple protocol supports direct access in &lt;code>application/json&lt;/code> format:&lt;/p></description></item></channel></rss>