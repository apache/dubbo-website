<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed Transactions on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/trasaction/</link><description>Recent content in Distributed Transactions on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/trasaction/index.xml" rel="self" type="application/rss+xml"/><item><title>Support Distributed Transactions with Seata</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/trasaction/distributed-transaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/trasaction/distributed-transaction/</guid><description>&lt;p>This example demonstrates how to implement Dubbo distributed transaction functionality using Apache Seata to ensure data consistency.&lt;/p>
&lt;p>Apache Seata is an open-source distributed transaction solution that aims to provide high-performance and easy-to-use distributed transaction services under microservices architecture. Integrating Seata with Dubbo to achieve distributed transactions is very convenient, requiring just a few simple steps. This article will guide you through a quick experience with an example; the overall architecture diagram is as follows:&lt;/p></description></item></channel></rss>