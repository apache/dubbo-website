<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Troubleshooting on Apache Dubbo</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/</link><description>Recent content in Troubleshooting on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/index.xml" rel="self" type="application/rss+xml"/><item><title>Application Start Failure</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/start-failed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/start-failed/</guid><description>&lt;p>During the development and production deployment stages, applications may fail to start due to various unexpected changes. For Dubbo, startup failures usually present error messages similar to the following.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Caused by: java.lang.IllegalStateException: Dubbo Module&lt;span style="color:#719e07">[&lt;/span>1.1.1&lt;span style="color:#719e07">]&lt;/span> is stopping or stopped, can not start again
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#719e07">[&lt;/span>DUBBO&lt;span style="color:#719e07">]&lt;/span> Dubbo Application&lt;span style="color:#719e07">[&lt;/span>1.1&lt;span style="color:#719e07">](&lt;/span>first-dubbo-consumer&lt;span style="color:#719e07">)&lt;/span> start failure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Correctly configure log output, go back to the first error location and handle it.&lt;/p>
&lt;h2 id="troubleshooting-methods">Troubleshooting Methods&lt;/h2>
&lt;h3 id="1-configure-log-output">1 Configure Log Output&lt;/h3>
&lt;p>Dubbo currently supports multiple log frameworks. If multiple log frameworks (such as log4j and logback) are supported in the environment, Dubbo will output log frameworks in the order of (log4j &amp;gt; slf4j &amp;gt; log4j2 &amp;gt; jcl).&lt;/p></description></item><item><title>Request Timing Sampling</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/profiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/profiler/</guid><description>&lt;p>The performance sampling feature can detect the time spent at various points in the Dubbo processing chain, logging the call duration when a timeout occurs &lt;code>( usageTime / timeout &amp;gt; profilerWarnPercent * 100 )&lt;/code>.&lt;/p>
&lt;p>This feature has two modes: &lt;code>simple profiler&lt;/code> and &lt;code>detail profiler&lt;/code>, where the &lt;code>simple profiler&lt;/code> mode is enabled by default and the &lt;code>detail profiler&lt;/code> mode is disabled by default. The &lt;code>detail profiler&lt;/code> collects more data, such as the processing time of each filter and specific protocol timing. If long processing times are detected in the Dubbo framework while in &lt;code>simple profiler&lt;/code> mode, you can enable &lt;code>detail profiler&lt;/code> mode to better troubleshoot issues.&lt;/p></description></item><item><title>Address not found exception</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/no-provider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/no-provider/</guid><description>&lt;p>During the development and production deployment process, since Dubbo is a framework that requires service discovery for calls, it is easy to encounter &lt;code>No Provider&lt;/code> exceptions due to various objective reasons. This article aims to provide a systematic troubleshooting approach to help you quickly locate and resolve the issue when exceptions occur.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>java.lang.IllegalStateException: Failed to check the status of the service org.apache.dubbo.samples.api.GreetingsService. No provider available for the service org.apache.dubbo.samples.api.GreetingsService from the url consumer://*** to the consumer 30.221.146.226 use dubbo version 3.2.0-beta.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>Exception in thread &amp;#34;main&amp;#34; org.apache.dubbo.rpc.RpcException: No provider available from registry 127.0.0.1:2181 for service org.apache.dubbo.samples.api.GreetingsService on consumer 30.221.146.226 use dubbo version 3.2.0-beta.4, please check status of providers(disabled, not registered or in blacklist).
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="summary-in-one-sentence">Summary in one sentence&lt;/h2>
&lt;p>When the service cannot be found, first check whether the service is fully developed and deployed, then corroborate whether it is registered in the registry, check the service side&amp;rsquo;s published status if registered, and consumer side&amp;rsquo;s subscription status if not registered. Any step along this way encountering issues will lead to exceptions.&lt;/p></description></item><item><title>Low Request Success Rate</title><link>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/request-failed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/en/overview/mannual/java-sdk/tasks/troubleshoot/request-failed/</guid><description>&lt;p>In a production environment, the request success rate and latency are the most critical metrics. This article will introduce troubleshooting approaches when the request success rate decreases.&lt;/p>
&lt;h2 id="summary-in-one-sentence">Summary in One Sentence&lt;/h2>
&lt;p>Analyze bottlenecks through end-to-end metrics (consumer end, network, server end, external dependencies, etc.)&lt;/p>
&lt;p>&lt;img alt="img" src="https://cn.dubbo.apache.org/imgs/docs3-v2/java-sdk/troubleshoot/1677487652373-fdc41dbd-0fe0-461f-b827-fa8db68ba2a2.jpeg">&lt;/p>
&lt;h2 id="troubleshooting-approaches">Troubleshooting Approaches&lt;/h2>
&lt;h3 id="1-is-the-consumer-end-constructing-requests-normally">1 Is the Consumer End Constructing Requests Normally?&lt;/h3>
&lt;h4 id="11-check-if-class-objects-are-serializable">1.1 Check if Class Objects Are Serializable&lt;/h4>
&lt;p>When using Dubbo for RPC remote calls, due to cross-process calls, Dubbo checks whether all data objects implement the &lt;code>Serializable&lt;/code> interface to prevent unexpected data requests over the network.&lt;/p></description></item></channel></rss>