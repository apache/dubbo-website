<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How to smoothly migrate to the new functions of Dubbo3 on Apache Dubbo</title><link>https://dubbo.apache.org/en/overview/tasks/migration/</link><description>Recent content in How to smoothly migrate to the new functions of Dubbo3 on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/overview/tasks/migration/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrade to Dubbo3</title><link>https://dubbo.apache.org/en/overview/tasks/migration/2to3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/tasks/migration/2to3/</guid><description>&lt;p>** Upgrade directly to Dubbo 3.0 without changing any code. **&lt;/p>
&lt;p>At the beginning of the design and development of version 3.0, we set the goal of being compatible with older versions of Dubbo users (2.5, 2.6, 2.7). Therefore, the upgrade process to version 3.0 will be completely transparent, users do not need to do any business transformation, and the behavior of the framework after upgrading to version 3.x will remain completely consistent with version 2.x.&lt;/p></description></item><item><title>Guide to Migrating Dubbo Protocol to Triple Protocol</title><link>https://dubbo.apache.org/en/overview/tasks/migration/migration-triple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/tasks/migration/migration-triple/</guid><description>&lt;h2 id="triple-introduction">Triple Introduction&lt;/h2>
&lt;p>For the format and principle of the &lt;code>Triple&lt;/code> protocol, please refer to &lt;a href="https://dubbo.apache.org/en/docs3-v2/java-sdk/reference-manual/protocol/triple/overview/">RPC Communication Protocol&lt;/a>&lt;/p>
&lt;p>According to the goals of Triple design, the &lt;code>Triple&lt;/code> protocol has the following advantages:&lt;/p>
&lt;ul>
&lt;li>Capable of cross-language interaction. Both the traditional multi-language and multi-SDK mode and the Mesh cross-language mode require a more general and scalable data transmission protocol.&lt;/li>
&lt;li>Provide a more complete request model. In addition to supporting the traditional Request/Response model (Unary one-way communication), it also supports Stream (streaming communication) and Bidirectional (two-way communication).&lt;/li>
&lt;li>Easy to expand, high penetration, including but not limited to Tracing / Monitoring and other support, should also be recognized by devices at all levels, gateway facilities, etc. can identify data packets, friendly to Service Mesh deployment, and reduce the difficulty of understanding for users.&lt;/li>
&lt;li>Fully compatible with grpc, the client/server can communicate with the native grpc client.&lt;/li>
&lt;li>Components in the existing grpc ecosystem can be reused to meet cross-language, cross-environment, and cross-platform intercommunication requirements in cloud-native scenarios.&lt;/li>
&lt;/ul>
&lt;p>For Dubbo users currently using other protocols, the framework provides migration capabilities compatible with existing serialization methods. Without affecting existing online businesses, the cost of migrating protocols is almost zero.&lt;/p></description></item><item><title>Dubbo3 application-level service discovery</title><link>https://dubbo.apache.org/en/overview/tasks/migration/service-discovery-samples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/tasks/migration/service-discovery-samples/</guid><description>&lt;p>Application-level service discovery is a protocol for service discovery between applications. Therefore, to use application-level service discovery, both the consumer and the server must be upgraded to Dubbo 3.0 and new features enabled (enabled by default) to use application-level service discovery in the link. Take advantage of application-level service discovery.&lt;/p>
&lt;h2 id="open-method">Open method&lt;/h2>
&lt;h2 id="server">Server&lt;/h2>
&lt;p>After the application is upgraded to Dubbo 3.0, the server will automatically enable the interface-level + application-level dual registration function, and the developer does not need to modify any configuration by default&lt;/p></description></item></channel></rss>