<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction to Dubbo on Apache Dubbo</title><link>https://dubbo.apache.org/en/overview/what/</link><description>Recent content in Introduction to Dubbo on Apache Dubbo</description><generator>Hugo</generator><language>en</language><atom:link href="https://dubbo.apache.org/en/overview/what/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Dubbo Core Concepts and Architecture</title><link>https://dubbo.apache.org/en/overview/what/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/what/overview/</guid><description>&lt;p>&lt;img alt="architecture" src="https://dubbo.apache.org/imgs/v3/concepts/architecture-2.png">&lt;/p>
&lt;p>The above is a diagram of Dubbo&amp;rsquo;s working principle, which is divided into two layers from an abstract architecture perspective: &lt;strong>Service Governance Abstract Control Plane&lt;/strong> and &lt;strong>Dubbo Data Plane&lt;/strong>.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Service Governance Control Plane&lt;/strong>. The service governance control plane does not specifically refer to a single component like a registry but is an abstract expression of the Dubbo governance system. The control plane includes the registry that coordinates service discovery, traffic control strategies, Dubbo Admin console, etc. If the Service Mesh architecture is adopted, it also includes service mesh control planes like Istio.&lt;/li>
&lt;li>&lt;strong>Dubbo Data Plane&lt;/strong>. The data plane represents all Dubbo processes deployed in the cluster. These processes exchange data through the RPC protocol. Dubbo defines the development and invocation specifications for microservice applications and is responsible for the encoding and decoding of data transmission.
&lt;ul>
&lt;li>Service Consumer (Dubbo Consumer), the Dubbo process that initiates business calls or RPC communication&lt;/li>
&lt;li>Service Provider (Dubbo Provider), the Dubbo process that receives business calls or RPC communication&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="dubbo-data-plane">Dubbo Data Plane&lt;/h2>
&lt;p>From the data plane perspective, Dubbo helps solve the following problems in microservice practices:&lt;/p></description></item><item><title>Relationship with gRPC, Spring Cloud, Istio</title><link>https://dubbo.apache.org/en/overview/what/xyz-difference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/overview/what/xyz-difference/</guid><description>&lt;p>Many developers often ask about the relationship between Apache Dubbo and Spring Cloud, gRPC, and some Service Mesh projects like Istio. Explaining their relationships is not difficult; you just need to follow this article and delve deeper into the Dubbo documentation. In general, some of their capabilities overlap, but in some scenarios, you can use them together.&lt;/p>
&lt;p>Although this document is written by Dubbo maintainers, we will still strive to objectively and transparently present the connections and differences between Dubbo and other components. However, considering that everyone&amp;rsquo;s familiarity with different products varies, some expressions here may not be entirely accurate. We hope this can help developers.&lt;/p></description></item></channel></rss>