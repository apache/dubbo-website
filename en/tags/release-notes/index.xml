<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release Notes on Apache Dubbo</title><link>https://dubbo.apache.org/en/tags/release-notes/</link><description>Recent content in Release Notes on Apache Dubbo</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 30 Sep 2024 17:53:33 +0800</lastBuildDate><atom:link href="https://dubbo.apache.org/en/tags/release-notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Dubbo Java 3.1.4 Official Release</title><link>https://dubbo.apache.org/en/blog/2022/12/01/dubbo-java-3.1.4-official-release/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2022/12/01/dubbo-java-3.1.4-official-release/</guid><description>&lt;p>Dubbo 3.1.4 is the latest stable version of Dubbo 3, and we recommend all users upgrade to the latest stable version.&lt;/p>
&lt;h1 id="dubbo-314">Dubbo 3.1.4&lt;/h1>
&lt;p>&lt;img alt="image.png" src="https://dubbo.apache.org/imgs/blog/release/3-1-4.png">&lt;/p>
&lt;h3 id="new-features">New Features&lt;/h3>
&lt;ul>
&lt;li>Dubbo QoS supports a specified whitelist IP list to access all commands&lt;/li>
&lt;/ul>
&lt;h3 id="bugfix">Bugfix&lt;/h3>
&lt;ul>
&lt;li>Fix incorrect collection of method names in Dubbo Metrics during generic calls&lt;/li>
&lt;li>Fix potential overlap issues in interface mapping when using Zookeeper as a metadata center&lt;/li>
&lt;li>Fix support for timeout countdown in Triple protocol&lt;/li>
&lt;li>Fix transparency issue with timeout countdown&lt;/li>
&lt;li>Fix NPE issues caused by no available addresses during multi-registry requests&lt;/li>
&lt;li>Fix null remoteApplicationName issue in Triple under Mesh mode&lt;/li>
&lt;li>Fix support for GraalVM Native Image&lt;/li>
&lt;li>Fix NPE exception caused by SSL connection when port reuse occurs&lt;/li>
&lt;li>Improve output format of JDK compiler error logs&lt;/li>
&lt;li>Fix application startup issues when MetadataReportConfig is partially configured&lt;/li>
&lt;li>Fix ineffectiveness of dubbo.reference as a default parameter in 3.x versions&lt;/li>
&lt;li>Improve logs for Zookeeper connection failures&lt;/li>
&lt;li>Fix potential overwriting of ClassLoader configured in ReferenceConfig&lt;/li>
&lt;li>Fix issues where certain properties were cached in instance-level addresses leading to method-level configuration failures&lt;/li>
&lt;li>Fix onError exception issue in Triple protocol&lt;/li>
&lt;/ul>
&lt;h3 id="faq">FAQ&lt;/h3>
&lt;p>This release includes 3 commits addressing the improvement of exception log FAQ. Refer to the official error code mechanism introduction document for more details. (&lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/java-sdk/reference-manual/faq/intro/">https://cn.dubbo.apache.org/zh-cn/overview/java-sdk/reference-manual/faq/intro/&lt;/a>)&lt;/p></description></item><item><title>Dubbo Java 3.0.2 Release Announcement</title><link>https://dubbo.apache.org/en/blog/2021/07/18/dubbo-java-3.0.2-release-announcement/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2021/07/18/dubbo-java-3.0.2-release-announcement/</guid><description>&lt;h2 id="new-features">New Features&lt;/h2>
&lt;ul>
&lt;li>Support for exposing generalized services via the @DubboService annotation&lt;/li>
&lt;li>XML configuration support for the metadata center with protocol and port attributes&lt;/li>
&lt;li>Compatibility with versions above curator5&lt;/li>
&lt;li>Point-to-point calls support wildcard matching, allowing one provider address to correspond to multiple interfaces&lt;/li>
&lt;li>Dynamic configuration added for application-level service discovery to override rules&lt;/li>
&lt;li>Provides a switch for dynamic configuration override rules for providers, allowing them to ignore dynamic configuration and not re-expose&lt;/li>
&lt;li>Supports native image&lt;/li>
&lt;li>Provides a switch to cancel the execution of the shutdown hook&lt;/li>
&lt;li>Supports service governance rules for Kubernetes Mesh&lt;/li>
&lt;li>Netty connection supports SSL configuration&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug Fixes&lt;/h2>
&lt;ul>
&lt;li>DubboBootStrap start duplication causes dynamic configuration to be overridden&lt;/li>
&lt;li>Dynamic configuration rules remain effective after deletion&lt;/li>
&lt;li>NullPointerException thrown when exposing triple protocol&lt;/li>
&lt;li>ConfigCenterConfig.setAddress method overwrites the username attribute&lt;/li>
&lt;li>DefaultFuture.closeChannel destroys consumer-side thread pool&lt;/li>
&lt;li>TripleClientHandler.writeRequest throws NullPointerException&lt;/li>
&lt;li>NullPointerException thrown when parsing 3.0 migration rules exception&lt;/li>
&lt;li>Order issue with Activated Extensions&lt;/li>
&lt;li>URLAddress.parse method has issues parsing ipv6 addresses&lt;/li>
&lt;li>User-defined parameters in properties configuration are ineffective&lt;/li>
&lt;li>Configuration overlap issue when using API model and Spring model simultaneously&lt;/li>
&lt;li>Application-level service discovery ineffective at startup&lt;/li>
&lt;li>Nacos registry fails to dynamically detect changes in the number of providers&lt;/li>
&lt;li>${dubbo.application} cannot be resolved by the Spring placeholder rules in XML files&lt;/li>
&lt;li>Issue obtaining the order of instance parameters, first obtaining instance-level parameters, then interface-level parameters&lt;/li>
&lt;li>Exception thrown when registering application startup listener if DubboConfigBeanInitializer does not exist&lt;/li>
&lt;li>Mock parameters containing &amp;lsquo;:&amp;rsquo; or &amp;lsquo;=&amp;rsquo; characters are ineffective&lt;/li>
&lt;li>NullPointerException when deleting Mesh rules&lt;/li>
&lt;/ul>
&lt;h2 id="optimization">Optimization&lt;/h2>
&lt;ul>
&lt;li>Catch exceptions in RemovalTask to ensure semaphore can be released&lt;/li>
&lt;li>Check for duplicate ReferenceConfig/ServiceConfig using unique service names&lt;/li>
&lt;li>Optimize random number generation performance&lt;/li>
&lt;li>If users use interface-level service discovery, do not publish application-interface mapping data to the metadata center&lt;/li>
&lt;li>Use StringBuilder#append(Char) to improve performance&lt;/li>
&lt;li>Ensure the order of interfaces in GRPC compiled class files&lt;/li>
&lt;li>Optimize reference bean placeholder resolution&lt;/li>
&lt;li>Utilize CompletableFuture#get(long, TimeUnit) in MergeableClusterInvoker for performance improvement&lt;/li>
&lt;li>Built-in service MetadataService does not delay exposure&lt;/li>
&lt;li>Optimize the startup logic of ConfigBean and Bootstrap&lt;/li>
&lt;li>Optimize logic for checking duplicate Configs&lt;/li>
&lt;li>Use ring data structures for registration notifications&lt;/li>
&lt;li>Optimize initialization logic for dynamic configurations&lt;/li>
&lt;li>ConfigManager uses ConcurrentHashMap to remove locking logic, improving equals and toString performance&lt;/li>
&lt;li>Optimize MetadataInfo equals method and Instance Listener&lt;/li>
&lt;li>Optimize asynchronous export/refer logic&lt;/li>
&lt;li>Use TreeSet data structure to ensure the order of application names during application-level service discovery&lt;/li>
&lt;li>First ten notifications from RegistryNotifier are not delayed&lt;/li>
&lt;li>dubbo-compile compiles using a new format to generate stubs&lt;/li>
&lt;li>Mesh service governance rules unify grouping and other rule groupings in the dynamic configuration center, changing DEFAULT_GROUP to dubbo&lt;/li>
&lt;li>When using nacos as a registration center, parameters can be used in the registration center address to change the grouping in nacos&lt;/li>
&lt;li>When calculating ServiceInfo reversion, remove runtime parameters to avoid generating multiple revisions&lt;/li>
&lt;li>Nacos registry wraps exceptions as RpcException on throw&lt;/li>
&lt;li>Prevent dynamic configuration center from dynamically modifying some permission parameters&lt;/li>
&lt;li>Optimize initialization process of Config Bean and ensure compatibility with spring 3.x/4.1.x&lt;/li>
&lt;li>Bootstrap.start method is reentrant, exposing or referencing new services&lt;/li>
&lt;li>Add classes in the org.apache.dubbo package to the whitelist by default&lt;/li>
&lt;li>Ensure the uniqueness of generated Config Id and check for previous existence&lt;/li>
&lt;li>Javaassist compatible with changing override declaration fields&lt;/li>
&lt;li>Refactor check logic during decoding, throwing exceptions when providers corresponding to path and version are not found&lt;/li>
&lt;li>When ApplicationModel is null, compatible with adaptive extensions&lt;/li>
&lt;/ul>
&lt;h2 id="code-quality-improvements">Code Quality Improvements&lt;/h2>
&lt;p>Thanks for the contributions that enhance the stability of Apache Dubbo.&lt;/p></description></item><item><title>Dubbo Java 3.1.3 Official Release</title><link>https://dubbo.apache.org/en/blog/2022/07/18/dubbo-java-3.1.3-official-release/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2022/07/18/dubbo-java-3.1.3-official-release/</guid><description>&lt;h2 id="dubbo-313">Dubbo 3.1.3&lt;/h2>
&lt;p>&lt;img alt="image.png" src="https://dubbo.apache.org/imgs/blog/release/3-1-3.png">&lt;/p>
&lt;h3 id="changes">Changes&lt;/h3>
&lt;ul>
&lt;li>Fixed the issue of abnormal Filter order during local calls&lt;/li>
&lt;li>Supported importing protocol configuration items into MetadataService&lt;/li>
&lt;li>Supported automatically selecting available ports when publishing MetadataService&lt;/li>
&lt;li>Improved error code content&lt;/li>
&lt;li>Supported consistent hashing load balancing in generic calls&lt;/li>
&lt;li>Fixed deserialization exception issue during generic calls&lt;/li>
&lt;li>Fixed application-level metadata reuse issue caused by inconsistent JVM Methods order&lt;/li>
&lt;li>Defaulted to disabling port reuse capability and fixed the remoting component&amp;rsquo;s inability to find SPI&lt;/li>
&lt;li>Fixed safe guard issues caused by abnormal reference counting&lt;/li>
&lt;li>Removed guava dependency used in Nacos registry component&lt;/li>
&lt;li>Fixed offline issue due to address aggregation when using Nacos registry at the interface level&lt;/li>
&lt;li>Multiple code quality optimization commits&lt;/li>
&lt;/ul>
&lt;h3 id="new-contributors">New Contributors&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/zhangzq7">@zhangzq7&lt;/a> made the first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10847">#10847&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/akaakking">@akaakking&lt;/a> made the first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10799">#10799&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/wxbty">@wxbty&lt;/a> made the first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10921">#10921&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/haoxz11">@haoxz11&lt;/a> made the first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10937">#10937&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="new-contributor">New Contributor&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/weixsun">@weixsun&lt;/a> made the first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10941">#10941&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="future-version-planning">Future Version Planning&lt;/h2>
&lt;p>What are the differences between 3.0, 3.1, and 3.2? How will it develop in the future? What is the release cycle? More version iteration plans will be released soon; please follow the official Apache Dubbo WeChat account for the latest information.&lt;/p></description></item><item><title>Dubbo Java 3.2.0-beta.3 Official Release</title><link>https://dubbo.apache.org/en/blog/2022/12/18/dubbo-java-3.2.0-beta.3-official-release/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2022/12/18/dubbo-java-3.2.0-beta.3-official-release/</guid><description>&lt;p>Dubbo version 3.2.0-beta.3 is the latest feature version of Dubbo 3, supporting new features such as Spring Boot 3, JDK 17, service-level thread pool isolation, and more. Everyone is welcome to try it out.&lt;/p>
&lt;h1 id="dubbo-320-beta3">Dubbo 3.2.0-beta.3&lt;/h1>
&lt;p>&lt;img alt="image.png" src="https://dubbo.apache.org/imgs/blog/release/3-2-0-beta-3.png">&lt;/p>
&lt;p>&lt;strong>Note: The codebase of Dubbo 3.2.0-beta.3 is identical to Dubbo 3.1.4, so all modifications included in Dubbo 3.1.4 are also present in Dubbo 3.2.0-beta.3. Duplicate content will not be repeated in the following description.&lt;/strong>&lt;/p></description></item><item><title>Dubbo 3.2.0-beta.2 Official Release</title><link>https://dubbo.apache.org/en/blog/2022/11/18/dubbo-3.2.0-beta.2-official-release/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2022/11/18/dubbo-3.2.0-beta.2-official-release/</guid><description>&lt;h2 id="dubbo-320-beta2">Dubbo 3.2.0-beta.2&lt;/h2>
&lt;p>&lt;img alt="image.png" src="https://dubbo.apache.org/imgs/blog/release/3-2-0-beta-2.png">&lt;/p>
&lt;h3 id="changes">Changes&lt;/h3>
&lt;ul>
&lt;li>Switched to user thread serialization to enhance protocol performance&lt;/li>
&lt;li>Supported port reuse for Netty3&lt;/li>
&lt;li>Fixed the issue where providedBy does not work with multiple user configurations&lt;/li>
&lt;li>Supported istio&amp;rsquo;s first-party-jwt capability&lt;/li>
&lt;li>Removed transitive dependencies of fastjson and gson&lt;/li>
&lt;li>Supported optional appResponse non-transmission capability&lt;/li>
&lt;li>Switched to Fastjson2 as the default serialization dependency&lt;/li>
&lt;li>Improved the logs pushed by the registration center&lt;/li>
&lt;li>Fixed the issue where the routing refresh timing is earlier than the service directory refresh timing&lt;/li>
&lt;li>Disabled address null protection&lt;/li>
&lt;li>Updated SPI code generation to support GraalVM Native&lt;/li>
&lt;li>Supported transmitting xds channels in plain text mode&lt;/li>
&lt;li>Supported Nacos batch registration and fixed multi-registration overlay issues&lt;/li>
&lt;li>Supported Spring Framework 6 and Spring Boot 3&lt;/li>
&lt;li>Multiple code quality optimization commits&lt;/li>
&lt;li>All changes from the aforementioned Dubbo 3.1.3&lt;/li>
&lt;/ul>
&lt;h3 id="new-contributors">New Contributors&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/weixsun">@weixsun&lt;/a> made their first contribution in &lt;a href="https://github.com/apache/dubbo/pull/10941">#10941&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="future-release-planning">Future Release Planning&lt;/h2>
&lt;p>What are the differences between 3.0, 3.1, and 3.2? How will it develop in the future? What is the release cycle like? More version iteration plans will be announced soon, and you are welcome to follow the official Apache Dubbo WeChat account for the latest information.&lt;/p></description></item><item><title>Dubbo Java 2.7.14 Release Announcement</title><link>https://dubbo.apache.org/en/blog/2020/05/18/dubbo-java-2.7.14-release-announcement/</link><pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2020/05/18/dubbo-java-2.7.14-release-announcement/</guid><description>&lt;h2 id="changes">Changes&lt;/h2>
&lt;ul>
&lt;li>Added coverage rules for dynamic configuration center in ServiceDiscovery. (#8389)&lt;/li>
&lt;li>Fixed the issue where mock parameters containing &amp;lsquo;:&amp;rsquo; or &amp;lsquo;=&amp;rsquo; could not be used properly. (#8379)&lt;/li>
&lt;li>Fixed the issue where the zone parameter could not take effect for ZoneAwareClusterInvoker configuration. (#8521)&lt;/li>
&lt;li>Added a switch for serialization whitelist checks, default is true. (#8537)&lt;/li>
&lt;li>Fixed the null pointer exception during serialization checks when the request times out. (#8587)&lt;/li>
&lt;li>Fixed the issue where NetUtils.ignoreNetworkInterface could not handle network cards containing &amp;lsquo;(&amp;rsquo; symbol. (#8629)&lt;/li>
&lt;li>Unified the method for obtaining local addresses. (#8679)&lt;/li>
&lt;li>Fixed the issue where a retry count of 0 would still retry once. (#8743)&lt;/li>
&lt;li>Immediately close the client when clearing unused invokers. (#8756)&lt;/li>
&lt;li>Fixed exceptions in the destroy method and doOverrideIfNecessary. (#8683)&lt;/li>
&lt;li>DefaultFuture.closeChannel chooses whether to print detailed request data based on log level. (#8778)&lt;/li>
&lt;li>Replaced AttachmentsAdapter with MapUtils. (#8772)&lt;/li>
&lt;/ul>
&lt;h2 id="maven-dependency-changes">Maven Dependency Changes&lt;/h2>
&lt;ul>
&lt;li>netty4: 4.1.51.Final -&amp;gt; 4.1.66.Final&lt;/li>
&lt;li>netty4_ssl: 2.0.39.Final -&amp;gt; 2.0.40.Final&lt;/li>
&lt;li>http_client: 4.5.3 -&amp;gt; 4.5.13&lt;/li>
&lt;li>jetty: 9.4.11.v20180605 -&amp;gt; 9.4.43.v20210629&lt;/li>
&lt;li>apollo_client: 1.1.1 -&amp;gt; 1.8.0&lt;/li>
&lt;li>tomcat_embed: 8.5.31-&amp;gt; 9.0.48&lt;/li>
&lt;li>commons_io: 2.6 -&amp;gt; 2.7&lt;/li>
&lt;li>curator: 5.0.0 -&amp;gt; 5.1.0&lt;/li>
&lt;li>hessian_lite: 3.2.8 -&amp;gt; 3.2.11&lt;/li>
&lt;/ul></description></item><item><title>Apache Dubbo Adds a New Member to Its Multilingual System: The First Rust Language Version is Officially Released</title><link>https://dubbo.apache.org/en/blog/2022/10/23/apache-dubbo-adds-a-new-member-to-its-multilingual-system-the-first-rust-language-version-is-officially-released/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2022/10/23/apache-dubbo-adds-a-new-member-to-its-multilingual-system-the-first-rust-language-version-is-officially-released/</guid><description>&lt;p>Dubbo Rust is positioned as an important implementation of the Dubbo multilingual system, providing a high-performance, easy-to-use, and extensible RPC framework, while offering rich service governance capabilities through integration with the Dubbo Mesh system. This article mainly introduces the basic situation of the Dubbo Rust project, quickly experiences the features of Rust&amp;rsquo;s first official version through an example, and outlines recent plans for the Dubbo Rust community, suitable for developers and enterprises interested in or adopting Rust.&lt;/p></description></item><item><title>Dubbo Java 3.0.2.1 Release Announcement</title><link>https://dubbo.apache.org/en/blog/2021/08/23/dubbo-java-3.0.2.1-release-announcement/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2021/08/23/dubbo-java-3.0.2.1-release-announcement/</guid><description>&lt;p>This is a bug fix version of 3.0.2.&lt;br>
It is identical to version 3.0.2 except for the following changes.&lt;/p>
&lt;h2 id="bug-fixes">Bug Fixes&lt;/h2>
&lt;ul>
&lt;li>Fixed the issue where nacos group did not take effect on the consumer side (#8533)&lt;/li>
&lt;li>Fixed NPE in request timeout serialization check (#8547)&lt;/li>
&lt;li>Compatible with the issue of not importing the fabric-io package when using dubbo-all (#8546)&lt;/li>
&lt;/ul></description></item><item><title>Dubbo Java 3.0.1 Release Announcement</title><link>https://dubbo.apache.org/en/blog/2021/07/02/dubbo-java-3.0.1-release-announcement/</link><pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2021/07/02/dubbo-java-3.0.1-release-announcement/</guid><description>&lt;h2 id="optimization">Optimization&lt;/h2>
&lt;ul>
&lt;li>Refactored service introspection mapping relationship, supporting direct configuration of upstream application name during address migration&lt;/li>
&lt;li>Added caching for Spring scanning&lt;/li>
&lt;li>Optimized configuration overriding logic&lt;/li>
&lt;li>Supported controlling Dubbo lifecycle in Servlet environment&lt;/li>
&lt;li>Added ServiceListener for listening to ServiceConfig&lt;/li>
&lt;li>Optimized method callback parameter settings&lt;/li>
&lt;/ul>
&lt;h2 id="bug-fixes">Bug Fixes&lt;/h2>
&lt;ul>
&lt;li>Enabled strict validation&lt;/li>
&lt;li>Corrected logic where one registry center would destroy when started without addresses under multiple registry centers&lt;/li>
&lt;li>Removed redundant log outputs&lt;/li>
&lt;li>Ignored invalid MetadataReportConfig&lt;/li>
&lt;li>Fixed NPE situation during consumer startup&lt;/li>
&lt;li>Fixed several compatibility issues with lower versions&lt;/li>
&lt;li>Fixed several issues in application-level service discovery logic&lt;/li>
&lt;li>Optimized address migration rules, supporting application-level address re-subscription&lt;/li>
&lt;li>Fixed NPE situations existing in MetadataInfo&lt;/li>
&lt;li>Fixed the issue where instance information registered to the registry center at the application level was incorrectly overwritten&lt;/li>
&lt;/ul>
&lt;h2 id="code-quality-improvement">Code Quality Improvement&lt;/h2>
&lt;p>Thanks to the following contributions that enhanced the stability of Apache Dubbo.&lt;/p></description></item><item><title>Dubbo Go 1.4.0</title><link>https://dubbo.apache.org/en/blog/2021/01/12/dubbo-go-1.4.0/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2021/01/12/dubbo-go-1.4.0/</guid><description>&lt;p>Thanks to the active support of the community, we released an exciting version on March 25, 2020—dubbo-go v1.4.0. In addition to continuing to support some existing Dubbo features, dubbo-go has begun some of its own innovative attempts.&lt;/p>
&lt;p>The most significant aspect of this version is the groundwork laid for cloud-native support. For instance, after long discussions within the community, we finally introduced a solution that uses K8s as the registration center.&lt;/p></description></item><item><title>Analysis of Features in Dubbo Java 2.7.5</title><link>https://dubbo.apache.org/en/blog/2020/05/18/analysis-of-features-in-dubbo-java-2.7.5/</link><pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/en/blog/2020/05/18/analysis-of-features-in-dubbo-java-2.7.5/</guid><description>&lt;p>Recently, the highly anticipated Dubbo 2.7.5 version was officially released. This version introduces many new features, enhances many existing functionalities, and achieves significant performance improvements. It will be a milestone version for both the Dubbo community and developers alike.&lt;/p>
&lt;ul>
&lt;li>Application-level service registration【beta】&lt;/li>
&lt;li>HTTP/2 (gRPC) protocol support&lt;/li>
&lt;li>Protobuf support&lt;/li>
&lt;li>Performance optimization, with a 30% improvement in call chain performance&lt;/li>
&lt;li>Support for TLS secure transport&lt;/li>
&lt;li>Optimized consumer-side thread model&lt;/li>
&lt;li>New load balancing strategies better suited for multi-cluster deployment scenarios&lt;/li>
&lt;li>A brand new application development API (compatible with older versions)【beta】&lt;/li>
&lt;li>Additional feature enhancements and bug fixes&lt;/li>
&lt;/ul>
&lt;p>First, from the perspective of service discovery, the new version breaks through the previous interface-level model and introduces an application-level service discovery mechanism - service introspection. Although this mechanism is still in beta, it lays a solid foundation for Dubbo&amp;rsquo;s alignment with the entire microservices cloud-native system. Thanks to compact protocol design and optimization in code implementation, Dubbo has always performed well in terms of performance, with a further improvement in version 2.7.5. According to stress tests from the official maintenance team, performance in the call chain has improved by 30%. In the cloud-native microservices era, multilingual demand is becoming increasingly common. The universality and penetration of protocols are crucial for building a complete microservice system that connects front-end and back-end services. Dubbo supports HTTP/2 protocol by implementing gRPC protocol while also adding compatibility with Protobuf.&lt;/p></description></item></channel></rss>