{
  "filename": "dubbo-fescar.md",
  "__html": "<h1>如何使用Fescar保证Dubbo微服务间的一致性</h1>\n<h2>案例</h2>\n<p>用户采购商品业务，整个业务包含3个微服务:</p>\n<ul>\n<li>库存服务: 扣减给定商品的库存数量。</li>\n<li>订单服务: 根据采购请求生成订单。</li>\n<li>账户服务: 用户账户金额扣减。</li>\n</ul>\n<h3>业务结构图</h3>\n<p><img src=\"../../img/blog/fescar/fescar-1.png\" alt=\"Architecture\"></p>\n<h3>StorageService</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">StorageService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * deduct storage count\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deduct</span><span class=\"hljs-params\">(String commodityCode, <span class=\"hljs-keyword\">int</span> count)</span></span>;\n}\n</code></pre>\n<h3>OrderService</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">OrderService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * create order\n     */</span>\n    <span class=\"hljs-function\">Order <span class=\"hljs-title\">create</span><span class=\"hljs-params\">(String userId, String commodityCode, <span class=\"hljs-keyword\">int</span> orderCount)</span></span>;\n}\n</code></pre>\n<h3>AccountService</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">AccountService</span> </span>{\n\n    <span class=\"hljs-comment\">/**\n     * debit balance of user's account\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">debit</span><span class=\"hljs-params\">(String userId, <span class=\"hljs-keyword\">int</span> money)</span></span>;\n}\n</code></pre>\n<h3>主要的业务逻辑：</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BusinessServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">BusinessService</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> StorageService storageService;\n\n    <span class=\"hljs-keyword\">private</span> OrderService orderService;\n\n    <span class=\"hljs-comment\">/**\n     * purchase\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">purchase</span><span class=\"hljs-params\">(String userId, String commodityCode, <span class=\"hljs-keyword\">int</span> orderCount)</span> </span>{\n\n        storageService.deduct(commodityCode, orderCount);\n\n        orderService.create(userId, commodityCode, orderCount);\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StorageServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">StorageService</span> </span>{\n\n  <span class=\"hljs-keyword\">private</span> StorageDAO storageDAO;\n  \n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deduct</span><span class=\"hljs-params\">(String commodityCode, <span class=\"hljs-keyword\">int</span> count)</span> </span>{\n        Storage storage = <span class=\"hljs-keyword\">new</span> Storage();\n        storage.setCount(count);\n        storage.setCommodityCode(commodityCode);\n        storageDAO.update(storage);\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OrderServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">OrderService</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> OrderDAO orderDAO;\n\n    <span class=\"hljs-keyword\">private</span> AccountService accountService;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Order <span class=\"hljs-title\">create</span><span class=\"hljs-params\">(String userId, String commodityCode, <span class=\"hljs-keyword\">int</span> orderCount)</span> </span>{\n\n        <span class=\"hljs-keyword\">int</span> orderMoney = calculate(commodityCode, orderCount);\n\n        accountService.debit(userId, orderMoney);\n\n        Order order = <span class=\"hljs-keyword\">new</span> Order();\n        order.userId = userId;\n        order.commodityCode = commodityCode;\n        order.count = orderCount;\n        order.money = orderMoney;\n\n        <span class=\"hljs-keyword\">return</span> orderDAO.insert(order);\n    }\n}\n</code></pre>\n<h2>Fescar 分布式事务解决方案</h2>\n<p><img src=\"../../img/blog/fescar/fescar-2.png\" alt=\"undefined\"></p>\n<p>此处仅仅需要一行注解 <code>@GlobalTransactional</code> 写在业务发起方的方法上:</p>\n<pre><code class=\"language-java\">\n    <span class=\"hljs-meta\">@GlobalTransactional</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">purchase</span><span class=\"hljs-params\">(String userId, String commodityCode, <span class=\"hljs-keyword\">int</span> orderCount)</span> </span>{\n        ......\n    }\n</code></pre>\n<h2>Dubbo 与 Fescar 结合的例子</h2>\n<h3>Step 1: 安装数据库</h3>\n<ul>\n<li>要求: MySQL (InnoDB 存储引擎)。</li>\n</ul>\n<p><strong>提示:</strong> 事实上例子中3个微服务需要3个独立的数据库，但为了方便我们使用同一物理库并配置3个逻辑连接串。</p>\n<p>更改以下xml文件中的数据库url、username和password</p>\n<p>dubbo-account-service.xml\ndubbo-order-service.xml\ndubbo-storage-service.xml</p>\n<pre><code class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"url\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"jdbc:mysql://x.x.x.x:3306/xxx\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"username\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"xxx\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"password\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"xxx\"</span> /&gt;</span>\n</code></pre>\n<h3>Step 2: 为 Fescar 创建 undo_log 表</h3>\n<p><code>UNDO_LOG</code> 此表用于 Fescar 的AT模式。</p>\n<pre><code class=\"language-sql\"><span class=\"hljs-comment\">-- 注意当 Fescar 版本升级至 0.3.0+ 将由之前的普通索引变更为唯一索引。</span>\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`undo_log`</span> (\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">bigint</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,\n  <span class=\"hljs-string\">`branch_id`</span> <span class=\"hljs-built_in\">bigint</span>(<span class=\"hljs-number\">20</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`xid`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">100</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`rollback_info`</span> longblob <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`log_status`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`log_created`</span> datetime <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`log_modified`</span> datetime <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`ext`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">100</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>),\n  <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">KEY</span> <span class=\"hljs-string\">`ux_undo_log`</span> (<span class=\"hljs-string\">`xid`</span>,<span class=\"hljs-string\">`branch_id`</span>)\n) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> AUTO_INCREMENT=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;\n</code></pre>\n<h3>Step 3: 创建相关业务表</h3>\n<pre><code class=\"language-sql\">\n<span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`storage_tbl`</span>;\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`storage_tbl`</span> (\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,\n  <span class=\"hljs-string\">`commodity_code`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`count`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>),\n  <span class=\"hljs-keyword\">UNIQUE</span> <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`commodity_code`</span>)\n) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;\n\n\n<span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`order_tbl`</span>;\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`order_tbl`</span> (\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,\n  <span class=\"hljs-string\">`user_id`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`commodity_code`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`count`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-string\">`money`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>)\n) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;\n\n\n<span class=\"hljs-keyword\">DROP</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-keyword\">IF</span> <span class=\"hljs-keyword\">EXISTS</span> <span class=\"hljs-string\">`account_tbl`</span>;\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`account_tbl`</span> (\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">NOT</span> <span class=\"hljs-literal\">NULL</span> AUTO_INCREMENT,\n  <span class=\"hljs-string\">`user_id`</span> <span class=\"hljs-built_in\">varchar</span>(<span class=\"hljs-number\">255</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-literal\">NULL</span>,\n  <span class=\"hljs-string\">`money`</span> <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">11</span>) <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-number\">0</span>,\n  PRIMARY <span class=\"hljs-keyword\">KEY</span> (<span class=\"hljs-string\">`id`</span>)\n) <span class=\"hljs-keyword\">ENGINE</span>=<span class=\"hljs-keyword\">InnoDB</span> <span class=\"hljs-keyword\">DEFAULT</span> <span class=\"hljs-keyword\">CHARSET</span>=utf8;\n</code></pre>\n<h3>Step 4: 启动 Fescar-Server 服务</h3>\n<ul>\n<li>下载Server <a href=\"https://github.com/alibaba/fescar/releases\">package</a>, 并解压。</li>\n<li>运行bin目录下的启动脚本。</li>\n</ul>\n<pre><code class=\"language-shell\">sh fescar-server.sh $LISTEN_PORT $PATH_FOR_PERSISTENT_DATA\n\ne.g.\n\nsh fescar-server.sh 8091 /home/admin/fescar/data/\n</code></pre>\n<h3>Step 5: 运行例子</h3>\n<ul>\n<li>启动账户服务 (<a href=\"https://github.com/fescar-group/fescar-samples/blob/master/dubbo/src/main/java/com/alibaba/fescar/samples/dubbo/starter/DubboAccountServiceStarter.java\">DubboAccountServiceStarter</a>)。</li>\n<li>启动库存服务 (<a href=\"https://github.com/fescar-group/fescar-samples/blob/master/dubbo/src/main/java/com/alibaba/fescar/samples/dubbo/starter/DubboStorageServiceStarter.java\">DubboStorageServiceStarter</a>)。</li>\n<li>启动订单服务 (<a href=\"https://github.com/fescar-group/fescar-samples/blob/master/dubbo/src/main/java/com/alibaba/fescar/samples/dubbo/starter/DubboOrderServiceStarter.java\">DubboOrderServiceStarter</a>)。</li>\n<li>运行BusinessService入口 (<a href=\"https://github.com/fescar-group/fescar-samples/blob/master/dubbo/src/main/java/com/alibaba/fescar/samples/dubbo/starter/DubboBusinessTester.java\">DubboBusinessTester</a>)。</li>\n</ul>\n<h3>相关项目</h3>\n<ul>\n<li>fescar:          <a href=\"https://github.com/alibaba/fescar/\">https://github.com/alibaba/fescar/</a></li>\n<li>fescar-samples : <a href=\"https://github.com/fescar-group/fescar-samples\">https://github.com/fescar-group/fescar-samples</a></li>\n</ul>\n",
  "link": "/zh-cn/blog/dubbo-fescar.html",
  "meta": {
    "title": "如何使用Fescar保证Dubbo微服务间的一致性",
    "keywords": "Dubbo,Fescar,一致性",
    "description": "本文主要介绍如何使用Fescar保证Dubbo微服务间的一致性"
  }
}