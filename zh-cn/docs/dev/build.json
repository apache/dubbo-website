{
  "filename": "build.md",
  "__html": "<h1>源码构建</h1>\n<h2>代码签出</h2>\n<p>通过以下的这个命令签出最新的项目源码 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>：</p>\n<pre><code class=\"language-sh\">git <span class=\"hljs-built_in\">clone</span> https://github.com/apache/dubbo.git dubbo\n</code></pre>\n<h2>分支</h2>\n<p>我们使用 master 作为主干版本的开发，使用分支作为维护版本。可以通过 <a href=\"https://github.com/apache/dubbo/tags\">https://github.com/apache/dubbo/tags</a> 来查看所有版本的标签。</p>\n<h2>构建</h2>\n<p>Dubbo 使用 <a href=\"http://maven.apache.org\">maven</a> 作为构建工具。</p>\n<p>要求</p>\n<ul>\n<li>Java 1.5 以上的版本</li>\n<li>Maven 2.2.1 或者以上的版本</li>\n</ul>\n<p>构建之前需要配置以下的 <code>MAVEN_OPTS</code></p>\n<pre><code class=\"language-sh\"><span class=\"hljs-built_in\">export</span> MAVEN_OPTS=-Xmx1024m -XX:MaxPermSize=512m\n</code></pre>\n<p>使用以下命令做一次构建</p>\n<pre><code class=\"language-sh\">mvn clean install\n</code></pre>\n<p>可以通过以下的构建命令来跳过单元测试</p>\n<pre><code class=\"language-sh\">mvn install -Dmaven.test.skip\n</code></pre>\n<h2>构建源代码 jar 包</h2>\n<p>通过以下命令以构建 Dubbo 的源代码 jar 包，方便用来调试 Dubbo 源代码</p>\n<pre><code class=\"language-sh\">mvn clean <span class=\"hljs-built_in\">source</span>:jar install -Dmaven.test.skip\n</code></pre>\n<h2>IDE 支持</h2>\n<p>使用以下命令来生成 IDE 的工程</p>\n<h3>Intellij Idea</h3>\n<pre><code class=\"language-sh\">mvn idea:idea\n</code></pre>\n<h3>eclipse</h3>\n<pre><code class=\"language-sh\">mvn eclipse:eclipse\n</code></pre>\n<p>在 eclipse 中导入</p>\n<p>首先，需要在 eclipse 中配置 maven 仓库。通过 Preferences -&gt; Java -&gt; Build Path -&gt; Classpath 定义 <code>M2_REPO</code> 的 classpath 变量指向本地的 maven 仓库。 <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<p>也可以通过以下的 maven 命令配置：</p>\n<pre><code class=\"language-sh\">mvn eclipse:configure-workspace -Declipse.workspace=/path/to/the/workspace/\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>也可以直接在 <a href=\"https://github.com/apache/dubbo\">https://github.com/apache/dubbo</a> 上浏览源代码 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>UNIX 下的路径是 ${HOME}/.m2/repository, Windows 下的路径是 C:\\Documents and Settings&lt;user&gt;.m2\\repository <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "/zh-cn/docs/dev/build.html",
  "meta": {}
}