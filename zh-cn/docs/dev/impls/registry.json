{
  "filename": "registry.md",
  "__html": "<h1>注册中心扩展</h1>\n<h2>扩展说明</h2>\n<p>负责服务的注册与发现。</p>\n<h2>扩展接口</h2>\n<ul>\n<li><code>com.alibaba.dubbo.registry.RegistryFactory</code></li>\n<li><code>com.alibaba.dubbo.registry.Registry</code></li>\n</ul>\n<h2>扩展配置</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-comment\">&lt;!-- 定义注册中心 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"xxx1\"</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"xxx://ip:port\"</span> /&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- 引用注册中心，如果没有配置registry属性，将在ApplicationContext中自动扫描registry配置 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">registry</span>=<span class=\"hljs-string\">\"xxx1\"</span> /&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- 引用注册中心缺省值，当&lt;dubbo:service&gt;没有配置registry属性时，使用此配置 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:provider</span> <span class=\"hljs-attr\">registry</span>=<span class=\"hljs-string\">\"xxx1\"</span> /&gt;</span>\n</code></pre>\n<h2>扩展契约</h2>\n<p>RegistryFactory.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RegistryFactory</span> </span>{\n    <span class=\"hljs-comment\">/**\n     * 连接注册中心.\n     * \n     * 连接注册中心需处理契约：&lt;br&gt;\n     * 1. 当设置check=false时表示不检查连接，否则在连接不上时抛出异常。&lt;br&gt;\n     * 2. 支持URL上的username:password权限认证。&lt;br&gt;\n     * 3. 支持backup=10.20.153.10备选注册中心集群地址。&lt;br&gt;\n     * 4. 支持file=registry.cache本地磁盘文件缓存。&lt;br&gt;\n     * 5. 支持timeout=1000请求超时设置。&lt;br&gt;\n     * 6. 支持session=60000会话超时或过期设置。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> url 注册中心地址，不允许为空\n     * <span class=\"hljs-doctag\">@return</span> 注册中心引用，总不返回空\n     */</span>\n    <span class=\"hljs-function\">Registry <span class=\"hljs-title\">getRegistry</span><span class=\"hljs-params\">(URL url)</span></span>; \n}\n</code></pre>\n<p>RegistryService.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">RegistryService</span> </span>{ <span class=\"hljs-comment\">// Registry extends RegistryService </span>\n    <span class=\"hljs-comment\">/**\n     * 注册服务.\n     * \n     * 注册需处理契约：&lt;br&gt;\n     * 1. 当URL设置了check=false时，注册失败后不报错，在后台定时重试，否则抛出异常。&lt;br&gt;\n     * 2. 当URL设置了dynamic=false参数，则需持久存储，否则，当注册者出现断电等情况异常退出时，需自动删除。&lt;br&gt;\n     * 3. 当URL设置了category=overrides时，表示分类存储，缺省类别为providers，可按分类部分通知数据。&lt;br&gt;\n     * 4. 当注册中心重启，网络抖动，不能丢失数据，包括断线自动删除数据。&lt;br&gt;\n     * 5. 允许URI相同但参数不同的URL并存，不能覆盖。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> url 注册信息，不允许为空，如：dubbo://10.20.153.10/com.alibaba.foo.BarService?version=1.0.0&amp;application=kylin\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">register</span><span class=\"hljs-params\">(URL url)</span></span>;\n \n    <span class=\"hljs-comment\">/**\n     * 取消注册服务.\n     * \n     * 取消注册需处理契约：&lt;br&gt;\n     * 1. 如果是dynamic=false的持久存储数据，找不到注册数据，则抛IllegalStateException，否则忽略。&lt;br&gt;\n     * 2. 按全URL匹配取消注册。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> url 注册信息，不允许为空，如：dubbo://10.20.153.10/com.alibaba.foo.BarService?version=1.0.0&amp;application=kylin\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unregister</span><span class=\"hljs-params\">(URL url)</span></span>;\n \n    <span class=\"hljs-comment\">/**\n     * 订阅服务.\n     * \n     * 订阅需处理契约：&lt;br&gt;\n     * 1. 当URL设置了check=false时，订阅失败后不报错，在后台定时重试。&lt;br&gt;\n     * 2. 当URL设置了category=overrides，只通知指定分类的数据，多个分类用逗号分隔，并允许星号通配，表示订阅所有分类数据。&lt;br&gt;\n     * 3. 允许以interface,group,version,classifier作为条件查询，如：interface=com.alibaba.foo.BarService&amp;version=1.0.0&lt;br&gt;\n     * 4. 并且查询条件允许星号通配，订阅所有接口的所有分组的所有版本，或：interface=*&amp;group=*&amp;version=*&amp;classifier=*&lt;br&gt;\n     * 5. 当注册中心重启，网络抖动，需自动恢复订阅请求。&lt;br&gt;\n     * 6. 允许URI相同但参数不同的URL并存，不能覆盖。&lt;br&gt;\n     * 7. 必须阻塞订阅过程，等第一次通知完后再返回。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> url 订阅条件，不允许为空，如：consumer://10.20.153.10/com.alibaba.foo.BarService?version=1.0.0&amp;application=kylin\n     * <span class=\"hljs-doctag\">@param</span> listener 变更事件监听器，不允许为空\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(URL url, NotifyListener listener)</span></span>;\n \n    <span class=\"hljs-comment\">/**\n     * 取消订阅服务.\n     * \n     * 取消订阅需处理契约：&lt;br&gt;\n     * 1. 如果没有订阅，直接忽略。&lt;br&gt;\n     * 2. 按全URL匹配取消订阅。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> url 订阅条件，不允许为空，如：consumer://10.20.153.10/com.alibaba.foo.BarService?version=1.0.0&amp;application=kylin\n     * <span class=\"hljs-doctag\">@param</span> listener 变更事件监听器，不允许为空\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(URL url, NotifyListener listener)</span></span>;\n \n    <span class=\"hljs-comment\">/**\n     * 查询注册列表，与订阅的推模式相对应，这里为拉模式，只返回一次结果。\n     * \n     * <span class=\"hljs-doctag\">@see</span> com.alibaba.dubbo.registry.NotifyListener#notify(List)\n     * <span class=\"hljs-doctag\">@param</span> url 查询条件，不允许为空，如：consumer://10.20.153.10/com.alibaba.foo.BarService?version=1.0.0&amp;application=kylin\n     * <span class=\"hljs-doctag\">@return</span> 已注册信息列表，可能为空，含义同{<span class=\"hljs-doctag\">@link</span> com.alibaba.dubbo.registry.NotifyListener#notify(List&lt;URL&gt;)}的参数。\n     */</span>\n    <span class=\"hljs-function\">List&lt;URL&gt; <span class=\"hljs-title\">lookup</span><span class=\"hljs-params\">(URL url)</span></span>;\n \n}\n</code></pre>\n<p>NotifyListener.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">NotifyListener</span> </span>{ \n    <span class=\"hljs-comment\">/**\n     * 当收到服务变更通知时触发。\n     * \n     * 通知需处理契约：&lt;br&gt;\n     * 1. 总是以服务接口和数据类型为维度全量通知，即不会通知一个服务的同类型的部分数据，用户不需要对比上一次通知结果。&lt;br&gt;\n     * 2. 订阅时的第一次通知，必须是一个服务的所有类型数据的全量通知。&lt;br&gt;\n     * 3. 中途变更时，允许不同类型的数据分开通知，比如：providers, consumers, routes, overrides，允许只通知其中一种类型，但该类型的数据必须是全量的，不是增量的。&lt;br&gt;\n     * 4. 如果一种类型的数据为空，需通知一个empty协议并带category参数的标识性URL数据。&lt;br&gt;\n     * 5. 通知者(即注册中心实现)需保证通知的顺序，比如：单线程推送，队列串行化，带版本对比。&lt;br&gt;\n     * \n     * <span class=\"hljs-doctag\">@param</span> urls 已注册信息列表，总不为空，含义同{<span class=\"hljs-doctag\">@link</span> com.alibaba.dubbo.registry.RegistryService#lookup(URL)}的返回值。\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">notify</span><span class=\"hljs-params\">(List&lt;URL&gt; urls)</span></span>;\n \n}\n</code></pre>\n<h2>已知扩展</h2>\n<p><code>com.alibaba.dubbo.registry.support.dubbo.DubboRegistryFactory</code></p>\n<h2>扩展示例</h2>\n<p>Maven 项目结构：</p>\n<pre><code>src\n |-main\n    |-java\n        |-com\n            |-xxx\n                |-XxxRegistryFactoryjava (实现RegistryFactory接口)\n                |-XxxRegistry.java (实现Registry接口)\n    |-resources\n        |-META-INF\n            |-dubbo\n                |-com.alibaba.dubbo.registry.RegistryFactory (纯文本文件，内容为：xxx=com.xxx.XxxRegistryFactory)\n</code></pre>\n<p>XxxRegistryFactory.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.xxx;\n \n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.registry.RegistryFactory;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.registry.Registry;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.common.URL;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">XxxRegistryFactory</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">RegistryFactory</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Registry <span class=\"hljs-title\">getRegistry</span><span class=\"hljs-params\">(URL url)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> XxxRegistry(url);\n    }\n}\n</code></pre>\n<p>XxxRegistry.java：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.xxx;\n \n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.registry.Registry;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.registry.NotifyListener;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.common.URL;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">XxxRegistry</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Registry</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">register</span><span class=\"hljs-params\">(URL url)</span> </span>{\n        <span class=\"hljs-comment\">// ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unregister</span><span class=\"hljs-params\">(URL url)</span> </span>{\n        <span class=\"hljs-comment\">// ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">subscribe</span><span class=\"hljs-params\">(URL url, NotifyListener listener)</span> </span>{\n        <span class=\"hljs-comment\">// ...</span>\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">unsubscribe</span><span class=\"hljs-params\">(URL url, NotifyListener listener)</span> </span>{\n        <span class=\"hljs-comment\">// ...</span>\n    }\n}\n</code></pre>\n<p>META-INF/dubbo/com.alibaba.dubbo.registry.RegistryFactory：</p>\n<pre><code class=\"language-properties\">xxx=com.xxx.XxxRegistryFactory\n</code></pre>\n"
}