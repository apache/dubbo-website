{
  "filename": "new-committer-guide_dev.md",
  "__html": "<h1>Apache 提交者注册流程</h1>\n<h2>一、Apache 提交者的产生</h2>\n<h3>项目孵化初始化提交者</h3>\n<p>项目孵化阶段，在孵化项目提案中，会有初始化提交者列表这一选项。确认你是初始化提交者的一员。项目在 apache 孵化器社区投票通过后，提交者可以开始准备注册账户了。可以参看<a href=\"https://wiki.apache.org/incubator/\">孵化器 wiki</a></p>\n<h3>活跃的贡献者被选举为提交者</h3>\n<p>在后期的开发过程中，活跃的贡献者可以被选举为提交者。见<a href=\"https://www.apache.org/dev/new-committers-guide.html#becoming-a-committer\">如何成为 committer</a></p>\n<h2>二、个人开发者提交 ICLA</h2>\n<h3>1、选择 apache id</h3>\n<p>在<a href=\"http://people.apache.org/committer-index.html\"> apache 提交者列表页</a>查看已经注册过的 apache id，</p>\n<h3>2、个人提交者授权协议（ICLA）：</h3>\n<p>下载<a href=\"https://www.apache.org/licenses/icla.pdf\"> ICLA 模板</a>，查找可用的 id。将 icla.pdf 个人信息填写正确后打印,签名、扫描、并当做附件发送邮件给秘书 <a href=\"mailto:secretary@apache.org\">secretary@apache.org</a>，秘书会帮忙创建 apache 用户 id。同时会创建一个 <a href=\"mailto:your_id@apache.org\">your_id@apache.org</a> 的邮箱，可以在<a href=\"http://people.apache.org/committer-index.html\"> apache 提交者列表页</a>查看查找用户是否已经创建。</p>\n<h3>3、导师帮助提交用户id创建请求</h3>\n<p>导师将帮助提交 apache 账户创建请求给 root 邮件组，会有人帮助建立 id。一般需要2天时间账户会建立，请等待并在<a href=\"http://people.apache.org/committer-index.html\"> apache 提交者列表页</a>查看查找用户是否已经创建。</p>\n<h2>三、加入apache开发者组</h2>\n<ul>\n<li>1、登陆 <a href=\"https://id.apache.org/\">Apache 账户工具</a>，在登陆页面点击&quot;忘记密码&quot;设置始化密码，会有一封密码重置邮件发送到 forward 邮箱(在孵化项目提案中提交的开发者邮件)</li>\n<li>2、关于 apache 邮箱：<a href=\"http://apache.org\">apache.org</a> 邮箱并没有自己的邮件内容存储服务器。它需要借用其他邮件提供商的邮件内容存储、分发功能。在很多投票环节是建议使用 apache 邮箱的。\n这里就有一个问题，怎么在其它邮箱里面配置 <a href=\"http://apache.org\">apache.org</a> 邮箱转发功能：\n1）收件箱：收取发送到 <a href=\"http://apache.org\">apache.org</a> 的邮件。这个在第一步配置好 Apache 账户工具的 forward 邮箱就可以用 forward 邮箱收取邮件了\n2）发件箱：将发出的邮件显示发件邮箱为 <a href=\"http://apache.org\">apache.org</a> 邮箱。请参考：<a href=\"https://reference.apache.org/committer/email\">设置 apache 邮箱指南</a>和<a href=\"http://gmailblog.blogspot.com/2009/07/send-mail-from-another-address-without.html\"> gmail 邮箱设置方式</a>。 其他邮箱服务的设置方式不方便找到，gmail 的最方便，建议换成 gmail 邮箱(不是广告)。</li>\n<li>3、修改编辑页面的 homepage url，<a href=\"http://people.apache.org/committer-index.html\">apache 提交者列表页</a>中你的账户能加主页链接。</li>\n<li>4、修改编辑页面的 github 账户(username)，提交确认后两个小时内会有邮件邀请你加入 <a href=\"http://github.com/apache-committers\">github.com/apache-committers</a> 组。这期间可以阅读<a href=\"http://www.apache.org/foundation/how-it-works.html#developers\"> ASF 工作方式</a>以对 ASF 开发做一些基本了解。</li>\n</ul>\n<h2>四、提交者获得对项目的写权限</h2>\n<p><a href=\"https://gitbox.apache.org/setup/\">GitBox 账户链接工具</a>的操作</p>\n<h3>1、Apache账户授权</h3>\n<p>按照提示授权对 Apache 账户的 OAuth 协议登入</p>\n<h3>2、Github账户授权</h3>\n<p>按照提示授权对 github 账户的 OAuth 协议登入</p>\n<h3>3、在 <a href=\"http://github.com\">github.com</a> 设置 github 账户两因素授权（2FA）</h3>\n<p>按照<a href=\"https://help.github.com/articles/configuring-two-factor-authentication-via-a-totp-mobile-app/\">授权 GitHub 2FA wiki</a> 操作如下：</p>\n<ul>\n<li>\n<p>1)、在手机安装 “google 身份验证器” app</p>\n</li>\n<li>\n<p>2)、按照<a href=\"https://help.github.com/articles/configuring-two-factor-authentication-via-a-totp-mobile-app/\">授权 GitHub 2FA wiki</a> 一步一步操作。</p>\n<p>在<a href=\"https://github.com/settings/two_factor_authentication/verify\">两因素授权验证</a>界面，不建议选择用手机扫描二维码，因为有些手机会扫描不出来。\n请打开手机 “google 身份验证器” app，点“+”选择“输入提供的秘钥”： 在“账户名” input 框写入 github 账户。在“您的秘钥” input 框写入:打开的网页中 &quot;enter this text code&quot; 链接里面的文本。在 app 中点击&quot;添加&quot; 后，将为此账户生成6位数字动态。将此6位数字写入网页中的文本框，然后点 “Enable”。这样 2FA 就设置成功了。</p>\n</li>\n<li>\n<p>3)、退出并重新登陆 github，输入用户名、密码后会多一步动态密码的填写，该动态密码就是 google 身份验证器上面的动态密码</p>\n</li>\n<li>\n<p>4)、大概需要半个小时,会有邮件通知你已经加入了 xx project-committers 开发者组。你也可以进入 <a href=\"https://github.com/orgs/apache/teams\">apache teams</a> 页面查看。</p>\n</li>\n<li>\n<p>5)、2FA 提交后，你已经 clone 的项目会有权限校验问题，解决方法为下面二选一：</p>\n<ul>\n<li>a. 申请 Access Token：\n在 github 上生成 access token 后，指令行需要密码的地方就粘贴token。\n参考官网<a href=\"https://help.github.com/articles/https-cloning-errors/#provide-access-token-if-2fa-enabled\">帮助链接一</a>和<a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/\">帮助链接二</a></li>\n<li>b. 改用 ssh：\n在命令行执行 ssh-keygen 命令， 然后把pub文件中的内容粘贴到 github 上</li>\n</ul>\n</li>\n<li>\n<p>注意：一定要保证 github 的 2FA 为 &quot;enable&quot; 状态。当你将 2FA 设置为 &quot;off&quot; 时候，将会被对应的 apache committer 写权限组除名，直到你再次设置成功为止。</p>\n</li>\n</ul>\n<h2>五、其他</h2>\n<h3>The Apache Way</h3>\n<p>详情请参考 <a href=\"http://apache.org/foundation/governance/\">wiki</a></p>\n<p>社区重于代码，如果某问题或者方案没有在社区(邮件列表)讨论过，就当没有发生过</p>\n<h3>小福利</h3>\n<p>Jetbrains 给 apache 提交者一个小福利，就是可以免费使用 idea 的全产品系列。具体注册地址为：<a href=\"https://www.jetbrains.com/shop/eform/apache?product=ALL\">https://www.jetbrains.com/shop/eform/apache?product=ALL</a></p>\n<h3>相关 wiki</h3>\n<p><a href=\"https://www.apache.org/dev/new-committers-guide.html\">https://www.apache.org/dev/new-committers-guide.html</a></p>\n",
  "link": "/zh-cn/docs/developers/committer-guide/new-committer-guide_dev.html",
  "meta": {}
}