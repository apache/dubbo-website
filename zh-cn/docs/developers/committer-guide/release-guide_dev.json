{
  "filename": "release-guide_dev.md",
  "__html": "<h1>如何准备Apache Release</h1>\n<h2>理解Apache发布的内容和流程</h2>\n<p>总的来说，Source Release是Apache关注的重点，也是发布的必须内容；而Binary Release是可选项，Dubbo可以选择是否发布二进制包到Apache仓库或者发布到Maven中央仓库。</p>\n<p>请参考以下链接，找到更多关于ASF的发布指南:</p>\n<ul>\n<li><a href=\"http://www.apache.org/dev/release-publishing\">Apache Release Guide</a></li>\n<li><a href=\"http://www.apache.org/dev/release.html\">Apache Release Policy</a></li>\n<li><a href=\"http://www.apache.org/dev/publishing-maven-artifacts.html\">Maven Release Info</a></li>\n</ul>\n<h2>本地构建环境准备</h2>\n<p>主要包括签名工具、Maven仓库认证相关准备</p>\n<h3>安装GPG</h3>\n<p>详细文档请参见<a href=\"https://www.gnupg.org/download/index.html\">这里</a>, Mac OS下配置如下</p>\n<pre><code class=\"language-sh\">$ brew install gpg\n$ gpg --version <span class=\"hljs-comment\">#检查版本，应该为2.x</span>\n</code></pre>\n<h3>用gpg生成key</h3>\n<p>根据提示，生成key</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> gpg --full-gen-key</span>\ngpg (GnuPG) 2.0.12; Copyright (C) 2009 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nPlease select what kind of key you want:\n  (1) RSA and RSA (default)\n  (2) DSA and Elgamal\n  (3) DSA (sign only)\n  (4) RSA (sign only)\nYour selection? 1\nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048) 4096\nRequested keysize is 4096 bits\nPlease specify how long the key should be valid.\n        0 = key does not expire\n     &lt;n&gt;  = key expires in n days\n     &lt;n&gt;w = key expires in n weeks\n     &lt;n&gt;m = key expires in n months\n     &lt;n&gt;y = key expires in n years\nKey is valid for? (0) \nKey does not expire at all\nIs this correct? (y/N) y\n\nGnuPG needs to construct a user ID to identify your key.\n\nReal name: Robert Burrell Donkin\nEmail address: rdonkin@apache.org\nComment: CODE SIGNING KEY\nYou selected this USER-ID:\n   \"Robert Burrell Donkin (CODE SIGNING KEY) &lt;rdonkin@apache.org&gt;\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O\nYou need a Passphrase to protect your secret key. # 填入密码，以后打包过程中会经常用到\n</code></pre>\n<h3>查看key id</h3>\n<pre><code class=\"language-sh\">$ gpg --list-keys\npub   rsa4096/28681CB1 2018-04-26 <span class=\"hljs-comment\"># 28681CB1就是key id</span>\nuid       [ultimate] liujun (apache-dubbo) &lt;liujun@apache.org&gt;\nsub   rsa4096/D3D6984B 2018-04-26\n\n<span class=\"hljs-comment\"># 通过key id发送public key到keyserver</span>\n$ gpg --keyserver pgpkeys.mit.edu --send-key 28681CB1\n<span class=\"hljs-comment\"># 其中，pgpkeys.mit.edu为随意挑选的keyserver，keyserver列表为：https://sks-keyservers.net/status/，为相互之间是自动同步的，选任意一个都可以。</span>\n</code></pre>\n<p>如果有多个public key，设置默认key。修改<code>~/.gnupg/gpg.conf</code></p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\"># If you have more than 1 secret key in your keyring, you may want to</span>\n<span class=\"hljs-comment\"># uncomment the following option and set your preferred keyid.</span>\ndefault-key 28681CB1\n</code></pre>\n<p>如果有多个public key, 也可以删除无用的key：</p>\n<pre><code class=\"language-sh\"><span class=\"hljs-comment\">### 先删除私钥，再删除公钥</span>\n$ gpg --yes --delete-secret-keys shenglicao2@gmail.com   <span class=\"hljs-comment\">###老的私钥，指明邮箱即可</span>\n$ gpg --delete-keys 1808C6444C781C0AEA0AAD4C4D6A8007D20DB8A4\n</code></pre>\n<blockquote>\n<p>PS: 最新版本经过实测，本地没有gpg.conf这个文件，因此如果在执行过程中遇到签名失败，可以参考这个文章：<a href=\"https://blog.csdn.net/wenbo20182/article/details/72850810\">https://blog.csdn.net/wenbo20182/article/details/72850810</a> 或 <a href=\"https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors\">https://d.sb/2016/11/gpg-inappropriate-ioctl-for-device-errors</a></p>\n</blockquote>\n<h3>设置Apache中央仓库</h3>\n<p>Dubbo项目的父pom为Apache pom(2.7.0以上版本需要，2.6.x发布版本不需要此操作)</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">parent</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>apache<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>19<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">parent</span>&gt;</span>\n</code></pre>\n<p>添加以下内容到.m2/settings.xml\n所有密码请使用<a href=\"http://maven.apache.org/guides/mini/guide-encryption.html\">maven-encryption-plugin</a>加密后再填入</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span>\n...\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">servers</span>&gt;</span>\n   <span class=\"hljs-comment\">&lt;!-- To publish a snapshot of some part of Maven --&gt;</span>\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">server</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>apache.snapshots.https<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">username</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- YOUR APACHE LDAP USERNAME --&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">username</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">password</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- YOUR APACHE LDAP PASSWORD (encrypted) --&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">password</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">server</span>&gt;</span>\n   <span class=\"hljs-comment\">&lt;!-- To stage a release of some part of Maven --&gt;</span>\n   <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">server</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>apache.releases.https<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">username</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- YOUR APACHE LDAP USERNAME --&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">username</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">password</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- YOUR APACHE LDAP PASSWORD (encrypted) --&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">password</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">server</span>&gt;</span>\n  ...\n     <span class=\"hljs-comment\">&lt;!-- gpg passphrase used when generate key --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">server</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span>&gt;</span>gpg.passphrase<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">id</span>&gt;</span>\n     <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">passphrase</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- yourKeyPassword --&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">passphrase</span>&gt;</span>\n   <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">server</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">servers</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span>\n</code></pre>\n<h2>打包&amp;上传</h2>\n<h3>准备分支</h3>\n<p>从主干分支拉取新分支作为发布分支，如现在要发布`{release_version}`版本，则从2.6.x拉出新分支`{release_version}-release<code>，此后</code>{release_version}` Release Candidates涉及的修改及打标签等都在`{release_version}-release`分支进行，最终发布完成后合入主干分支。</p>\n<h3>编译打包</h3>\n<p>首先，在<code>${release_version}-release</code>分支验证maven组件打包、source源码打包、签名等是否都正常工作。<strong>2.6.x记得要使用1.6进行编译打包</strong></p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn clean install -Prelease</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn deploy</span>\n</code></pre>\n<p>上述命令将snapshot包推送到maven中央仓库</p>\n<h3>用maven-release-plugin发布</h3>\n<p>先用dryRun验证是否ok</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn release:prepare -Prelease -Darguments=<span class=\"hljs-string\">\"-DskipTests\"</span> -DautoVersionSubmodules=<span class=\"hljs-literal\">true</span> -Dusername=YOUR GITHUB ID-DdryRun=<span class=\"hljs-literal\">true</span></span>\n</code></pre>\n<p>验证通过后，执行release:prepare</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn release:clean</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn release:prepare -Prelease -Darguments=<span class=\"hljs-string\">\"-DskipTests\"</span> -DautoVersionSubmodules=<span class=\"hljs-literal\">true</span> -Dusername=YOUR GITHUB ID -DpushChanges=<span class=\"hljs-literal\">false</span></span>\n</code></pre>\n<blockquote>\n<p>执行release插件时，如果指定了<code>-DpushChanges=true</code>, 插件会自动提交到远端的GitHub仓库中，此时就需要输入GitHub的密码，注意不是输入web页面的登录密码，而是一个<code>Personal access tokens</code>，获取方式详见<a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line\">这里</a></p>\n</blockquote>\n<blockquote>\n<p>这里有一点要注意的是tag， 在执行过程中，需要选择发布的artifactId, 下一个版本artifactId以及发布版本的tag, tag默认的是dubbo-parent-xxxx，需要改成dubbo-xxxx</p>\n</blockquote>\n<p>执行完上述步骤后，你会发现：</p>\n<ol>\n<li><code>source-release.zip</code> 和 <code>bin-release.zip</code>包已经生成在<code>dubbo-distribution</code>目录下，请解压并检查文件是否完整</li>\n<li>本地已经打出相应的tag，同时新增一个commit，名叫<code>[maven-release-plugin] prepare release dubbo-x.x.x</code></li>\n<li>分支版本自动升级为<code>${release_version+1}-SNAPSHOT</code>，同时新增一个commit，名叫<code>[[maven-release-plugin] prepare for next development iteration</code></li>\n</ol>\n<blockquote>\n<p>如果指定了<code>-DpushChanges=true</code>, 则本地提交会自动推送到远端的GitHub仓库。根据经验，建议不要指定为true，请设置为false，待本地检查通过之后再手动提交</p>\n</blockquote>\n<p>执行release:perform，做staging发布</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> mvn -Prelease release:perform -Darguments=<span class=\"hljs-string\">\"-DskipTests\"</span> -DautoVersionSubmodules=<span class=\"hljs-literal\">true</span> -Dusername=YOUR GITHUB ID</span>\n</code></pre>\n<p>此时插件会自动下载远端的tag对应的源码，编译后，将所有Artifacts发布到配置的远程<a href=\"http://repository.apache.org\">maven仓库</a>，处于staging状态。</p>\n<h4>注意点</h4>\n<ul>\n<li>在deploy执行过程中，有可能因为网络等原因被中断，如果是这样，可以重新开始执行。</li>\n<li>deploy执行到maven仓库的时候，请确认下包的总量是否正确。多次出现了包丢失的情况，特别是dubbo-parent包。</li>\n</ul>\n<h2>准备Apache发布</h2>\n<ol>\n<li>\n<p>准备svn本机环境（Apache使用svn托管项目的发布内容）</p>\n</li>\n<li>\n<p>将dubbo checkout到本地目录</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> svn checkout https://dist.apache.org/repos/dist/dev/incubator/dubbo</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 假定本地目录为 ~/apache/incubator/dubbo</span>\n</code></pre>\n</li>\n<li>\n<p>当前发布版本为${release_version}，新建目录</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">cd</span> ~/apache/incubator/dubbo <span class=\"hljs-comment\"># dubbo svn根目录</span></span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> mkdir <span class=\"hljs-variable\">${release_version}</span></span>\n</code></pre>\n</li>\n<li>\n<p>添加public key到<a href=\"https://dist.apache.org/repos/dist/dev/incubator/dubbo/KEYS\">KEYS</a>文件并提交到SVN仓库（第一次做发布的人需要做这个操作，具体操作参考KEYS文件里的说明）。KEYS主要是让参与投票的人在本地导入，用来校验sign的正确性</p>\n<pre><code class=\"language-sh\">$ (gpg --list-sigs &lt;your name&gt; &amp;&amp; gpg --armor --<span class=\"hljs-built_in\">export</span> &lt;your name&gt;) &gt;&gt; KEYS\n</code></pre>\n</li>\n<li>\n<p>拷贝<code>distribution/target</code>下的source相关的包到svn本地仓库<code>dubbo/${release_version}</code></p>\n</li>\n<li>\n<p>生成sha512签名</p>\n<p>针对<code>source-release.zip</code></p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> shasum -a 512 apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-<span class=\"hljs-built_in\">source</span>-release.zip &gt;&gt; apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-<span class=\"hljs-built_in\">source</span>-release.zip.sha512</span>\n</code></pre>\n<p>针对<code>bin-release.zip</code>，需要增加<code>-b</code>参数，表明是一个二进制文件</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> shasum -b -a 512 apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-bin-release.zip &gt;&gt; apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-bin-release.zip.sha512</span>\n</code></pre>\n</li>\n<li>\n<p>如果有binary release要同时发布</p>\n<p>在<code>distribution/target</code>目录下，拷贝<code>bin-release.zip</code>以及<code>bin-release.zip.asc</code>到svn本地仓库<code>dubbo/${release_version}</code>，参考第6步，生成sha512签名。</p>\n</li>\n<li>\n<p>提交到Apache svn</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> svn status</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> svn commit -m <span class=\"hljs-string\">'prepare for ${release_version} RC1'</span></span>\n</code></pre>\n</li>\n<li>\n<p>关闭Maven的staging仓库</p>\n<p>此步骤为发布2.7.0及以上版本必须要的步骤。在此之前请先确保所有的artifact都是ok的。登录http://repository.apache.org，点击左侧的<code>Staging repositories</code>，然后搜索Dubbo关键字，会出现一系列的仓库，选择你最近上传的仓库，然后点击上方的Close按钮，这个过程会进行一系列检查，检查通过以后，在下方的Summary标签页上出现一个连接，请保存好这个链接，需要放在接下来的投票邮件当中。链接应该是类似这样的: <a href=\"https://repository.apache.org/content/repositories/orgapachedubbo-1015\">https://repository.apache.org/content/repositories/orgapachedubbo-1015</a></p>\n<blockquote>\n<p>请注意点击Close可能会出现失败，通常是网络原因，只要重试几次就可以了。可以点击Summary旁边的Activity标签来确认。</p>\n</blockquote>\n</li>\n</ol>\n<h2>验证Release Candidates</h2>\n<p>详细的检查列表请参考官方的<a href=\"https://wiki.apache.org/incubator/IncubatorReleaseChecklist\">check list</a></p>\n<p>首先，从一下地址下载要发布的Release Candidate到本地环境：</p>\n<pre>\nhttps://dist.apache.org/repos/dist/dev/incubator/dubbo/${release_version}/\n</pre>\n<p>然后，开始验证环节，验证包含但不限于以下内容和形式</p>\n<h3>检查签名和hash等信息</h3>\n<h4>检查sha512哈希</h4>\n<pre><code class=\"language-sh\">$ shasum -c apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-<span class=\"hljs-built_in\">source</span>-release.zip.sha512\n$ shasum -c apache-dubbo-<span class=\"hljs-variable\">${release_version}</span>-bin-release.zip.sha512\n</code></pre>\n<h4>检查gpg签名</h4>\n<p>如果是第一次检查，需要首先导入公钥。</p>\n<pre><code class=\"language-sh\"> $ curl https://dist.apache.org/repos/dist/dev/incubator/dubbo/KEYS &gt;&gt; KEYS <span class=\"hljs-comment\"># download public keys to local directory</span>\n $ gpg --import KEYS <span class=\"hljs-comment\"># import keys</span>\n $ gpg —edit-key liujun\n   &gt; trust <span class=\"hljs-comment\"># type trust command</span>\n</code></pre>\n<p>然后使用如下命令检查签名</p>\n<pre><code class=\"language-sh\">gpg --verify apache-dubbo-2.6.3-source-release.zip.asc apache-dubbo-2.6.3-source-release.zip\ngpg --verify apache-dubbo-2.6.3-bin-release.zip.asc apache-dubbo-2.6.3-bin-release.zip\n</code></pre>\n<h3>检查源码包的文件内容</h3>\n<p>解压缩<code>apache-dubbo-${release_version}-source-release.zip</code>，进行如下检查:</p>\n<ul>\n<li>Directory with 'incubating' in name\n<code>apache-dubbo-${release_version}-source-release</code></li>\n<li>DISCLAIMER exists</li>\n<li>LICENSE and NOTICE exists and contents are good</li>\n<li>All files and no binary files exist</li>\n<li>All files has standard ASF License header</li>\n<li>Can compile from source</li>\n<li>All unit tests can pass<pre><code class=\"language-sh\">mvn clean <span class=\"hljs-built_in\">test</span> <span class=\"hljs-comment\"># This will run all unit tests</span>\n<span class=\"hljs-comment\"># you can also open rat and style plugin to check if every file meets requirements.</span>\nmvn clean <span class=\"hljs-built_in\">test</span> -Drat.skip=<span class=\"hljs-literal\">false</span> -Dcheckstyle.skip=<span class=\"hljs-literal\">false</span>\n</code></pre>\n</li>\n<li>Release candidates match with corresponding tags, you can find tag link and hash in vote email.\n<ul>\n<li>check the version number in pom.xml are the same</li>\n<li>check there are no extra files or directories in the source package, for example, no empty directories or useless log files，这里需要注意换行符是否一致<br>\n<code>diff -r a rc_dir tag_dir</code></li>\n<li>check the top n tag commits, dive into the related files and check if the source package has the same changes</li>\n</ul>\n</li>\n</ul>\n<h3>检查三方依赖的合规性</h3>\n<p>按照Apache基金会合规性规定，源码或者是二进制分发包中均不能包含Category X的依赖，其中就常见的是包含了GPL/LGPL的依赖，即使是传递依赖也不行。因此在发版的时候需要通过以下的命令进行检查：</p>\n<pre><code class=\"language-sh\">mvn license:add-third-party -Dlicense.useMissingFile\nfind . -name THIRD-PARTY.txt | xargs grep -E <span class=\"hljs-string\">'GPL|General Public License'</span> | grep -v Apache | grep -v MIT | grep -v CDDL\n</code></pre>\n<p>如果一个依赖提供了双协议或多重协议，可以选择与Apache最兼容的一个协议。</p>\n<h3>检查二进制包的文件内容</h3>\n<p>解压缩<code>apache-dubbo-${release_version}-bin-release.zip</code>，进行如下检查:</p>\n<ul>\n<li>Check signatures are good</li>\n<li>'incubating' in name</li>\n<li>LICENSE and NOTICE exists and contents are good</li>\n</ul>\n<p>注意，如果二进制包里面引入了第三方依赖，则需要更新LICENSE，加入第三方依赖的LICENSE，如果第三方依赖的LICENSE是Apache 2.0，并且对应的项目中包含了NOTICE，还需要更新NOTICE文件</p>\n<h2>进入投票</h2>\n<p>投票分两个阶段：</p>\n<ol>\n<li>Dubbo社区投票，发起投票邮件到dev@dubbo.apache.org。在社区开发者Review，经过至少72小时并统计到3个同意发版的binding票后（只有PMC的票才是binding），即可进入下一阶段的投票。</li>\n<li>Apache社区投票，发起投票邮件到general@incubator.apache.org。经过至少72小时并统计到3个同意发版的binding票后（只有IPMC Member的票才是binding），即可进行正式发布。</li>\n</ol>\n<p>Dubbo社区投票邮件模板：</p>\n<pre><code class=\"language-text\">Hello Dubbo Community,\n\nThis is a call for vote to release Apache Dubbo (Incubating) version 2.6.2.\n\nThe release candidates:\nhttps://dist.apache.org/repos/dist/dev/incubator/dubbo/2.6.2/\n\nThe staging repo:\nhttps://repository.apache.org/content/repositories/orgapachedubbo-1005\n\nGit tag for the release:\nhttps://github.com/apache/dubbo/tree/dubbo-2.6.2\n\nHash for the release tag:\nafab04c53edab38d52275d2a198ea1aff7a4f41e\n\nRelease Notes:\nhttps://github.com/apache/dubbo/releases/tag/untagged-4775c0a22c60fca55118\n\nThe artifacts have been signed with Key : 28681CB1, which can be found in the keys file:\nhttps://dist.apache.org/repos/dist/dev/incubator/dubbo/KEYS\n\nThe vote will be open for at least 72 hours or until necessary number of votes are reached.\n\nPlease vote accordingly:\n\n[ ] +1 approve \n[ ] +0 no opinion \n[ ] -1 disapprove with the reason\n\nThanks,\nThe Apache Dubbo (Incubating) Team\n</code></pre>\n<p>Apache社区投票邮件模板：</p>\n<pre><code class=\"language-text\">Hello all,\n\nThis is a call for vote to release Apache Dubbo (Incubating) version 2.6.4.\n\nThe Apache Dubbo community has voted on and approved a proposal to release\nApache Dubbo (Incubating) version 2.6.4.\n\nWe now kindly request the Incubator PMC members review and vote on this\nincubator release.\n\nApache Dubbo™  is a high-performance, java based, open source\nRPC framework. Dubbo offers three key functionalities, which include\ninterface based remote call, fault tolerance &amp; load balancing, and\nautomatic service registration &amp; discovery.\n\nDubbo community vote and result thread:\nhttps://lists.apache.org/thread.html/8d5c39eece6288beed2e22ca976350728c571d2a9cef1c9a9e56a409@%3Cdev.dubbo.apache.org%3E\nA minor issue also can be found in the above thread.\n\nThe release candidates (RC1):\nhttps://dist.apache.org/repos/dist/dev/incubator/dubbo/2.6.4\n\nThe staging repo:\nhttps://repository.apache.org/content/repositories/orgapachedubbo-1005\n\nGit tag for the release (RC1):\nhttps://github.com/apache/dubbo/tree/dubbo-2.6.4\n\nHash for the release tag:\n88037747a3b69d3225c73f6fbcda36ebd8435887\n\nRelease Notes:\n*https://github.com/apache/dubbo/blob/dubbo-2.6.4/CHANGES.md\n&lt;https://github.com/apache/dubbo/blob/dubbo-2.6.4/CHANGES.md&gt;*\n\nThe artifacts have been signed with Key : 7955FB6D1DD21CF7, which can be\nfound in the keys file:\nhttps://dist.apache.org/repos/dist/dev/incubator/dubbo/KEYS\n\nLook at here for how to verify this release candidate:\nhttps://github.com/apache/dubbo-website/blob/asf-site/blog/en-us/prepare-an-apache-release.md#prepare-apache-release\n\nThe vote will be open for at least 72 hours or until necessary number of\nvotes are reached.\n\nPlease vote accordingly:\n[ ] +1 approve\n[ ] +0 no opinion\n[ ] -1 disapprove with the reason\n\nThanks,\nThe Apache Dubbo (Incubating) Team\n</code></pre>\n<p>宣布投票结果模板：</p>\n<pre><code class=\"language-text\">We’ve received 3 +1 binding votes and one +1 non-binding vote:\n\n+1 binding, Ian Luo\n+1 binding, Huxing Zhang\n+1 binding, Jun Liu\n\n+1 non-binding, Jerrick\n\nI will create a new vote thread in Apache community now.\n\nBest regards,\nThe Apache Dubbo (Incubating) Team\n</code></pre>\n<h2>正式发布</h2>\n<ol>\n<li>将<a href=\"https://dist.apache.org/repos/dist/dev/incubator/dubbo\">dev</a>目录下的发布包添加到<a href=\"https://dist.apache.org/repos/dist/release/incubator/dubbo\">release</a>目录下，KEYS有更新的，也需要同步更新。</li>\n<li>删除<a href=\"https://dist.apache.org/repos/dist/dev/incubator/dubbo\">dev</a>目录下的发布包</li>\n<li>删除<a href=\"https://dist.apache.org/repos/dist/release/incubator/dubbo\">release</a>目录下上一个版本的发布包，这些包会被自动保存在<a href=\"https://archive.apache.org/dist/incubator/dubbo\">这里</a></li>\n<li>发布GitHub上的<a href=\"https://github.com/apache/dubbo/releases\">release notes</a></li>\n<li>修改GitHub的Readme文件，将版本号更新到最新发布的版本</li>\n<li>在官网下载<a href=\"http://dubbo.apache.org/en-us/blog/download.html\">页面</a>上添加最新版本的下载链接。最新的下载链接应该类似<a href=\"https://www.apache.org/dyn/closer.cgi?path=incubator/dubbo/$VERSION/apache-dubbo-$VERSION-source-release.zip\">这样</a>. 同时更新以前版本的下载链接，改为类似<a href=\"https://archive.apache.org/dist/incubator/dubbo/$VERSION/apache-dubbo-$VERSION-bin-release.zip\">这样</a>. 具体可以参考过往的<a href=\"https://github.com/apache/dubbo-website/blob/asf-site/blog/en-us/download.md\">下载链接</a></li>\n<li>合并<code>${release-version}-release</code>分支到对应的主干分支， 然后删除相应的release分支，例如: <code>git push origin --delete 2.7.0-release</code></li>\n<li>发邮件到 <code>dev@dubbo.apache.org</code> 和 <code>general@incubator.apache.org</code>\n宣布release邮件模板：</li>\n</ol>\n<pre><code class=\"language-text\">Hello Community,\n\nThe Apache Dubbo team is pleased to announce that the\n2.6.6 has just been released.\n\nApache Dubbo™  is a high-performance, java based, open source\nRPC framework. Dubbo offers three key functionalities, which include\ninterface based remote call, fault tolerance &amp; load balancing, and\nautomatic service registration &amp; discovery.\n\nBoth the source release[1] and the maven binary release[2] are available\nnow, you can also find the detailed release notes in here[3].\n\n\nIf you have any usage questions, or have problems when upgrading or find\nany problems about enhancements included in this release, please don’t\nhesitate to let us know by sending feedback to this mailing list or filing\nan issue on GitHub[4].\n\n\n\n=====\n*Disclaimer*\n\nApache Dubbo is an effort undergoing incubation at The Apache Software Foundation (ASF), sponsored by the Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.\n\n\n[1] http://dubbo.apache.org/en-us/blog/download.html\n[2] http://central.maven.org/maven2/com/alibaba/dubbo\n[3] https://github.com/apache/dubbo/releases\n[4] https://github.com/apache/dubbo/issues\n\n</code></pre>\n<h2>完成Maven Convenient Binary发布（可选）</h2>\n<p><strong><a href=\"http://repository.apache.org\">repository.apache.org</a></strong> nexus仓库的权限已经申请，参见<a href=\"https://issues.apache.org/jira/browse/INFRA-16451\">jira</a></p>\n<p>发布jar包到maven仓库，首先访问<a href=\"https://repository.apache.org\">repository.apache.org</a>, 选择<code>staging repository</code>, 点击<code>release</code>按钮。等待一段时间之后，在<a href=\"https://repository.apache.org/content/repositories/releases/org/apache/dubbo/\">这里</a>确认完整性和正确性. 发布到Maven中央仓库则还需要等待一段时间。可以在<a href=\"https://repo.maven.apache.org/maven2/org/apache/dubbo\">这里</a>进行确认。</p>\n<h2>FAQ</h2>\n<h4>gpg: signing failed: Inappropriate ioctl for device</h4>\n<p>If you've encoutered this error, try the following commands:</p>\n<pre><code>export GPG_TTY=$(tty)\n</code></pre>\n",
  "link": "/zh-cn/docs/developers/committer-guide/release-guide_dev.html",
  "meta": {
    "title": "如何准备Apache Release",
    "keywords": "Dubbo, Apache, Release"
  }
}