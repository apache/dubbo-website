{
  "filename": "guide_dev.md",
  "__html": "<h2>为Dubbo做贡献</h2>\n<p>Dubbo是在非限制性的Apache 2.0许可下发布的，遵循标准的Github开发流程，使用Github追踪处理问题，并将pull request合并到master中。如果您想为Dubbo 做贡献（即便是一些微小的），请不要犹豫，遵循下面的指导方针。</p>\n<h3>签署贡献者许可协议</h3>\n<p>在我们接受一个补丁或pull request之前，我们需要您签署贡献者许可协议。签署贡献者协议并不授予任何人对代码仓库的提交权限，但是它意味着我们可以接受您的贡献，并且如果我们这样做，您将获得一个作者标注。主动贡献者可能会被邀请加入核心团队，并有权限合并pull request。</p>\n<h3>联系我们</h3>\n<h4>邮件列表</h4>\n<p>邮件列表是讨论几乎所有与Dubbo有关事情的推荐方式。有关如何订阅的详细文档，请参阅<a href=\"https://github.com/apache/dubbo/wiki/Mailing-list-subscription-guide\">指南</a>。</p>\n<ul>\n<li><a href=\"mailto:dev-subscribe@dubbo.apache.org\">dev@dubbo.apache.org</a>: 开发邮件列表，如果您在使用或开发Dubbo时遇到任何问题，您可以在此提出问题。</li>\n<li><a href=\"mailto:commits-subscribe@dubbo.apache.org\">commits@dubbo.apache.org</a>: 所有提交将被发送到这个邮件列表。如果您对Dubbo的发展感兴趣，您可以订阅它。</li>\n<li><a href=\"mailto:notification-subscribe@dubbo.apache.org\">notification@dubbo.apache.org</a>: 所有Github  <a href=\"https://github.com/apache/dubbo/issues\">issue</a>和<a href=\"https://github.com/apache/dubbo/pulls\">pull request</a>的更新都会被发送到这个邮件列表。</li>\n</ul>\n<h3>报告问题</h3>\n<p>在报告任何问题时请遵循<a href=\"https://github.com/apache/dubbo/issues/new?template=dubbo-issue-report-template.md\">模版</a>。</p>\n<h3>代码约定</h3>\n<p>我们的代码风格几乎和标准Java约定一致（流行IDE的默认设置满足这一点），主要有以下附加限制：</p>\n<ul>\n<li>\n<p>如果当前行中有超过120个字符，则起一个新的行。</p>\n</li>\n<li>\n<p>确保所有新的.java文件都有一个简单的JavaDoc类注释，其中至少有一个标识创建日期的标签，最好至少有一个关于该类的解释说明。</p>\n</li>\n<li>\n<p>将ASF许可注释添加到所有新的.java文件（从项目中的现有文件复制）</p>\n</li>\n<li>\n<p>请确保没有将@author标记添加到您所贡献的文件中，因为Apache不使用@author标记，其他方式（如cvs）将公平地记录所有您的贡献。</p>\n</li>\n<li>\n<p>为代码添加一些JavaDoc，如果您更改命名空间，则需要一些XSD DOC元素。</p>\n</li>\n<li>\n<p>对于新的特征或重要的修复程序，应该添加单元测试。</p>\n</li>\n<li>\n<p>如果没有其他人使用您的分支，请将它与master（或主项目中的其他目标分支）同步。</p>\n</li>\n<li>\n<p>当编写提交消息时，请遵循这些约定，如果您正在修复一个现有问题，请在提交消息的末尾添加Fixes XXX（其中XXX是问题编号）。</p>\n</li>\n</ul>\n<h3>贡献流程</h3>\n<p>这是一个贡献者工作流程的大致说明：</p>\n<ul>\n<li>克隆当前项目</li>\n<li>从希望贡献的分支上创新新的分支，通常是master分支。</li>\n<li>提交您的更改。</li>\n<li>确保提交消息的格式正确。</li>\n<li>将新分支推送到您克隆的代码库中。</li>\n<li>执行检查表 <a href=\"https://github.com/apache/dubbo/blob/master/PULL_REQUEST_TEMPLATE.md\">pull request模版</a>。</li>\n<li>在提交pull requsest请求前, 请将您克隆的代码和远程代码库同步，这样您的pull request会简单清晰。具体操作如下：</li>\n</ul>\n<pre><code>git remote add upstream git@github.com:apache/dubbo.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n</code></pre>\n<ul>\n<li>提交pull request请求到apache/dubbo并等待回复。</li>\n</ul>\n<p>谢谢您的贡献！</p>\n<h3>代码风格</h3>\n<p>我们提供了IntelliJ idea的模版文件<a href=\"https://github.com/apache/dubbo/tree/master/codestyle/dubbo_codestyle_for_idea.xml\">dubbo_codestyle_for_idea.xml</a>，您可以将它导入到IDE。</p>\n<p>如果使用Eclipse，可以通过参考该文件手动配置。</p>\n<p><strong>注意事项</strong></p>\n<p>使用 dubbo_codestyle_for_idea.xml 为你的 IDEA 设置代码格式是贡献代码前至关重要的一个步骤，否则你将会无法通过 Travis CI 的代码风格校验，下面几个步骤给你演示了如何配置代码格式：</p>\n<ol>\n<li>进入菜单页 <code>Editor &gt; Code Style</code></li>\n<li>在 Code Style 页面的 scheme 菜单中点击 <img src=\"/img/manage_profiles.png\" alt=\"manage profiles\"> 选项\n在下拉列表中选择 <code>Import Scheme</code>, 接着选择 <code>IntelliJ IDEA code style XML</code> 导入 xml 文件</li>\n<li>输入你的格式名称，方便在不同工程之间进行识别，最后别忘了 ⏎ 来保存更改.</li>\n</ol>\n<p>设置完成后，IDEA 会帮助你自动 reformat 代码</p>\n",
  "link": "/zh-cn/docs/developers/guide_dev.html",
  "meta": {}
}