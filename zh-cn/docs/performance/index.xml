<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>性能优化 &amp; 基准测试 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/docs/performance/</link><description>Recent content in 性能优化 &amp; 基准测试 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/docs/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>基准测试</title><link>https://dubbo.apache.org/zh-cn/docs/performance/benchmarking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/docs/performance/benchmarking/</guid><description>此文档已经不再维护。您当前查看的是快照版本。如果想要查看最新版本的文档，请参阅最新版本。
1 Benchmark 结论 对比 2.x 版本，Dubbo3 版本
服务发现资源利用率显著提升。 对比接口级服务发现，单机常驻内存下降 50%，地址变更期 GC 消耗下降一个数量级 (百次 -&amp;gt; 十次) 对比应用级服务发现，单机常驻内存下降 75%，GC 次数趋零 Dubbo 协议性能持平，Triple 协议在网关、Stream吞吐量方面更具优势。 Dubbo协议 （3.0 vs 2.x），3.0 实现较 2.x 总体 qps rt 持平，略有提升 Triple协议 vs Dubbo协议，直连调用场景 Triple 性能并无优势，其优势在网关、Stream调用场景。 以下是详细压测过程与数据
2 应用级服务发现（地址推送链路） 此部分压测数据是由工商银行 Dubbo 团队基于内部生产数据给出，压测过程模拟了“生产环境地址+zookeeper”的服务发现架构。
2.1 环境 描述 压测数据 提供者500运行实例✖️8interface✖️5protocol，即每个提供者向注册中心注册40个URL，总计20000个URL，每个URL字符长度约1k。注册中心2个独立zookeeper注册中心，服务提供者消费者采用并行配置。消费者配置1c2g，xmx=768，开启GC，从2个注册中心订阅，每5秒调用一次服务。运行20小时。 压测环境 Java version &amp;ldquo;1.8.0&amp;rdquo;Java(TM) SE Runtime Enviroment (build pxa6480sr3fp12-20160919_01(SR3 FP12))IBM J9 VM (Build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796, JIT enabled, AOT enabled) 2.</description></item></channel></rss>