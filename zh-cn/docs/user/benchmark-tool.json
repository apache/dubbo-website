{
  "filename": "benchmark-tool.md",
  "__html": "<h1>基准测试工具包</h1>\n<ul>\n<li>下载源码： git clone <a href=\"https://github.com/apache/dubbo.git\">https://github.com/apache/dubbo.git</a></li>\n<li>编译benchmark: cd dubbo/dubbo-test/dubbo-test-benchmark; mvn clean install</li>\n<li>解压 benchmark压缩包： dubbo/dubbo-test/dubbo-test-benchmark/target/dubbo-test-benchmark-2.6.2-SNAPSHOT.tar.gz</li>\n</ul>\n<p>阅读ReadMe.txt（内容如下，请以压缩包内的为准）</p>\n<ul>\n<li>\n<p>新建一个benchmark工程，如demo.benchmark</p>\n</li>\n<li>\n<p>导入自己服务的接口api包和dubbo.benchmark.jar(解压dubbo.benchmark.tar.gz，在lib目录下)</p>\n</li>\n<li>\n<p>新建一个类，实现AbstractClientRunnable</p>\n<ul>\n<li>实现父类的构造函数</li>\n<li>实现invoke方法，通过serviceFactory创建本地接口代理，并实现自己的业务逻辑，如下</li>\n</ul>\n<pre><code class=\"language-java\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">invoke</span><span class=\"hljs-params\">(ServiceFactory serviceFactory)</span> </span>{\n        DemoService demoService = (DemoService) serviceFactory.get(DemoService.class);\n        <span class=\"hljs-keyword\">return</span> demoService.sendRequest(<span class=\"hljs-string\">\"hello\"</span>);\n    }\n</code></pre>\n</li>\n<li>\n<p>将自己的benchmark工程打成jar包,如demo.benchmark.jar</p>\n</li>\n<li>\n<p>将demo.benchmark.jar 和服务的api包放到dubbo.benchmark/lib目录下</p>\n</li>\n<li>\n<p>配置duubo.properties</p>\n</li>\n<li>\n<p>运行run.bat(windows)<a href=\"http://xn--run-du5f.sh\">或run.sh</a>(linux)</p>\n</li>\n</ul>\n<p>如想测试dubbo的不同版本，直接替换lib下的dubbo的jar包即可。</p>\n",
  "link": "/zh-cn/docs/user/benchmark-tool.html",
  "meta": {}
}