{
  "filename": "attachment.md",
  "__html": "<h1>隐式参数</h1>\n<p>可以通过 <code>RpcContext</code> 上的 <code>setAttachment</code> 和 <code>getAttachment</code> 在服务消费方和提供方之间进行参数的隐式传递。 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<p><img src=\"../sources/images/context.png\" alt=\"/user-guide/images/context.png\"></p>\n<h4>在服务消费方端设置隐式参数</h4>\n<p><code>setAttachment</code> 设置的 KV 对，在完成下面一次远程调用会被清空，即多次远程调用要多次设置。</p>\n<pre><code class=\"language-xml\">RpcContext.getContext().setAttachment(\"index\", \"1\"); // 隐式传参，后面的远程调用都会隐式将这些参数发送到服务器端，类似cookie，用于框架集成，不建议常规业务使用\nxxxService.xxx(); // 远程调用\n// ...\n</code></pre>\n<h4>在服务提供方端获取隐式参数</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">XxxServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">XxxService</span> </span>{\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">xxx</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// 获取客户端隐式传入的参数，用于框架集成，不建议常规业务使用</span>\n        String index = RpcContext.getContext().getAttachment(<span class=\"hljs-string\">\"index\"</span>); \n    }\n}\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>注意：path, group, version, dubbo, token, timeout 几个 key 是保留字段，请使用其它值。 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"
}