{
  "filename": "callback-parameter.md",
  "__html": "<h1>参数回调</h1>\n<p>参数回调方式与调用本地 callback 或 listener 相同，只需要在 Spring 的配置文件中声明哪个参数是 callback 类型即可。Dubbo 将基于长连接生成反向代理，这样就可以从服务器端调用客户端逻辑 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。可以参考 <a href=\"https://github.com/apache/incubator-dubbo/tree/master/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/callback\">dubbo 项目中的示例代码</a>。</p>\n<h4>服务接口示例</h4>\n<h6>CallbackService.java</h6>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.callback;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CallbackService</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addListener</span><span class=\"hljs-params\">(String key, CallbackListener listener)</span></span>;\n}\n</code></pre>\n<h6>CallbackListener.java</h6>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.callback;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">CallbackListener</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">changed</span><span class=\"hljs-params\">(String msg)</span></span>;\n}\n</code></pre>\n<h4>服务提供者接口实现示例</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">package</span> com.callback.impl;\n \n<span class=\"hljs-keyword\">import</span> java.text.SimpleDateFormat;\n<span class=\"hljs-keyword\">import</span> java.util.Date;\n<span class=\"hljs-keyword\">import</span> java.util.Map;\n<span class=\"hljs-keyword\">import</span> java.util.concurrent.ConcurrentHashMap;\n \n<span class=\"hljs-keyword\">import</span> com.callback.CallbackListener;\n<span class=\"hljs-keyword\">import</span> com.callback.CallbackService;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CallbackServiceImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">CallbackService</span> </span>{\n     \n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> Map&lt;String, CallbackListener&gt; listeners = <span class=\"hljs-keyword\">new</span> ConcurrentHashMap&lt;String, CallbackListener&gt;();\n  \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CallbackServiceImpl</span><span class=\"hljs-params\">()</span> </span>{\n        Thread t = <span class=\"hljs-keyword\">new</span> Thread(<span class=\"hljs-keyword\">new</span> Runnable() {\n            <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">run</span><span class=\"hljs-params\">()</span> </span>{\n                <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-keyword\">true</span>) {\n                    <span class=\"hljs-keyword\">try</span> {\n                        <span class=\"hljs-keyword\">for</span>(Map.Entry&lt;String, CallbackListener&gt; entry : listeners.entrySet()){\n                           <span class=\"hljs-keyword\">try</span> {\n                               entry.getValue().changed(getChanged(entry.getKey()));\n                           } <span class=\"hljs-keyword\">catch</span> (Throwable t) {\n                               listeners.remove(entry.getKey());\n                           }\n                        }\n                        Thread.sleep(<span class=\"hljs-number\">5000</span>); <span class=\"hljs-comment\">// 定时触发变更通知</span>\n                    } <span class=\"hljs-keyword\">catch</span> (Throwable t) { <span class=\"hljs-comment\">// 防御容错</span>\n                        t.printStackTrace();\n                    }\n                }\n            }\n        });\n        t.setDaemon(<span class=\"hljs-keyword\">true</span>);\n        t.start();\n    }\n  \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addListener</span><span class=\"hljs-params\">(String key, CallbackListener listener)</span> </span>{\n        listeners.put(key, listener);\n        listener.changed(getChanged(key)); <span class=\"hljs-comment\">// 发送变更通知</span>\n    }\n     \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> String <span class=\"hljs-title\">getChanged</span><span class=\"hljs-params\">(String key)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Changed: \"</span> + <span class=\"hljs-keyword\">new</span> SimpleDateFormat(<span class=\"hljs-string\">\"yyyy-MM-dd HH:mm:ss\"</span>).format(<span class=\"hljs-keyword\">new</span> Date());\n    }\n}\n</code></pre>\n<h4>服务提供者配置示例</h4>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"callbackService\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"com.callback.impl.CallbackServiceImpl\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.callback.CallbackService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"callbackService\"</span> <span class=\"hljs-attr\">connections</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">callbacks</span>=<span class=\"hljs-string\">\"1000\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:method</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"addListener\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:argument</span> <span class=\"hljs-attr\">index</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">callback</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--也可以通过指定类型的方式--&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--&lt;dubbo:argument type=\"com.demo.CallbackListener\" callback=\"true\" /&gt;--&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:method</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:service</span>&gt;</span>\n</code></pre>\n<h4>服务消费者配置示例</h4>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"callbackService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.callback.CallbackService\"</span> /&gt;</span>\n</code></pre>\n<h4>服务消费者调用示例</h4>\n<pre><code class=\"language-java\">ClassPathXmlApplicationContext context = <span class=\"hljs-keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"hljs-string\">\"classpath:consumer.xml\"</span>);\ncontext.start();\n \nCallbackService callbackService = (CallbackService) context.getBean(<span class=\"hljs-string\">\"callbackService\"</span>);\n \ncallbackService.addListener(<span class=\"hljs-string\">\"http://10.20.160.198/wiki/display/dubbo/foo.bar\"</span>, <span class=\"hljs-keyword\">new</span> CallbackListener(){\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">changed</span><span class=\"hljs-params\">(String msg)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"callback1:\"</span> + msg);\n    }\n});\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><code>2.0.6</code> 及其以上版本支持 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"
}