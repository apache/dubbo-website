{
  "filename": "events-notify.md",
  "__html": "<h1>事件通知</h1>\n<p>在调用之前、调用之后、出现异常时，会触发 <code>oninvoke</code>、<code>onreturn</code>、<code>onthrow</code> 三个事件，可以配置当事件发生时，通知哪个类的哪个方法 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<h4>服务提供者与消费者共享服务接口</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IDemoService</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Person <span class=\"hljs-title\">get</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> id)</span></span>;\n}\n</code></pre>\n<h4>服务提供者实现</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NormalDemoService</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">IDemoService</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Person <span class=\"hljs-title\">get</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> id)</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> Person(id, <span class=\"hljs-string\">\"charles`son\"</span>, <span class=\"hljs-number\">4</span>);\n    }\n}\n</code></pre>\n<h4>服务提供者配置</h4>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"rpc-callback-demo\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"http://10.20.160.198/wiki/display/dubbo/10.20.153.186\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.callback.implicit.NormalDemoService\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.callback.implicit.IDemoService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">version</span>=<span class=\"hljs-string\">\"1.0.0\"</span> <span class=\"hljs-attr\">group</span>=<span class=\"hljs-string\">\"cn\"</span>/&gt;</span>\n</code></pre>\n<h4>服务消费者 Callback 接口</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">Notify</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onreturn</span><span class=\"hljs-params\">(Person msg, Integer id)</span></span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onthrow</span><span class=\"hljs-params\">(Throwable ex, Integer id)</span></span>;\n}\n</code></pre>\n<h4>服务消费者 Callback 实现</h4>\n<pre><code class=\"language-java\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NotifyImpl</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Notify</span> </span>{\n    <span class=\"hljs-keyword\">public</span> Map&lt;Integer, Person&gt;    ret    = <span class=\"hljs-keyword\">new</span> HashMap&lt;Integer, Person&gt;();\n    <span class=\"hljs-keyword\">public</span> Map&lt;Integer, Throwable&gt; errors = <span class=\"hljs-keyword\">new</span> HashMap&lt;Integer, Throwable&gt;();\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onreturn</span><span class=\"hljs-params\">(Person msg, Integer id)</span> </span>{\n        System.out.println(<span class=\"hljs-string\">\"onreturn:\"</span> + msg);\n        ret.put(id, msg);\n    }\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">onthrow</span><span class=\"hljs-params\">(Throwable ex, Integer id)</span> </span>{\n        errors.put(id, ex);\n    }\n}\n</code></pre>\n<h4>服务消费者 Callback 配置</h4>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span> =<span class=\"hljs-string\">\"demoCallback\"</span> <span class=\"hljs-attr\">class</span> = <span class=\"hljs-string\">\"com.alibaba.dubbo.callback.implicit.NofifyImpl\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.callback.implicit.IDemoService\"</span> <span class=\"hljs-attr\">version</span>=<span class=\"hljs-string\">\"1.0.0\"</span> <span class=\"hljs-attr\">group</span>=<span class=\"hljs-string\">\"cn\"</span> &gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:method</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"get\"</span> <span class=\"hljs-attr\">async</span>=<span class=\"hljs-string\">\"true\"</span> <span class=\"hljs-attr\">onreturn</span> = <span class=\"hljs-string\">\"demoCallback.onreturn\"</span> <span class=\"hljs-attr\">onthrow</span>=<span class=\"hljs-string\">\"demoCallback.onthrow\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:reference</span>&gt;</span>\n</code></pre>\n<p><code>callback</code> 与 <code>async</code> 功能正交分解，<code>async=true</code> 表示结果是否马上返回，<code>onreturn</code> 表示是否需要回调。</p>\n<p>两者叠加存在以下几种组合情况 <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>：</p>\n<ul>\n<li>异步回调模式：<code>async=true onreturn=&quot;xxx&quot;</code></li>\n<li>同步回调模式：<code>async=false onreturn=&quot;xxx&quot;</code></li>\n<li>异步无回调 ：<code>async=true</code></li>\n<li>同步无回调 ：<code>async=false</code></li>\n</ul>\n<h4>测试代码</h4>\n<pre><code class=\"language-java\">IDemoService demoService = (IDemoService) context.getBean(<span class=\"hljs-string\">\"demoService\"</span>);\nNofifyImpl notify = (NofifyImpl) context.getBean(<span class=\"hljs-string\">\"demoCallback\"</span>);\n<span class=\"hljs-keyword\">int</span> requestId = <span class=\"hljs-number\">2</span>;\nPerson ret = demoService.get(requestId);\nAssert.assertEquals(<span class=\"hljs-keyword\">null</span>, ret);\n<span class=\"hljs-comment\">//for Test：只是用来说明callback正常被调用，业务具体实现自行决定.</span>\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">10</span>; i++) {\n    <span class=\"hljs-keyword\">if</span> (!notify.ret.containsKey(requestId)) {\n        Thread.sleep(<span class=\"hljs-number\">200</span>);\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">break</span>;\n    }\n}\nAssert.assertEquals(requestId, notify.ret.get(requestId).getId());\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>支持版本：<code>2.0.7</code> 之后 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><code>async=false</code> 默认 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"
}