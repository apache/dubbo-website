{
  "filename": "loadbalance.md",
  "__html": "<h1>负载均衡</h1>\n<p>在集群负载均衡时，Dubbo 提供了多种均衡策略，缺省为 <code>random</code> 随机调用。</p>\n<p>可以自行扩展负载均衡策略，参见：<a href=\"../../dev/impls/load-balance.md\">负载均衡扩展</a></p>\n<h2>负载均衡策略</h2>\n<h3>Random LoadBalance</h3>\n<ul>\n<li><strong>随机</strong>，按权重设置随机概率。</li>\n<li>在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。</li>\n</ul>\n<h3>RoundRobin LoadBalance</h3>\n<ul>\n<li><strong>轮询</strong>，按公约后的权重设置轮询比率。</li>\n<li>存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。</li>\n</ul>\n<h3>LeastActive LoadBalance</h3>\n<ul>\n<li><strong>最少活跃调用数</strong>，相同活跃数的随机，活跃数指调用前后计数差。</li>\n<li>使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。</li>\n</ul>\n<h3>ConsistentHash LoadBalance</h3>\n<ul>\n<li><strong>一致性 Hash</strong>，相同参数的请求总是发到同一提供者。</li>\n<li>当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。</li>\n<li>算法参见：<a href=\"http://en.wikipedia.org/wiki/Consistent_hashing\">http://en.wikipedia.org/wiki/Consistent_hashing</a></li>\n<li>缺省只对第一个参数 Hash，如果要修改，请配置 <code>&lt;dubbo:parameter key=&quot;hash.arguments&quot; value=&quot;0,1&quot; /&gt;</code></li>\n<li>缺省用 160 份虚拟节点，如果要修改，请配置 <code>&lt;dubbo:parameter key=&quot;hash.nodes&quot; value=&quot;320&quot; /&gt;</code></li>\n</ul>\n<h2>配置</h2>\n<h3>服务端服务级别</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"...\"</span> <span class=\"hljs-attr\">loadbalance</span>=<span class=\"hljs-string\">\"roundrobin\"</span> /&gt;</span>\n</code></pre>\n<h3>客户端服务级别</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"...\"</span> <span class=\"hljs-attr\">loadbalance</span>=<span class=\"hljs-string\">\"roundrobin\"</span> /&gt;</span>\n</code></pre>\n<h3>服务端方法级别</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"...\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:method</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"...\"</span> <span class=\"hljs-attr\">loadbalance</span>=<span class=\"hljs-string\">\"roundrobin\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:service</span>&gt;</span>\n</code></pre>\n<h3>客户端方法级别</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"...\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:method</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"...\"</span> <span class=\"hljs-attr\">loadbalance</span>=<span class=\"hljs-string\">\"roundrobin\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:reference</span>&gt;</span>\n</code></pre>\n"
}