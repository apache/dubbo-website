{
  "filename": "parameter-validation.md",
  "__html": "<h1>参数验证</h1>\n<p>参数验证功能 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> 是基于 <a href=\"https://jcp.org/en/jsr/detail?id=303\">JSR303</a> 实现的，用户只需标识 JSR303 标准的验证 annotation，并通过声明 filter 来实现验证 <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>。</p>\n<h2>Maven 依赖</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>javax.validation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>validation-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0.GA<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.hibernate<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hibernate-validator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.2.0.Final<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h2>示例</h2>\n<h3>参数标注示例</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> java.io.Serializable;\n<span class=\"hljs-keyword\">import</span> java.util.Date;\n \n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Future;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Max;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Min;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.NotNull;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Past;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Pattern;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Size;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ValidationParameter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>{\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = <span class=\"hljs-number\">7158911668568000392L</span>;\n \n    <span class=\"hljs-meta\">@NotNull</span> <span class=\"hljs-comment\">// 不允许为空</span>\n    <span class=\"hljs-meta\">@Size</span>(min = <span class=\"hljs-number\">1</span>, max = <span class=\"hljs-number\">20</span>) <span class=\"hljs-comment\">// 长度或大小范围</span>\n    <span class=\"hljs-keyword\">private</span> String name;\n \n    <span class=\"hljs-meta\">@NotNull</span>(groups = ValidationService.Save.class) <span class=\"hljs-comment\">// 保存时不允许为空，更新时允许为空 ，表示不更新该字段</span>\n    <span class=\"hljs-meta\">@Pattern</span>(regexp = <span class=\"hljs-string\">\"^\\\\s*\\\\w+(?:\\\\.{0,1}[\\\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\\\.[a-zA-Z]+\\\\s*$\"</span>)\n    <span class=\"hljs-keyword\">private</span> String email;\n \n    <span class=\"hljs-meta\">@Min</span>(<span class=\"hljs-number\">18</span>) <span class=\"hljs-comment\">// 最小值</span>\n    <span class=\"hljs-meta\">@Max</span>(<span class=\"hljs-number\">100</span>) <span class=\"hljs-comment\">// 最大值</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> age;\n \n    <span class=\"hljs-meta\">@Past</span> <span class=\"hljs-comment\">// 必须为一个过去的时间</span>\n    <span class=\"hljs-keyword\">private</span> Date loginDate;\n \n    <span class=\"hljs-meta\">@Future</span> <span class=\"hljs-comment\">// 必须为一个未来的时间</span>\n    <span class=\"hljs-keyword\">private</span> Date expiryDate;\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> name;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setName</span><span class=\"hljs-params\">(String name)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.name = name;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getEmail</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> email;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setEmail</span><span class=\"hljs-params\">(String email)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.email = email;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">getAge</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> age;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setAge</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> age)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.age = age;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Date <span class=\"hljs-title\">getLoginDate</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> loginDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setLoginDate</span><span class=\"hljs-params\">(Date loginDate)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.loginDate = loginDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Date <span class=\"hljs-title\">getExpiryDate</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> expiryDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setExpiryDate</span><span class=\"hljs-params\">(Date expiryDate)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.expiryDate = expiryDate;\n    }\n}\n</code></pre>\n<h3>分组验证示例</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{ <span class=\"hljs-comment\">// 缺省可按服务接口区分验证场景，如：@NotNull(groups = ValidationService.class)   </span>\n    <span class=\"hljs-meta\">@interface</span> Save{} <span class=\"hljs-comment\">// 与方法同名接口，首字母大写，用于区分验证场景，如：@NotNull(groups = ValidationService.Save.class)，可选</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n}\n</code></pre>\n<h3>关联验证示例</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> javax.validation.GroupSequence;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{   \n    <span class=\"hljs-meta\">@GroupSequence</span>(Update.class) <span class=\"hljs-comment\">// 同时验证Update组规则</span>\n    <span class=\"hljs-meta\">@interface</span> Save{}\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n \n    <span class=\"hljs-meta\">@interface</span> Update{} \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n}\n</code></pre>\n<h3>参数验证示例</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> javax.validation.constraints.Min;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.NotNull;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@NotNull ValidationParameter parameter)</span></span>; <span class=\"hljs-comment\">// 验证参数不为空</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">delete</span><span class=\"hljs-params\">(@Min(<span class=\"hljs-number\">1</span>)</span> <span class=\"hljs-keyword\">int</span> id)</span>; <span class=\"hljs-comment\">// 直接对基本类型参数验证</span>\n}\n</code></pre>\n<h2>配置</h2>\n<h3>在客户端验证参数</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"validationService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.examples.validation.api.ValidationService\"</span> <span class=\"hljs-attr\">validation</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n</code></pre>\n<h3>在服务器端验证参数</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.alibaba.dubbo.examples.validation.api.ValidationService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"validationService\"</span> <span class=\"hljs-attr\">validation</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n</code></pre>\n<h2>验证异常信息</h2>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> javax.validation.ConstraintViolationException;\n<span class=\"hljs-keyword\">import</span> javax.validation.ConstraintViolationException;\n \n<span class=\"hljs-keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;\n \n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.examples.validation.api.ValidationParameter;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.examples.validation.api.ValidationService;\n<span class=\"hljs-keyword\">import</span> com.alibaba.dubbo.rpc.RpcException;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ValidationConsumer</span> </span>{   \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> Exception </span>{\n        String config = ValidationConsumer.class.getPackage().getName().replace(<span class=\"hljs-string\">'.'</span>, <span class=\"hljs-string\">'/'</span>) + <span class=\"hljs-string\">\"/validation-consumer.xml\"</span>;\n        ClassPathXmlApplicationContext context = <span class=\"hljs-keyword\">new</span> ClassPathXmlApplicationContext(config);\n        context.start();\n        ValidationService validationService = (ValidationService)context.getBean(<span class=\"hljs-string\">\"validationService\"</span>);\n        <span class=\"hljs-comment\">// Error</span>\n        <span class=\"hljs-keyword\">try</span> {\n            parameter = <span class=\"hljs-keyword\">new</span> ValidationParameter();\n            validationService.save(parameter);\n            System.out.println(<span class=\"hljs-string\">\"Validation ERROR\"</span>);\n        } <span class=\"hljs-keyword\">catch</span> (RpcException e) { <span class=\"hljs-comment\">// 抛出的是RpcException</span>\n            ConstraintViolationException ve = (ConstraintViolationException) e.getCause(); <span class=\"hljs-comment\">// 里面嵌了一个ConstraintViolationException</span>\n            Set&lt;ConstraintViolation&lt;?&gt;&gt; violations = ve.getConstraintViolations(); <span class=\"hljs-comment\">// 可以拿到一个验证错误详细信息的集合</span>\n            System.out.println(violations);\n        }\n    } \n}\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>自 <code>2.1.0</code> 版本开始支持, 如何使用可以参考 <a href=\"https://github.com/apache/incubator-dubbo/tree/master/dubbo-test/dubbo-test-examples/src/main/java/com/alibaba/dubbo/examples/validation\">dubbo 项目中的示例代码</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>验证方式可扩展，扩展方式参见开发者手册中的<a href=\"http://dubbo.apache.org/books/dubbo-dev-book/impls/validation.html\">验证扩展</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "/zh-cn/docs/user/demos/parameter-validation.html",
  "meta": {}
}