{
  "filename": "preflight-check.md",
  "__html": "<h1>启动时检查</h1>\n<p>Dubbo 缺省会在启动时检查依赖的服务是否可用，不可用时会抛出异常，阻止 Spring 初始化完成，以便上线时，能及早发现问题，默认  <code>check=&quot;true&quot;</code>。</p>\n<p>可以通过 <code>check=&quot;false&quot;</code> 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。</p>\n<p>另外，如果你的 Spring 容器是懒加载的，或者通过 API 编程延迟引用服务，请关闭 check，否则服务临时不可用时，会抛出异常，拿到 null 引用，如果 <code>check=&quot;false&quot;</code>，总是会返回引用，当服务恢复时，能自动连上。</p>\n<h2>示例</h2>\n<h3>通过 spring 配置文件</h3>\n<p>关闭某个服务的启动时检查 (没有提供者时报错)：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.foo.BarService\"</span> <span class=\"hljs-attr\">check</span>=<span class=\"hljs-string\">\"false\"</span> /&gt;</span>\n</code></pre>\n<p>关闭所有服务的启动时检查 (没有提供者时报错)：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:consumer</span> <span class=\"hljs-attr\">check</span>=<span class=\"hljs-string\">\"false\"</span> /&gt;</span>\n</code></pre>\n<p>关闭注册中心启动时检查 (注册订阅失败时报错)：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">check</span>=<span class=\"hljs-string\">\"false\"</span> /&gt;</span>\n</code></pre>\n<h3>通过 dubbo.properties</h3>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">dubbo.reference.com.foo.BarService.check</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-meta\">dubbo.reference.check</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-meta\">dubbo.consumer.check</span>=<span class=\"hljs-string\">false</span>\n<span class=\"hljs-meta\">dubbo.registry.check</span>=<span class=\"hljs-string\">false</span>\n</code></pre>\n<h3>通过 -D 参数</h3>\n<pre><code class=\"language-sh\">java -Ddubbo.reference.com.foo.BarService.check=<span class=\"hljs-literal\">false</span>\njava -Ddubbo.reference.check=<span class=\"hljs-literal\">false</span>\njava -Ddubbo.consumer.check=<span class=\"hljs-literal\">false</span> \njava -Ddubbo.registry.check=<span class=\"hljs-literal\">false</span>\n</code></pre>\n<h2>配置的含义</h2>\n<p><code>dubbo.reference.check=false</code>，强制改变所有 reference 的 check 值，就算配置中有声明，也会被覆盖。</p>\n<p><code>dubbo.consumer.check=false</code>，是设置 check 的缺省值，如果配置中有显式的声明，如：<code>&lt;dubbo:reference check=&quot;true&quot;/&gt;</code>，不会受影响。</p>\n<p><code>dubbo.registry.check=false</code>，前面两个都是指订阅成功，但提供者列表是否为空是否报错，如果注册订阅失败时，也允许启动，需使用此选项，将在后台定时重试。</p>\n",
  "link": "/zh-cn/docs/user/demos/preflight-check.html",
  "meta": {}
}