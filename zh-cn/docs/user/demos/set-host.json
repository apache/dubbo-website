{
  "filename": "set-host.md",
  "__html": "<h2>背景</h2>\n<p>在<code>dubbo</code>中,<code>provider</code>启动时主要做两个事情,一是启动server,二是向注册中心注册服务.启动server时需要绑定socket,向注册中心注册服务时也需要发送socket唯一标识服务地址.</p>\n<ol>\n<li><code>dubbo</code>中不设置<code>host</code>时默认<code>host</code>是什么?</li>\n<li>那在<code>dubbo</code>中如何指定服务的<code>host</code>,我们是否可以用hostname或domain代替IP地址作为<code>host</code>?</li>\n<li>在使用docker时,有时需要设置端口映射,此时,启动server时绑定的socket和向注册中心注册的socket使用不同的端口号,此时又该如何设置?</li>\n</ol>\n<h2><code>dubbo</code>中不设置<code>host</code>时默认<code>host</code>是什么</h2>\n<p>一般的<code>dubbo</code>协议配置如下:</p>\n<pre><code class=\"language-xml\">    ...\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20890\"</span> /&gt;</span>\n    ...\n</code></pre>\n<p>可以看到,只配置了端口号,没有配置<code>host</code>,此时设置的<code>host</code>又是什么呢?\n查看代码发现,在<code>org.apache.dubbo.config.ServiceConfig#findConfigedHosts()</code>中,通过<code>InetAddress.getLocalHost().getHostAddress()</code>获取默认<code>host</code>.其返回值如下:</p>\n<ol>\n<li>未联网时,返回127.0.0.1</li>\n<li>在阿里云服务器中,返回私有地址,如:172.18.46.234</li>\n<li>在本机测试时,返回公有地址,如:30.5.10.11</li>\n</ol>\n<h2>那在<code>dubbo</code>中如何指定服务的socket?</h2>\n<p>除此之外,可以通过<code>dubbo.protocol</code>或<code>dubbo.provider</code>的<code>host</code>属性对<code>host</code>进行配置,支持IP地址和域名,如下:</p>\n<pre><code class=\"language-xml\">    ...\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20890\"</span> <span class=\"hljs-attr\">host</span>=<span class=\"hljs-string\">\"www.example.com\"</span>/&gt;</span>\n    ...\n</code></pre>\n<h2>在使用docker时,有时需要设置端口映射,此时,启动server时绑定的socket和向注册中心注册的socket使用不同的端口号,此时又该如何设置?</h2>\n<p>见<a href=\"https://github.com/dubbo/dubbo-samples/tree/master/dubbo-samples-docker\">dubbo通过环境变量设置host</a></p>\n<blockquote>\n<p>有些部署场景需要动态指定服务注册的地址，如docker bridge网络模式下要指定注册宿主机ip以实现外网通信。dubbo提供了两对启动阶段的系统属性，用于设置对外通信的ip、port地址\nDUBBO_IP_TO_REGISTRY --- 注册到注册中心的ip地址\nDUBBO_PORT_TO_REGISTRY --- 注册到注册中心的port端口\nDUBBO_IP_TO_BIND --- 监听ip地址\nDUBBO_PORT_TO_BIND --- 监听port端口</p>\n</blockquote>\n<blockquote>\n<p>以上四个配置项均为可选项，如不配置dubbo会自动获取ip与端口，请根据具体的部署场景灵活选择配置。\ndubbo支持多协议，如果一个应用同时暴露多个不同协议服务，且需要为每个服务单独指定ip或port，请分别在以上属性前加协议前缀。 如：\nHESSIAN_DUBBO_PORT_TO_BIND hessian协议绑定的port\nDUBBO_DUBBO_PORT_TO_BIND   dubbo协议绑定的port\nHESSIAN_DUBBO_IP_TO_REGISTRY hessian协议注册的ip\nDUBBO_DUBBO_PORT_TO_BIND     dubbo协议注册的ip\nPORT_TO_REGISTRY或IP_TO_REGISTRY不会用作默认PORT_TO_BIND或IP_TO_BIND，但是反过来是成立的\n如设置PORT_TO_REGISTRY=20881 IP_TO_REGISTRY=30.5.97.6，则PORT_TO_BIND IP_TO_BIND不受影响\n如果设置PORT_TO_BIND=20881 IP_TO_BIND=30.5.97.6，则默认PORT_TO_REGISTRY=20881 IP_TO_REGISTRY=30.5.97.6</p>\n</blockquote>\n<h2>总结</h2>\n<ol>\n<li>可以通过<code>dubbo.protocol</code>或<code>dubbo.provider</code>的<code>host</code>属性对<code>host</code>进行配置,支持IP地址和域名.但此时注册到注册中心的IP地址和监听IP地址是同一个值</li>\n<li>为了解决在虚拟环境或局域网内consumer无法与provider通信的问题,可以通过环境变量分别设置注册到注册中心的IP地址和监听IP地址,其优先级高于<code>dubbo.protocol</code>或<code>dubbo.provider</code>的<code>host</code>配置</li>\n</ol>\n<h2>参考</h2>\n<ol>\n<li><a href=\"https://github.com/apache/incubator-dubbo/issues/2043\">[Proposal]support hostname or domain in service discovery.</a></li>\n<li><a href=\"https://github.com/dubbo/dubbo-samples/tree/master/dubbo-samples-docker\">dubbo通过环境变量设置host</a></li>\n</ol>\n",
  "link": "/zh-cn/docs/user/demos/set-host.html",
  "meta": {}
}