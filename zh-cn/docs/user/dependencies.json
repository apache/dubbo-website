{
  "filename": "dependencies.md",
  "__html": "<h1>依赖</h1>\n<h2>必须依赖</h2>\n<p>JDK 1.6+ <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<h2>缺省依赖</h2>\n<p>通过 <code>mvn dependency:tree &gt; dep.log</code> 命令分析，Dubbo 缺省依赖以下三方库：</p>\n<pre><code>[INFO] +- com.alibaba:dubbo:jar:2.5.9-SNAPSHOT:compile\n[INFO] |  +- org.springframework:spring-context:jar:4.3.10.RELEASE:compile\n[INFO] |  +- org.javassist:javassist:jar:3.21.0-GA:compile\n[INFO] |  \\- org.jboss.netty:netty:jar:3.2.5.Final:compile\n</code></pre>\n<p>这里所有依赖都是换照 Dubbo 缺省配置选的，这些缺省值是基于稳定性和性能考虑的。</p>\n<ul>\n<li>javassist.jar <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>: 如果 <code>&lt;dubbo:provider proxy=&quot;jdk&quot; /&gt;</code> 或 <code>&lt;dubbo:consumer proxy=&quot;jdk&quot; /&gt;</code>，以及 <code>&lt;dubbo:application compiler=&quot;jdk&quot; /&gt;</code>，则不需要。</li>\n<li>spring-context.jar <sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>: 如果用 <code>ServiceConfig</code> 和 <code>ReferenceConfig</code> 的 API 调用，则不需要。</li>\n<li>netty.jar <sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup>: 如果 <code>&lt;dubbo:protocol server=&quot;mina&quot;/&gt;</code> 或 <code>&lt;dubbo:protocol server=&quot;grizzly&quot;/&gt;</code>，则换成 mina.jar 或 grizzly.jar。如果 <code>&lt;protocol name=&quot;rmi&quot;/&gt;</code>，则不需要。</li>\n</ul>\n<h2>可选依赖</h2>\n<p>以下依赖，在主动配置使用相应实现策略时用到，需自行加入依赖。</p>\n<ul>\n<li>netty-all 4.0.35.Final</li>\n<li>mina: 1.1.7</li>\n<li>grizzly: 2.1.4</li>\n<li>httpclient: 4.5.3</li>\n<li>hessian_lite: 3.2.1-fixed</li>\n<li>fastjson: 1.2.31</li>\n<li>zookeeper: 3.4.9</li>\n<li>jedis: 2.9.0</li>\n<li>xmemcached: 1.3.6</li>\n<li>hessian: 4.0.38</li>\n<li>jetty: 6.1.26</li>\n<li>hibernate-validator: 5.4.1.Final</li>\n<li>zkclient: 0.2</li>\n<li>curator: 2.12.0</li>\n<li>cxf: 3.0.14</li>\n<li>thrift: 0.8.0</li>\n<li>servlet: 3.0 <sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup></li>\n<li>validation-api: <a href=\"http://1.1.0.GA\">1.1.0.GA</a> <sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5:1\">[5:1]</a></sup></li>\n<li>jcache: 1.0.0 <sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5:2\">[5:2]</a></sup></li>\n<li>javax.el: 3.0.1-b08 <sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5:3\">[5:3]</a></sup></li>\n<li>kryo: 4.0.1</li>\n<li>kryo-serializers: 0.42</li>\n<li>fst: 2.48-jdk-6</li>\n<li>resteasy: 3.0.19.Final</li>\n<li>tomcat-embed-core: 8.0.11</li>\n<li>slf4j: 1.7.25</li>\n<li>log4j: 1.2.16</li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>理论上 Dubbo 可以只依赖 JDK，不依赖于任何三方库运行，只需配置使用 JDK 相关实现策略 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>字节码生成 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p>配置解析 <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p>网络传输 <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p>JEE <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref5:1\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref5:2\" class=\"footnote-backref\">↩︎</a> <a href=\"#fnref5:3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "/zh-cn/docs/user/dependencies.html",
  "meta": {
    "title": "依赖",
    "keywords": "必须依赖, 缺省依赖, 可选依赖",
    "description": "Dubbo 依赖基本介绍"
  }
}