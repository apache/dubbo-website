{
  "filename": "redis.md",
  "__html": "<h1>redis://</h1>\n<p>基于 Redis <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> 实现的 RPC 协议 <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>。</p>\n<h2>注册 redis 服务的地址</h2>\n<pre><code class=\"language-java\">RegistryFactory registryFactory = ExtensionLoader.getExtensionLoader(RegistryFactory.class).getAdaptiveExtension();\nRegistry registry = registryFactory.getRegistry(URL.valueOf(<span class=\"hljs-string\">\"zookeeper://10.20.153.10:2181\"</span>));\nregistry.register(URL.valueOf(<span class=\"hljs-string\">\"redis://10.20.153.11/com.foo.BarService?category=providers&amp;dynamic=false&amp;application=foo&amp;group=member&amp;loadbalance=consistenthash\"</span>));\n</code></pre>\n<h2>在客户端引用</h2>\n<p>在客户端使用 <sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"store\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"java.util.Map\"</span> <span class=\"hljs-attr\">group</span>=<span class=\"hljs-string\">\"member\"</span> /&gt;</span>\n</code></pre>\n<p>或者，点对点直连：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"store\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"java.util.Map\"</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">\"redis://10.20.153.10:6379\"</span> /&gt;</span>\n</code></pre>\n<p>也可以使用自定义接口：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"store\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.foo.StoreService\"</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">\"redis://10.20.153.10:6379\"</span> /&gt;</span>\n</code></pre>\n<p>方法名建议和 redis 的标准方法名相同，即：get(key), set(key, value), delet(key)。</p>\n<p>如果方法名和 redis 的标准方法名不相同，则需要配置映射关系 <sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup>：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"cache\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"com.foo.CacheService\"</span> <span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">\"redis://10.20.153.10:6379\"</span> <span class=\"hljs-attr\">p:set</span>=<span class=\"hljs-string\">\"putFoo\"</span> <span class=\"hljs-attr\">p:get</span>=<span class=\"hljs-string\">\"getFoo\"</span> <span class=\"hljs-attr\">p:delete</span>=<span class=\"hljs-string\">\"removeFoo\"</span> /&gt;</span>\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"http://redis.io\">Redis</a> 是一个高效的 KV 存储服务器 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><code>2.3.0</code> 以上版本支持 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p>不需要感知 Redis 的地址 <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p>其中 &quot;p:xxx&quot; 为 spring 的标准 p 标签 <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n"
}