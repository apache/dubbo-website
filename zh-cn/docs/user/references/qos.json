{
  "filename": "qos.md",
  "__html": "<h1>新版本 telnet 命令使用说明</h1>\n<p>dubbo <code>2.5.8</code> 新版本增加了 QOS 模块，提供了新的 telnet 命令支持。</p>\n<h2>端口</h2>\n<p>新版本的 telnet 端口 与 dubbo 协议的端口是不同的端口，默认为 <code>22222</code>，可通过配置文件<code>dubbo.properties</code> 修改:</p>\n<pre><code>dubbo.application.qos.port=33333\n</code></pre>\n<p>或者通过设置 JVM 参数:</p>\n<pre><code>-Ddubbo.application.qos.port=33333\n</code></pre>\n<h2>安全</h2>\n<p>默认情况下，dubbo 接收任何主机发起的命令，可通过配置文件<code>dubbo.properties</code> 修改:</p>\n<pre><code>dubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<p>或者通过设置 JVM 参数:</p>\n<pre><code>-Ddubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<p>拒绝远端主机发出的命令，只允许服务本机执行</p>\n<h2>telnet 与 http 协议</h2>\n<p>telnet 模块现在同时支持 http 协议和 telnet 协议，方便各种情况的使用</p>\n<p>示例如下：</p>\n<pre><code>➜  ~ telnet localhost 22222\nTrying ::1...\ntelnet: connect to address ::1: Connection refused\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\n  ████████▄  ███    █▄  ▀█████████▄  ▀█████████▄   ▄██████▄\n  ███   ▀███ ███    ███   ███    ███   ███    ███ ███    ███\n  ███    ███ ███    ███   ███    ███   ███    ███ ███    ███\n  ███    ███ ███    ███  ▄███▄▄▄██▀   ▄███▄▄▄██▀  ███    ███\n  ███    ███ ███    ███ ▀▀███▀▀▀██▄  ▀▀███▀▀▀██▄  ███    ███\n  ███    ███ ███    ███   ███    ██▄   ███    ██▄ ███    ███\n  ███   ▄███ ███    ███   ███    ███   ███    ███ ███    ███\n  ████████▀  ████████▀  ▄█████████▀  ▄█████████▀   ▀██████▀\n\n\ndubbo&gt;ls\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|org.apache.dubbo.demo.DemoService| N |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n\ndubbo&gt;\n</code></pre>\n<pre><code>➜  ~ curl &quot;localhost:22222/ls?arg1=xxx&amp;arg2=xxxx&quot;\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|org.apache.dubbo.demo.DemoService| N |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n</code></pre>\n<h2>支持的命令</h2>\n<h3>ls 列出消费者和提供者</h3>\n<pre><code>dubbo&gt;ls\nAs Provider side:\n+----------------------------------+---+\n|       Provider Service Name      |PUB|\n+----------------------------------+---+\n|org.apache.dubbo.demo.DemoService| Y |\n+----------------------------------+---+\nAs Consumer side:\n+---------------------+---+\n|Consumer Service Name|NUM|\n+---------------------+---+\n</code></pre>\n<p>列出 dubbo 的所提供的服务和消费的服务，以及消费的服务地址数</p>\n<h3>Online 上线服务命令</h3>\n<p>当使用延迟发布功能的时候(通过设置 org.apache.dubbo.config.AbstractServiceConfig#register 为 false)，后续需要上线的时候，可通过 Online 命令</p>\n<pre><code>//上线所有服务\ndubbo&gt;online\nOK\n\n//根据正则，上线部分服务\ndubbo&gt;online com.*\nOK\n</code></pre>\n<p>常见使用场景：</p>\n<ul>\n<li>当线上的 QPS 比较高的时候，当刚重启机器的时候，由于没有进行JIT 预热或相关资源没有预热，可能会导致大量超时，这个时候，可通过分批发布服务，逐渐加大流量</li>\n<li>当由于某台机器由于某种原因，需要下线服务，然后又需要重新上线服务</li>\n</ul>\n<h3>Offline 下线服务命令</h3>\n<p>由于故障等原因，需要临时下线服务保持现场，可以使用 Offline 下线命令。</p>\n<pre><code>//下线所有服务\ndubbo&gt;offline\nOK\n\n//根据正则，下线部分服务\ndubbo&gt;offline com.*\nOK\n</code></pre>\n<h3>help 命令</h3>\n<pre><code>//列出所有命令\ndubbo&gt;help\n\n//列出单个命令的具体使用情况\ndubbo&gt;help online\n+--------------+----------------------------------------------------------------------------------+\n| COMMAND NAME | online                                                                           |\n+--------------+----------------------------------------------------------------------------------+\n|      EXAMPLE | online dubbo                                                                     |\n|              | online xx.xx.xxx.service                                                         |\n+--------------+----------------------------------------------------------------------------------+\n\ndubbo&gt;\n</code></pre>\n<h2>相关参数说明</h2>\n<p>QoS提供了一些启动参数，来对启动进行配置，他们主要包括：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>qosEnable</td>\n<td>是否启动QoS</td>\n<td>true</td>\n</tr>\n<tr>\n<td>qosPort</td>\n<td>启动QoS绑定的端口</td>\n<td>22222</td>\n</tr>\n<tr>\n<td>qosAcceptForeignIp</td>\n<td>是否允许远程访问</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意，从2.6.4/2.7.0开始，qosAcceptForeignIp默认配置改为false，如果qosAcceptForeignIp设置为true，有可能带来安全风险，请仔细评估后再打开。</p>\n</blockquote>\n<p>QoS参数可以通过如下方式进行配置</p>\n<ul>\n<li>系统属性</li>\n<li>dubbo.properties</li>\n<li>XML方式</li>\n<li>Spring-boot自动装配方式</li>\n</ul>\n<p>其中，上述方式的优先顺序为系统属性 &gt; dubbo.properties &gt; XML/Spring-boot自动装配方式。</p>\n<h3>使用系统属性方式进行配置</h3>\n<pre><code>-Ddubbo.application.qos.enable=true\n-Ddubbo.application.qos.port=33333\n-Ddubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<h3>使用dubbo.properties文件进行配置</h3>\n<p>在项目的<code>src/main/resources</code>目录下添加dubbo.properties文件，内容如下:</p>\n<pre><code>dubbo.application.qos.enable=true\ndubbo.application.qos.port=33333\ndubbo.application.qos.accept.foreign.ip=false\n</code></pre>\n<h3>使用XML方法进行配置</h3>\n<p>如果要通过XML配置响应的QoS相关的参数，可以进行如下配置：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">beans</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\"</span>\n       <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n       <span class=\"hljs-attr\">xmlns:dubbo</span>=<span class=\"hljs-string\">\"http://dubbo.apache.org/schema/dubbo\"</span>\n       <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\">\"http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:application</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"demo-provider\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.enable\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"true\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.accept.foreign.ip\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:parameter</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"qos.port\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"33333\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dubbo:application</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"multicast://224.5.6.7:1234\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:protocol</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"dubbo\"</span> <span class=\"hljs-attr\">port</span>=<span class=\"hljs-string\">\"20880\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"org.apache.dubbo.demo.provider.DemoService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"demoService\"</span>/&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bean</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"demoService\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"org.apache.dubbo.demo.provider.DemoServiceImpl\"</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">beans</span>&gt;</span>\n</code></pre>\n<h3>使用spring-boot自动装配方式配置</h3>\n<p>如果是spring-boot的应用，可以在<code>application.properties</code>或者<code>application.yml</code>上配置:</p>\n<pre><code>dubbo.application.qosEnable=true\ndubbo.application.qosPort=33333\ndubbo.application.qosAcceptForeignIp=false\n</code></pre>\n",
  "link": "/zh-cn/docs/user/references/qos.html",
  "meta": {}
}