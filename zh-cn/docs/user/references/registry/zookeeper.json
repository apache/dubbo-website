{
  "filename": "zookeeper.md",
  "__html": "<h1>zookeeper 注册中心</h1>\n<p><a href=\"http://zookeeper.apache.org\">Zookeeper</a> 是 Apacahe Hadoop 的子项目，是一个树型的目录服务，支持变更推送，适合作为 Dubbo 服务的注册中心，工业强度较高，可用于生产环境，并推荐使用 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<p><img src=\"../../sources/images/zookeeper.jpg\" alt=\"/user-guide/images/zookeeper.jpg\"></p>\n<p>流程说明：</p>\n<ul>\n<li>服务提供者启动时: 向 <code>/dubbo/com.foo.BarService/providers</code> 目录下写入自己的 URL 地址</li>\n<li>服务消费者启动时: 订阅 <code>/dubbo/com.foo.BarService/providers</code> 目录下的提供者 URL 地址。并向 <code>/dubbo/com.foo.BarService/consumers</code> 目录下写入自己的 URL 地址</li>\n<li>监控中心启动时: 订阅 <code>/dubbo/com.foo.BarService</code> 目录下的所有提供者和消费者 URL 地址。</li>\n</ul>\n<p>支持以下功能：</p>\n<ul>\n<li>当提供者出现断电等异常停机时，注册中心能自动删除提供者信息</li>\n<li>当注册中心重启时，能自动恢复注册数据，以及订阅请求</li>\n<li>当会话过期时，能自动恢复注册数据，以及订阅请求</li>\n<li>当设置 <code>&lt;dubbo:registry check=&quot;false&quot; /&gt;</code> 时，记录失败注册和订阅请求，后台定时重试</li>\n<li>可通过 <code>&lt;dubbo:registry username=&quot;admin&quot; password=&quot;1234&quot; /&gt;</code> 设置 zookeeper 登录信息</li>\n<li>可通过 <code>&lt;dubbo:registry group=&quot;dubbo&quot; /&gt;</code> 设置 zookeeper 的根节点，不设置将使用无根树</li>\n<li>支持 <code>*</code> 号通配符 <code>&lt;dubbo:reference group=&quot;*&quot; version=&quot;*&quot; /&gt;</code>，可订阅服务的所有分组和所有版本的提供者</li>\n</ul>\n<h2>使用</h2>\n<p>在 provider 和 consumer 中增加 zookeeper 客户端 jar 包依赖：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>zookeeper<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>3.3.3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>或直接<a href=\"http://repo1.maven.org/maven2/org/apache/zookeeper/zookeeper\">下载</a>。</p>\n<p>Dubbo 支持 zkclient 和 curator 两种 Zookeeper 客户端实现：</p>\n<h3>使用 zkclient 客户端</h3>\n<p>从 <code>2.2.0</code> 版本开始缺省为 zkclient 实现，以提升 zookeeper 客户端的健状性。<a href=\"https://github.com/sgroschupf/zkclient\">zkclient</a> 是 Datameer 开源的一个 Zookeeper 客户端实现。</p>\n<p>缺省配置：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">...</span> <span class=\"hljs-attr\">client</span>=<span class=\"hljs-string\">\"zkclient\"</span> /&gt;</span>\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-sh\">dubbo.registry.client=zkclient\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-sh\">zookeeper://10.20.153.10:2181?client=zkclient\n</code></pre>\n<p>需依赖或直接<a href=\"http://repo1.maven.org/maven2/com/github/sgroschupf/zkclient\">下载</a>：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.github.sgroschupf<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>zkclient<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h3>使用 curator 客户端</h3>\n<p>从 <code>2.3.0</code> 版本开始支持可选 curator 实现。<a href=\"https://github.com/Netflix/curator\">Curator</a> 是 Netflix 开源的一个 Zookeeper 客户端实现。</p>\n<p>如果需要改为 curator 实现，请配置：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">...</span> <span class=\"hljs-attr\">client</span>=<span class=\"hljs-string\">\"curator\"</span> /&gt;</span>\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-sh\">dubbo.registry.client=curator\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-sh\">zookeeper://10.20.153.10:2181?client=curator\n</code></pre>\n<p>需依赖或直接<a href=\"http://repo1.maven.org/maven2/com/netflix/curator/curator-framework\">下载</a>：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.netflix.curator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>curator-framework<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.1.10<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>Zookeeper 单机配置:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"zookeeper://10.20.153.10:2181\"</span> /&gt;</span>\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"zookeeper\"</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"10.20.153.10:2181\"</span> /&gt;</span>\n</code></pre>\n<p>Zookeeper 集群配置：</p>\n<pre><code class=\"language-xml\">\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"zookeeper://10.20.153.10:2181?backup=10.20.153.11:2181,10.20.153.12:2181\"</span> /&gt;</span>\n</code></pre>\n<p>或：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"zookeeper\"</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"10.20.153.10:2181,10.20.153.11:2181,10.20.153.12:2181\"</span> /&gt;</span>\n</code></pre>\n<p>同一 Zookeeper，分成多组注册中心:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"chinaRegistry\"</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"zookeeper\"</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"10.20.153.10:2181\"</span> <span class=\"hljs-attr\">group</span>=<span class=\"hljs-string\">\"china\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:registry</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"intlRegistry\"</span> <span class=\"hljs-attr\">protocol</span>=<span class=\"hljs-string\">\"zookeeper\"</span> <span class=\"hljs-attr\">address</span>=<span class=\"hljs-string\">\"10.20.153.10:2181\"</span> <span class=\"hljs-attr\">group</span>=<span class=\"hljs-string\">\"intl\"</span> /&gt;</span>\n</code></pre>\n<h2>zookeeper 安装</h2>\n<p>安装方式参见: <a href=\"../../../admin/install/zookeeper.md\">Zookeeper安装手册</a>，只需搭一个原生的 Zookeeper 服务器，并将 <a href=\"../../preface/usage.md\">Quick Start</a> 中 Provider 和 Consumer 里的 <code>conf/dubbo.properties</code> 中的 <code>dubbo.registry.addrss</code> 的值改为 <code>zookeeper://127.0.0.1:2181</code> 即可使用。</p>\n<h2>可靠性声明</h2>\n<p>阿里内部并没有采用 Zookeeper 做为注册中心，而是使用自己实现的基于数据库的注册中心，即：Zookeeper 注册中心并没有在阿里内部长时间运行的可靠性保障，此 Zookeeper 桥接实现只为开源版本提供，其可靠性依赖于 Zookeeper 本身的可靠性。</p>\n<h2>兼容性声明</h2>\n<p>因 <code>2.0.8</code> 最初设计的 zookeeper 存储结构不能扩充不同类型的数据，<code>2.0.9</code> 版本做了调整，所以不兼容，需全部改用 <code>2.0.9</code> 版本才行，以后的版本会保持兼容 <code>2.0.9</code>。<code>2.2.0</code> 版本改为基于 zkclient 实现，需增加 zkclient 的依赖包，<code>2.3.0</code> 版本增加了基于 curator 的实现，作为可选实现策略。</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>建议使用 <code>2.3.3</code> 以上版本的 zookeeper 注册中心客户端 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "/zh-cn/docs/user/references/registry/zookeeper.html",
  "meta": {}
}