{
  "filename": "dubbo-protocol.md",
  "__html": "<style>\ntable {\n  width: 100%;\n  max-width: 65em;\n  border: 1px solid #dedede;\n  margin: 15px auto;\n  border-collapse: collapse;\n  empty-cells: show;\n}\ntable th,\ntable td {\n  height: 35px;\n  border: 1px solid #dedede;\n  padding: 0 10px;\n}\ntable th {\n  font-weight: bold;\n  text-align: center !important;\n  background: rgba(158,188,226,0.2);\n  white-space: nowrap;\n}\ntable tbody tr:nth-child(2n) {\n  background: rgba(158,188,226,0.12);\n}\ntable td:nth-child(1) {\n  white-space: nowrap;\n}\ntable tr:hover {\n  background: #efefef;\n}\n.table-area {\n  overflow: auto;\n}\n</style>\n<script type=\"text/javascript\">\n[].slice.call(document.querySelectorAll('table')).forEach(function(el){\n    var wrapper = document.createElement('div');\n    wrapper.className = 'table-area';\n    el.parentNode.insertBefore(wrapper, el);\n    el.parentNode.removeChild(el);\n    wrapper.appendChild(el);\n})\n</script>\n<h1>dubbo:protocol</h1>\n<p>服务提供者协议配置。对应的配置类： <code>com.alibaba.dubbo.config.ProtocolConfig</code>。同时，如果需要支持多协议，可以声明多个 <code>&lt;dubbo:protocol&gt;</code> 标签，并在 <code>&lt;dubbo:service&gt;</code> 中通过 <code>protocol</code> 属性指定使用的协议。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>对应URL参数</th>\n<th>类型</th>\n<th>是否必填</th>\n<th>缺省值</th>\n<th>作用</th>\n<th>描述</th>\n<th>兼容性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td></td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo</td>\n<td>配置关联</td>\n<td>协议BeanId，可以在&lt;dubbo:service protocol=&quot;&quot;&gt;中引用此ID，如果ID不填，缺省和name属性值一样，重复则在name后加序号。</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>name</td>\n<td>&lt;protocol&gt;</td>\n<td>string</td>\n<td><b>必填</b></td>\n<td>dubbo</td>\n<td>性能调优</td>\n<td>协议名称</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>port</td>\n<td>&lt;port&gt;</td>\n<td>int</td>\n<td>可选</td>\n<td>dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；如果<b>没有</b>配置port，则自动采用默认端口，如果配置为<b>-1</b>，则会分配一个没有被占用的端口。Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控。</td>\n<td>服务发现</td>\n<td>服务端口</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>host</td>\n<td>&lt;host&gt;</td>\n<td>string</td>\n<td>可选</td>\n<td>自动查找本机IP</td>\n<td>服务发现</td>\n<td>-服务主机名，多网卡选择或指定VIP及域名时使用，为空则自动查找本机IP，-建议不要配置，让Dubbo自动获取本机IP</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>threadpool</td>\n<td>threadpool</td>\n<td>string</td>\n<td>可选</td>\n<td>fixed</td>\n<td>性能调优</td>\n<td>线程池类型，可选：fixed/cached</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>threads</td>\n<td>threads</td>\n<td>int</td>\n<td>可选</td>\n<td>200</td>\n<td>性能调优</td>\n<td>服务线程池大小(固定大小)</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>iothreads</td>\n<td>threads</td>\n<td>int</td>\n<td>可选</td>\n<td>cpu个数+1</td>\n<td>性能调优</td>\n<td>io线程池大小(固定大小)</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>accepts</td>\n<td>accepts</td>\n<td>int</td>\n<td>可选</td>\n<td>0</td>\n<td>性能调优</td>\n<td>服务提供方最大可接受连接数</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>payload</td>\n<td>payload</td>\n<td>int</td>\n<td>可选</td>\n<td>8388608(=8M)</td>\n<td>性能调优</td>\n<td>请求及响应数据包大小限制，单位：字节</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>codec</td>\n<td>codec</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo</td>\n<td>性能调优</td>\n<td>协议编码方式</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>serialization</td>\n<td>serialization</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo协议缺省为hessian2，rmi协议缺省为java，http协议缺省为json</td>\n<td>性能调优</td>\n<td>协议序列化方式，当协议支持多种序列化方式时使用，比如：dubbo协议的dubbo,hessian2,java,compactedjava，以及http协议的json等</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>accesslog</td>\n<td>accesslog</td>\n<td>string/boolean</td>\n<td>可选</td>\n<td></td>\n<td>服务治理</td>\n<td>设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>path</td>\n<td>&lt;path&gt;</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务发现</td>\n<td>提供者上下文路径，为服务path的前缀</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>transporter</td>\n<td>transporter</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo协议缺省为netty</td>\n<td>性能调优</td>\n<td>协议的服务端和客户端实现类型，比如：dubbo协议的mina,netty等，可以分拆为server和client配置</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>server</td>\n<td>server</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo协议缺省为netty，http协议缺省为servlet</td>\n<td>性能调优</td>\n<td>协议的服务器端实现类型，比如：dubbo协议的mina,netty等，http协议的jetty,servlet等</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>client</td>\n<td>client</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo协议缺省为netty</td>\n<td>性能调优</td>\n<td>协议的客户端实现类型，比如：dubbo协议的mina,netty等</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>dispatcher</td>\n<td>dispatcher</td>\n<td>string</td>\n<td>可选</td>\n<td>dubbo协议缺省为all</td>\n<td>性能调优</td>\n<td>协议的消息派发方式，用于指定线程模型，比如：dubbo协议的all, direct, message, execution, connection等</td>\n<td>2.1.0以上版本</td>\n</tr>\n<tr>\n<td>queues</td>\n<td>queues</td>\n<td>int</td>\n<td>可选</td>\n<td>0</td>\n<td>性能调优</td>\n<td>线程池队列大小，当线程池满时，排队等待执行的队列大小，建议不要设置，当线程程池时应立即失败，重试其它服务提供机器，而不是排队，除非有特殊需求。</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>charset</td>\n<td>charset</td>\n<td>string</td>\n<td>可选</td>\n<td>UTF-8</td>\n<td>性能调优</td>\n<td>序列化编码</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>buffer</td>\n<td>buffer</td>\n<td>int</td>\n<td>可选</td>\n<td>8192</td>\n<td>性能调优</td>\n<td>网络读写缓冲区大小</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>heartbeat</td>\n<td>heartbeat</td>\n<td>int</td>\n<td>可选</td>\n<td>0</td>\n<td>性能调优</td>\n<td>心跳间隔，对于长连接，当物理层断开时，比如拔网线，TCP的FIN消息来不及发送，对方收不到断开事件，此时需要心跳来帮助检查连接是否已断开</td>\n<td>2.0.10以上版本</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>telnet</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务治理</td>\n<td>所支持的telnet命令，多个命令用逗号分隔</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>register</td>\n<td>register</td>\n<td>boolean</td>\n<td>可选</td>\n<td>true</td>\n<td>服务治理</td>\n<td>该协议的服务是否注册到注册中心</td>\n<td>2.0.8以上版本</td>\n</tr>\n<tr>\n<td>contextpath</td>\n<td>contextpath</td>\n<td>String</td>\n<td>可选</td>\n<td>缺省为空串</td>\n<td>服务治理</td>\n<td></td>\n<td>2.0.6以上版本</td>\n</tr>\n</tbody>\n</table>\n"
}