{
  "filename": "dubbo-service.md",
  "__html": "<style>\ntable {\n  width: 100%;\n  max-width: 65em;\n  border: 1px solid #dedede;\n  margin: 15px auto;\n  border-collapse: collapse;\n  empty-cells: show;\n}\ntable th,\ntable td {\n  height: 35px;\n  border: 1px solid #dedede;\n  padding: 0 10px;\n}\ntable th {\n  font-weight: bold;\n  text-align: center !important;\n  background: rgba(158,188,226,0.2);\n  white-space: nowrap;\n}\ntable tbody tr:nth-child(2n) {\n  background: rgba(158,188,226,0.12);\n}\ntable td:nth-child(1) {\n  white-space: nowrap;\n}\ntable tr:hover {\n  background: #efefef;\n}\n.table-area {\n  overflow: auto;\n}\n</style>\n<script type=\"text/javascript\">\n[].slice.call(document.querySelectorAll('table')).forEach(function(el){\n    var wrapper = document.createElement('div');\n    wrapper.className = 'table-area';\n    el.parentNode.insertBefore(wrapper, el);\n    el.parentNode.removeChild(el);\n    wrapper.appendChild(el);\n})\n</script>\n<h1>dubbo:service</h1>\n<p>服务提供者暴露服务配置。对应的配置类：<code>com.alibaba.dubbo.config.ServiceConfig</code></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>对应URL参数</th>\n<th>类型</th>\n<th>是否必填</th>\n<th>缺省值</th>\n<th>作用</th>\n<th>描述</th>\n<th>兼容性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>interface</td>\n<td></td>\n<td>class</td>\n<td><b>必填</b></td>\n<td></td>\n<td>服务发现</td>\n<td>服务接口名</td>\n<td>1.0.0以上版本</td>\n</tr>\n<tr>\n<td>ref</td>\n<td></td>\n<td>object</td>\n<td><b>必填</b></td>\n<td></td>\n<td>服务发现</td>\n<td>服务对象实现引用</td>\n<td>1.0.0以上版本</td>\n</tr>\n<tr>\n<td>version</td>\n<td>version</td>\n<td>string</td>\n<td>可选</td>\n<td>0.0.0</td>\n<td>服务发现</td>\n<td>服务版本，建议使用两位数字版本，如：1.0，通常在接口不兼容时版本号才需要升级</td>\n<td>1.0.0以上版本</td>\n</tr>\n<tr>\n<td>group</td>\n<td>group</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务发现</td>\n<td>服务分组，当一个接口有多个实现，可以用分组区分</td>\n<td>1.0.7以上版本</td>\n</tr>\n<tr>\n<td>path</td>\n<td>&lt;path&gt;</td>\n<td>string</td>\n<td>可选</td>\n<td>缺省为接口名</td>\n<td>服务发现</td>\n<td>服务路径 (注意：1.0不支持自定义路径，总是使用接口名，如果有1.0调2.0，配置服务路径可能不兼容)</td>\n<td>1.0.12以上版本</td>\n</tr>\n<tr>\n<td>delay</td>\n<td>delay</td>\n<td>int</td>\n<td>可选</td>\n<td>0</td>\n<td>性能调优</td>\n<td>延迟注册服务时间(毫秒) ，设为-1时，表示延迟到Spring容器初始化完成时暴露服务</td>\n<td>1.0.14以上版本</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>timeout</td>\n<td>int</td>\n<td>可选</td>\n<td>1000</td>\n<td>性能调优</td>\n<td>远程服务调用超时时间(毫秒)</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>retries</td>\n<td>retries</td>\n<td>int</td>\n<td>可选</td>\n<td>2</td>\n<td>性能调优</td>\n<td>远程服务调用重试次数，不包括第一次调用，不需要重试请设为0</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>connections</td>\n<td>connections</td>\n<td>int</td>\n<td>可选</td>\n<td>100</td>\n<td>性能调优</td>\n<td>对每个提供者的最大连接数，rmi、http、hessian等短连接协议表示限制连接数，dubbo等长连接协表示建立的长连接个数</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>loadbalance</td>\n<td>loadbalance</td>\n<td>string</td>\n<td>可选</td>\n<td>random</td>\n<td>性能调优</td>\n<td>负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮询，最少活跃调用</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>async</td>\n<td>async</td>\n<td>boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>性能调优</td>\n<td>是否缺省异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>stub</td>\n<td>stub</td>\n<td>class/boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>服务治理</td>\n<td>设为true，表示使用缺省代理类名，即：接口名 + Local后缀，服务接口客户端本地代理类名，用于在客户端执行本地逻辑，如本地缓存等，该本地代理类的构造函数必须允许传入远程代理对象，构造函数如：public XxxServiceLocal(XxxService xxxService)</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>mock</td>\n<td>mock</td>\n<td>class/boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>服务治理</td>\n<td>设为true，表示使用缺省Mock类名，即：接口名 + Mock后缀，服务接口调用失败Mock实现类，该Mock类必须有一个无参构造函数，与Local的区别在于，Local总是被执行，而Mock只在出现非业务异常(比如超时，网络异常等)时执行，Local在远程调用之前执行，Mock在远程调用后执行。</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>token</td>\n<td>token</td>\n<td>string/boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>服务治理</td>\n<td>令牌验证，为空表示不开启，如果为true，表示随机生成动态令牌，否则使用静态令牌，令牌的作用是防止消费者绕过注册中心直接访问，保证注册中心的授权功能有效，如果使用点对点调用，需关闭令牌功能</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>registry</td>\n<td></td>\n<td>string</td>\n<td>可选</td>\n<td>缺省向所有registry注册</td>\n<td>配置关联</td>\n<td>向指定注册中心注册，在多个注册中心时使用，值为&lt;dubbo:registry&gt;的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>provider</td>\n<td></td>\n<td>string</td>\n<td>可选</td>\n<td>缺使用第一个provider配置</td>\n<td>配置关联</td>\n<td>指定provider，值为&lt;dubbo:provider&gt;的id属性</td>\n<td>2.0.0以上版本</td>\n</tr>\n<tr>\n<td>deprecated</td>\n<td>deprecated</td>\n<td>boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>服务治理</td>\n<td>服务是否过时，如果设为true，消费方引用时将打印服务过时警告error日志</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>dynamic</td>\n<td>dynamic</td>\n<td>boolean</td>\n<td>可选</td>\n<td>true</td>\n<td>服务治理</td>\n<td>服务是否动态注册，如果设为false，注册后将显示后disable状态，需人工启用，并且服务提供者停止时，也不会自动取消册，需人工禁用。</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>accesslog</td>\n<td>accesslog</td>\n<td>string/boolean</td>\n<td>可选</td>\n<td>false</td>\n<td>服务治理</td>\n<td>设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>owner</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务治理</td>\n<td>服务负责人，用于服务治理，请填写负责人公司邮箱前缀</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>document</td>\n<td>document</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务治理</td>\n<td>服务文档URL</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>weight</td>\n<td>weight</td>\n<td>int</td>\n<td>可选</td>\n<td></td>\n<td>性能调优</td>\n<td>服务权重</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>executes</td>\n<td>executes</td>\n<td>int</td>\n<td>可选</td>\n<td>0</td>\n<td>性能调优</td>\n<td>服务提供者每服务每方法最大可并行执行请求数</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>proxy</td>\n<td>string</td>\n<td>可选</td>\n<td>javassist</td>\n<td>性能调优</td>\n<td>生成动态代理方式，可选：jdk/javassist</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>cluster</td>\n<td>cluster</td>\n<td>string</td>\n<td>可选</td>\n<td>failover</td>\n<td>性能调优</td>\n<td>集群方式，可选：failover/failfast/failsafe/failback/forking</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>service.filter</td>\n<td>string</td>\n<td>可选</td>\n<td>default</td>\n<td>性能调优</td>\n<td>服务提供方远程调用过程拦截器名称，多个名称用逗号分隔</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>listener</td>\n<td>exporter.listener</td>\n<td>string</td>\n<td>可选</td>\n<td>default</td>\n<td>性能调优</td>\n<td>服务提供方导出服务监听器名称，多个名称用逗号分隔</td>\n<td></td>\n</tr>\n<tr>\n<td>protocol</td>\n<td></td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>配置关联</td>\n<td>使用指定的协议暴露服务，在多协议时使用，值为&lt;dubbo:protocol&gt;的id属性，多个协议ID用逗号分隔</td>\n<td>2.0.5以上版本</td>\n</tr>\n<tr>\n<td>layer</td>\n<td>layer</td>\n<td>string</td>\n<td>可选</td>\n<td></td>\n<td>服务治理</td>\n<td>服务提供者所在的分层。如：biz、dao、intl:web、china:acton。</td>\n<td>2.0.7以上版本</td>\n</tr>\n<tr>\n<td>register</td>\n<td>register</td>\n<td>boolean</td>\n<td>可选</td>\n<td>true</td>\n<td>服务治理</td>\n<td>该协议的服务是否注册到注册中心</td>\n<td>2.0.8以上版本</td>\n</tr>\n</tbody>\n</table>\n"
}