<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>快速开始 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/</link><description>Recent content in 快速开始 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/index.xml" rel="self" type="application/rss+xml"/><item><title>开发 RPC Server &amp; RPC Client</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/rpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/rpc/</guid><description>基于 Dubbo 定义的 Triple 协议，你可以轻松编写浏览器、gRPC 兼容的 RPC 服务，并让这些服务同时运行在 HTTP/1 和 HTTP/2 上。Dubbo Go SDK 支持使用 IDL 或编程语言特有的方式定义服务，并提供一套轻量的 API 来发布或调用这些服务。
本示例演示了基于 Triple 协议的 RPC 通信模式，示例使用 Protocol Buffer 定义 RPC 服务，并演示了代码生成、服务发布和服务访问等过程。
前置条件 因为使用 Protocol Buffer 的原因，我们首先需要安装相关的代码生成工具，这包括 protoc、protoc-gen-go、protoc-gen-go-triple。
安装 protoc
查看 Protocol Buffer Compiler 安装指南
安装 protoc 插件
接下来，我们安装插件 protoc-gen-go、protoc-gen-go-triple。
go install google.golang.org/protobuf/cmd/protoc-gen-go@latest go install dubbo.apache.org/dubbo-go/v3/cmd/protoc-gen-go-triple@v3.0.1 确保 protoc-gen-go、protoc-gen-go-triple 在你的 PATH 中。这可以通过 which protoc-gen-go 验证，如果该命令不能正常工作的话，请执行以下命令：
[ -n &amp;#34;$(go env GOBIN)&amp;#34; ] &amp;amp;&amp;amp; export PATH=&amp;#34;$(go env GOBIN):${PATH}&amp;#34; [ -n &amp;#34;$(go env GOPATH)&amp;#34; ] &amp;amp;&amp;amp; export PATH=&amp;#34;$(go env GOPATH)/bin:${PATH}&amp;#34; 快速运行示例 下载示例源码 我们在 apache/dubbo-go-samples 仓库维护了一系列 dubbo-go 使用示例，用来帮助用户快速学习 dubbo-go 使用方式。</description></item><item><title>开发微服务</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/microservices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/quickstart/microservices/</guid><description>本示例演示了使用 dubbo-go 开发微服务应用，为应用增加包括服务发现、负载均衡、流量管控等微服务核心能力。
前置条件 本示例我们继续使用 Protobuf 开发微服务应用，请参考 开发 rpc server 和 rpc client 了解如何安装 protoc、protoc-gen-go-triple 等必须插件。
快速运行示例 下载示例源码 我们在 apache/dubbo-go-samples 仓库维护了一系列 dubbo-go 使用示例，用来帮助用户快速学习 dubbo-go 使用方式。
你可以 下载示例zip包并解压，或者克隆仓库：
$ git clone --depth 1 https://github.com/apache/dubbo-go-samples 切换到快速开始示例目录：
$ cd dubbo-go-samples/registry/nacos 启动 Nacos 由于示例应用中启用了服务发现能力且使用 Nacos 作为注册中心，在运行示例之前需要先启动注册中心。请参考 Nacos 本地安装 了解如何快速安装和启动 Nacos。
运行 server 在 go-server/cmd 示例目录：
运行以下命令，启动 server：
$ go run server.go 使用 cURL 验证 server 正常启动：
$ curl \ --header &amp;#34;Content-Type: application/json&amp;#34; \ --data &amp;#39;{&amp;#34;name&amp;#34;: &amp;#34;Dubbo&amp;#34;}&amp;#39; \ http://localhost:50051/greet.</description></item></channel></rss>