<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP流量接入 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/</link><description>Recent content in HTTP流量接入 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/index.xml" rel="self" type="application/rss+xml"/><item><title>接入 Ingress 流量</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/http_triple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/http_triple/</guid><description>1. 准备工作 kubectl 一个 k8s 集群，配置好 kubeconfig 2. 使用 HTTP 协议通过网关调用 Triple 应用 Dubbo-go-pixiu 网关支持调用 GO/Java 的 Dubbo 集群。在 Dubbo-go 3.0 的场景下，我们可以通过 Pixiu 网关，在集群外以 HTTP 协议请求 pixiu 网关，在网关层进行协议转换，进一步调用集群内的Dubbo-go 服务。
用户调用 Dubbo-go 服务的 path 为http://$(app_name)/$(service_name)/$(method)。
例如一个proto文件内有如下定义：
package org.apache.dubbo.quickstart.samples; service UserProvider { rpc SayHello (HelloRequest) returns (User) {} } message HelloRequest { string name = 1; } 并在dubbo-go 服务启动时在dubbogo.yml 内配置应用名为my-dubbogo-app:
dubbo: application: name: my-dubbogo-app pixiu 网关即可解析 path 为 my-dubbogo-app/org.apache.dubbo.quickstart.samples.UserProvider/SayHello 的路由，并转发至对应服务。来自外部HTTP 请求的 body 为 json 序列化的请求参数，例如 {&amp;ldquo;name&amp;rdquo;:&amp;ldquo;test&amp;rdquo;}。</description></item><item><title>使用 Pixiu 暴露 Dubbo-go 服务</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/pixiu-nacos-triple/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/golang-sdk/tutorial/gateway/pixiu-nacos-triple/</guid><description>Dubbo-go-pixiu 网关支持调用 GO/Java 的 Dubbo 集群。在 Dubbo-go 3.0 的场景下，我们可以通过 Pixiu 网关，在集群外以 HTTP 协议请求 pixiu 网关，在网关层进行协议转换，进一步调用集群内的Dubbo-go 服务。
用户调用 Dubbo-go 服务的 path 为http://$(app_name)/$(service_name)/$(method)
例如一个proto文件内有如下定义：
package org.apache.dubbo.quickstart.samples; service UserProvider { rpc SayHello (HelloRequest) returns (User) {} } message HelloRequest { string name = 1; } 并在dubbo-go 服务启动时在dubbogo.yml 内配置应用名为my-dubbogo-app:
dubbo: application: name: my-dubbogo-app pixiu 网关即可解析 path 为 http://my-dubbogo-app/org.apache.dubbo.quickstart.samples.UserProvider/SayHello 的路由，并转发至对应服务。来自外部HTTP 请求的 body 为 json 序列化的请求参数，例如 {&amp;ldquo;name&amp;rdquo;:&amp;ldquo;test&amp;rdquo;}。
我们目前推荐使用 Nacos 作为注册中心。
用户可以在自己的集群里部署我们的demo，集群最好拥有暴露 lb 类型 service 的能力，从而可以在公网访问至集群内的服务，您也可以直接集群内进行请求。针对您的集群，执行：
$ kubectl apply -f https://raw.</description></item></channel></rss>