<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>快速入门 on Apache Dubbo</title><link>https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/</link><description>Recent content in 快速入门 on Apache Dubbo</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/index.xml" rel="self" type="application/rss+xml"/><item><title>创建基于Spring Boot的微服务应用</title><link>https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/starter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/starter/</guid><description>&lt;p>以下文档将引导您从头创建一个基于 Spring Boot 的 Dubbo 应用，并为应用配置 Triple 通信协议、服务发现等微服务基础能力。&lt;/p>
&lt;h2 id="快速创建应用">快速创建应用&lt;/h2>
&lt;p>以下是我们为您提前准备好的示例项目，可通过如下命令快速下载示例源码。在实际开发中，您也可以访问 &lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/springboot/#%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE">start.dubbo.apache.org&lt;/a> 快速创建一个全新的 Dubbo 应用模板。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>curl -O -# https://dubbo-demo.oss-cn-hangzhou.aliyuncs.com/quickstart/dubbo-quickstart.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unzip dubbo-quickstart
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b58900">cd&lt;/span> dubbo-quickstart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">提示&lt;/h4>

 本项目源码在 Dubbo Github 示例仓库中维护 &lt;a href="https://github.com/apache/dubbo-samples/tree/master/11-quickstart">https://github.com/apache/dubbo-samples&lt;/a>

&lt;/div>

&lt;h2 id="本地启动应用">本地启动应用&lt;/h2>
&lt;p>接下来，让我们尝试在本地启动应用。运行以下命令启动应用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>chmod a+x ./mvnw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./mvnw clean install -DskipTests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./mvnw compile -pl quickstart-service exec:java -Dexec.mainClass&lt;span style="color:#719e07">=&lt;/span>&lt;span style="color:#2aa198">&amp;#34;org.apache.dubbo.samples.quickstart.QuickStartApplication&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>

 &lt;ul>
&lt;li>运行示例要求 JDK 17+ 版本。&lt;/li>
&lt;li>由于配置文件中启用了注册中心，您需要首先在本地启动 &lt;a href="https://cn.dubbo.apache.org/zh-cn/overview/reference/integrations/nacos/" target="_blank_">Nacos&lt;/a> 注册中心 server。或者参考下一篇 Kubernetes 部署方式。&lt;/li>
&lt;/ul>


&lt;/div>

&lt;p>在应用启动成功后，本地进程使用 &lt;a href="overview/mannual/java-sdk/tasks/protocols/triple" target="_blank_">Triple &lt;/a>协议在指定端口发布了服务。同时可以看到消费端持续对提供端发起调用调用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Started QuickStartApplication in 4.38 seconds (process running for 4.629)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Receive result ======&amp;gt; Hello world
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可直接使用 cURL 测试服务是否已经正常运行：&lt;/p></description></item><item><title>快速部署Dubbo应用</title><link>https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/deploy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/quick-start/deploy/</guid><description>&lt;p>在上一篇文章中，我们学习了如何开发基于 Spring Boot 的 Dubbo 应用。接下来，我们将学习部署这个 Dubbo 应用。&lt;/p>
&lt;p>本文将以 Kubernetes 集群作为基础环境来讲解 Dubbo 应用的部署，部署架构如下图所示：&lt;/p>
&lt;img alt="Dubbo+Kubernetes+Nacos 部署架构图" src="https://cn.dubbo.apache.org/imgs/v3/quickstart/nacos-kubernetes-deployment.png" style="max-width:700px;">


&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>

 在实际使用中可能会选择不同的部署环境与架构，如使用服务网格(Service Mesh)、虚拟机等多种部署模式，请参考 &lt;a href="../../tasks/deploy/">部署文档&lt;/a> 了解更多详细内容。

&lt;/div>

&lt;h2 id="部署应用">部署应用&lt;/h2>
&lt;p>我们为您提前准备好了示例项目的镜像与部署文件，您可以使用如下命令将示例快速部署到 Kubernetes 集群（请确保在示例源码根目录执行如下命令）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl apply -f ./Kubernetes-manifests.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上命令将自动部署如下资源：&lt;/p>
&lt;ul>
&lt;li>dubbo-system 命名空间
&lt;ul>
&lt;li>Nacos Deployment&lt;/li>
&lt;li>Nacos Service&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>dubbo-quickstart 命名空间
&lt;ul>
&lt;li>Quickstart Deployment&lt;/li>
&lt;li>Quickstart Service&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>运行以下命令，确认资源已经部署成功：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>kubectl get services -n dubbo-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>kubectl get services -n dubbo-quickstart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="访问应用">访问应用&lt;/h2>
&lt;p>部署成功后，可以通过以下方式检查应用状态。&lt;/p>





&lt;ul class="nav nav-tabs" id="tabs-1" role="tablist">
 &lt;li class="nav-item">
 &lt;button class="nav-link disabled"
 id="tabs-01-00-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-00" role="tab"
 aria-controls="tabs-01-00" aria-selected="false">
 请根据情况选择：
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link active"
 id="tabs-01-01-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-01" role="tab"
 data-td-tp-persist="本地 kubernetes 集群" aria-controls="tabs-01-01" aria-selected="true">
 本地 Kubernetes 集群
 &lt;/button>
 &lt;/li>&lt;li class="nav-item">
 &lt;button class="nav-link"
 id="tabs-01-02-tab" data-bs-toggle="tab" data-bs-target="#tabs-01-02" role="tab"
 data-td-tp-persist="阿里云 ack 集群" aria-controls="tabs-01-02" aria-selected="false">
 阿里云 ACK 集群
 &lt;/button>
 &lt;/li>
&lt;/ul>

&lt;div class="tab-content" id="tabs-1-content">
 &lt;div class="tab-body tab-pane fade"
 id="tabs-01-00" role="tabpanel" aria-labelled-by="tabs-01-00-tab" tabindex="1">
 
 &lt;/div>
 &lt;div class="tab-body tab-pane fade show active"
 id="tabs-01-01" role="tabpanel" aria-labelled-by="tabs-01-01-tab" tabindex="1">
 &lt;br/>
&lt;p>执行以下命令进行本地端口映射：&lt;/p></description></item></channel></rss>