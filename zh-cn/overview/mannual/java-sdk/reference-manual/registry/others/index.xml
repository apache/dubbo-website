<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>注册中心、服务发现与负载均衡 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/</link><description>Recent content in 注册中心、服务发现与负载均衡 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/index.xml" rel="self" type="application/rss+xml"/><item><title>Multicast</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/multicast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/multicast/</guid><description>Multicast 注册中心不需要启动任何中心节点，只要广播地址一样，就可以互相发现。
1 使用说明 &amp;lt;dubbo:registry address=&amp;#34;multicast://224.5.6.7:1234&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;multicast&amp;#34; address=&amp;#34;224.5.6.7:1234&amp;#34; /&amp;gt; 注意: 为了减少广播量，Dubbo 缺省使用单播发送提供者地址信息给消费者。 如果一个机器上同时启了多个消费者进程，消费者需声明 unicast=false，否则只会有一个消费者能收到消息; 当服务者和消费者运行在同一台机器上，消费者同样需要声明unicast=false，否则消费者无法收到消息，导致No provider available for the service异常：
&amp;lt;dubbo:application name=&amp;#34;demo-consumer&amp;#34;&amp;gt; &amp;lt;dubbo:parameter key=&amp;#34;unicast&amp;#34; value=&amp;#34;false&amp;#34; /&amp;gt; &amp;lt;/dubbo:application&amp;gt; 或
&amp;lt;dubbo:consumer&amp;gt; &amp;lt;dubbo:parameter key=&amp;#34;unicast&amp;#34; value=&amp;#34;false&amp;#34; /&amp;gt; &amp;lt;/dubbo:consumer&amp;gt; 2 工作原理 2.1 基本流程 提供方启动时广播自己的地址 消费方启动时广播订阅请求 提供方收到订阅请求时，单播自己的地址给订阅者，如果设置了 unicast=false，则广播给订阅者 消费方收到提供方地址时，连接该地址进行 RPC 调用。 2.2 使用限制 组播受网络结构限制，只适合小规模应用或开发阶段使用。组播地址段: 224.0.0.0 - 239.255.255.255</description></item><item><title>Consul</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/consul/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/consul/</guid><description>前置条件 了解 Dubbo 基本开发步骤 安装并启动 Consul 服务 使用说明 添加依赖 从 Dubbo3 开始，consul 注册中国适配已经不再内嵌在 Dubbo 中，使用前需要单独引入独立的模块。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo.extensions&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-registry-consul&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 基本配置 &amp;lt;dubbo:registry address=&amp;#34;redis://10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry address=&amp;#34;redis://10.20.153.10:6379?backup=10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;redis&amp;#34; address=&amp;#34;10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;redis&amp;#34; address=&amp;#34;10.20.153.10:6379,10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt; 使用场景 使用 Consul 作为共享注册中心实现，可用于 Dubbo 与 Spring Cloud 体系的互通或迁移</description></item><item><title>Etcd</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/etcd/</guid><description>前置条件 了解 Dubbo 基本开发步骤 安装并启动 Etcd 服务 使用说明 添加依赖 从 Dubbo3 开始，etcd 注册中心适配已经不再内嵌在 Dubbo 中，使用前需要单独引入独立的模块。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo.extensions&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-registry-etcd&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 基本配置 &amp;lt;dubbo:registry address=&amp;#34;etcd://10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry address=&amp;#34;etcd://10.20.153.10:6379?backup=10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;etcd&amp;#34; address=&amp;#34;10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;etcd&amp;#34; address=&amp;#34;10.20.153.10:6379,10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt;</description></item><item><title>Redis</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/others/redis/</guid><description>前置条件 了解 Dubbo 基本开发步骤 安装并启动 Redis 服务 使用说明 添加依赖 从 Dubbo3 开始，redis 注册中心适配已经不再内嵌在 Dubbo 中，使用前需要单独引入独立的模块。
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo.extensions&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-registry-redis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 基本配置 &amp;lt;dubbo:registry address=&amp;#34;redis://10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry address=&amp;#34;redis://10.20.153.10:6379?backup=10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;redis&amp;#34; address=&amp;#34;10.20.153.10:6379&amp;#34; /&amp;gt; 或
&amp;lt;dubbo:registry protocol=&amp;#34;redis&amp;#34; address=&amp;#34;10.20.153.10:6379,10.20.153.11:6379,10.20.153.12:6379&amp;#34; /&amp;gt; 其他配置项 可通过 &amp;lt;dubbo:registry group=&amp;quot;dubbo&amp;quot; /&amp;gt; 设置 redis 中 key 的前缀，缺省为 dubbo。 可通过 &amp;lt;dubbo:registry cluster=&amp;quot;replicate&amp;quot; /&amp;gt; 设置 redis 集群策略，缺省为 failover： failover: 只写入和读取任意一台，失败时重试另一台，需要服务器端自行配置数据同步 replicate: 在客户端同时写入所有服务器，只读取单台，服务器端不需要同步，注册中心集群增大，性能压力也会更大 工作原理 基于 Redis [^1] 实现的注册中心。
Redis 过期数据通过心跳的方式检测脏数据，服务器时间必须同步，并且对服务器有一定压力，否则过期检测会不准确
使用 Redis 的 Key/Map 结构存储数据结构：</description></item></channel></rss>