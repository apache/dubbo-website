<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>快速创建应用 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/</link><description>Recent content in 快速创建应用 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Boot</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/springboot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/springboot/</guid><description>Dubbo 提供了对 Spring 框架的完整支持，我们推荐使用官方提供的 dubbo-spring-boot-starter 高效开发 Dubbo 微服务应用。
创建项目 创建 Dubbo 应用最快捷的方式就是使用官方项目脚手架工具 - start.dubbo.apache.org 在线服务。它可以帮助开发者创建 Spring Boot 结构应用，自动管理 dubbo-spring-boot-starter 等依赖和必要配置。
另外，Jetbrain 官方也提供了 Apache Dubbo 项目插件，可用于快速创建 Dubbo Spring Boot 项目，能力与 start.dubbo.apache.org 对等，具体安装使用请查看 博客文章
dubbo-spring-boot-starter 在 快速开始 中，我们已经详细介绍了典型的 Dubbo Spring Boot 工程源码及其项目结构，不熟悉的开发者可以前往查看。
dubbo-spring-boot-starter 可为项目引入 dubbo 核心依赖，自动扫描 dubbo 相关配置与注解。
Maven 依赖 使用 Dubbo Spring Boot Starter，首先引入以下 Maven 依赖
&amp;lt;dependencyManagement&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.dubbo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dubbo-bom&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.0-beta.1&amp;lt;/version&amp;gt; &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt; &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;/dependencyManagement&amp;gt; 然后，在相应模块的 pom 中增加必要的 starter 依赖：</description></item><item><title>使用原生 API 开发 Dubbo 应用</title><link>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/mannual/java-sdk/tasks/develop/api/</guid><description>你可能已经注意到了，文档中大部分的功能、示例都是基于 Spring Boot 模式编写的，但 Spring Boot 或 Spring 仅仅是 Dubbo 适配的一种应用或者微服务开发模式。作为一款 RPC 框架，Dubbo 定义了一套完善的 API 接口，我们可以基于原生 API 开发 Dubbo 应用，纯 API 可以实现的业务场景包括：
轻量 RPC Server &amp;amp; Client，通常用于一些应用内、基础组件、中间件等内的简单远程调用场景 微服务应用，不依赖 Spring 的情况下，直接用 API 开发微服务 API 概览 public class Application { public static void main(String[] args) { DubboBootstrap.getInstance() .protocol(new ProtocolConfig(CommonConstants.TRIPLE, 50051)) .service(ServiceBuilder.newBuilder().ref(new DemoServiceImpl()).build()) .start() .await(); } } 以上是启动 Dubbo RPC Server 的一段代码示例，DubboBootstrap 实例代表一个 Dubbo 应用，是整个 Dubbo 应用的启动入口。在 DubboBootstrap 基础上，我们可以设置 protocol、service、registry、metrics 等来注册服务、连接注册中心等，这和我们在 Spring Boot 中调整 application.</description></item></channel></rss>