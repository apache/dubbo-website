<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>集成适配 on Apache Dubbo</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/</link><description>Recent content in 集成适配 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://dubbo.apache.org/zh-cn/overview/reference/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>Prometheus</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/prometheus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/prometheus/</guid><description>安装 你可以使用 Dubbo 社区提供的示例配置快速安装 Prometheus。
kubectl create -f https://raw.githubusercontent.com/apache/dubbo-kubernetes/master/deploy/kubernetes/prometheus.yaml 本安装仅适用于测试或体验使用，生产级别的安装请参考 Prometheus 官方安装文档。
执行端口映射 kubectl -n dubbo-system port-forward svc/prometheus-server 9090:9090，访问页面 http://localhost:9090，切换到 graph 视图。
Scrape 配置 Dubbo 的每个实例都会暴露一个 http 端口用于 Metrics 采集，Prometheus 通过 scraping 每个实例的 http 接口来采集统计数据。具体的 scraping 路径可以通过 Prometheus 配置文件进行调整，该文件控制 scraping 实例的端口、路径、TLS 设置等。
Kubernetes 注解约定 在 Kubernetes 部署模式下，使用官方社区维护的 Helm Charts 安装 Prometheus，Prometheus 服务可以自动识别包含 prometheus.io 注解的 Dubbo Pod 实例，并将它们列入 Scraping 实例列表。
Dubbo 官网给出的示例即是基于 prometheus.io 注解实现了 scraping target 地址的自动发现，具体注解配置可参见示例中的 Deployment 资源定义。
annotations: prometheus.io/scrape: &amp;#34;true&amp;#34; prometheus.</description></item><item><title>Grafana</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/grafana/</guid><description>Grafana 是一种开源的监控解决方案，可用于为 Dubbo 配置可视化仪表板，您可以使用 Grafana 来监控 Dubbo 集群的运行状况。
配置可视化控制面板 以下是 Dubbo 社区提供的默认指标面板，您配置好数据源并直接导入使用即可。如果默认面板不能满足要求，您还可以自定义 Grafana 面板。
Apache Dubbo Observability Dashboard： JVM (Micrometer) Dashboard： 您可以通过以下几种方式快速的导入 Grafana 监控面板。
方式一：Kubernetes 安装 你可以使用 Dubbo 社区提供的示例配置快速安装 Grafana，安装后的 Grafana 提供了社区默认指标面板视图。
kubectl create -f https://raw.githubusercontent.com/apache/dubbo-kubernetes/master/deploy/kubernetes/grafana.yaml 你可能需要端口映射获得访问地址 $ kubectl port-forward service/grafana 3000:3000，打开浏览器访问页面 http://localhost:3000。
获取登录信息
kubectl get secrets grafana -o jsonpath=&amp;#34;{.data.admin-user}&amp;#34; | base64 --decode ; echo &amp;amp;&amp;amp; kubectl get secrets grafana -o jsonpath=&amp;#34;{.data.admin-password}&amp;#34; | base64 --decode ; echo 方式二：向已经安装好的集群导入 dashboard 如果你已经有安装好的 Grafana 服务了，则还可以通过 Grafana 控制台的导入菜单 导入 dashboard。根据 Grafana 的要求，导入 dashboard 的过程中需要同时指定 Prometheus 数据源地址。</description></item><item><title>Skywalking</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/skywalking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/skywalking/</guid><description>安装 你可以使用 Dubbo 社区提供的示例配置快速安装 Skywalking。
kubectl create -f https://raw.githubusercontent.com/apache/dubbo-kubernetes/master/deploy/kubernetes/skywalking.yaml 本安装仅适用于测试或体验使用，生产级别的安装请参考 Skywalking 官方安装文档。</description></item><item><title>Zipkin</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/zipkin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/zipkin/</guid><description>安装 你可以使用 Dubbo 社区提供的示例配置快速安装 Zipkin。
kubectl create -f https://raw.githubusercontent.com/apache/dubbo-kubernetes/master/deploy/kubernetes/zipkin.yaml 本安装仅适用于测试或体验使用，生产级别的安装请参考 Zipkin 官方安装文档。</description></item><item><title>Nacos</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/nacos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/nacos/</guid><description>本文档讲解如何安装与配置 Nacos，涵盖本地、docker、kubernetes 等环境。以下仅为快速示例安装指南，如想搭建生产可用集群请参考 Nacos 官方文档。
本地下载 Nacos 依赖 Java 环境 来运行，目前支持 Linux、MacOS、Windows 等环境。
您可以 下载最新稳定版本 Nacos，解压缩二进制包：
unzip nacos-server-$version.zip cd nacos/bin #tar -xvf nacos-server-$version.tar.gz 启动命令 # Linux/Unix/Mac sh startup.sh -m standalone # Ubuntu bash startup.sh -m standalone # Windows startup.cmd -m standalone 验证 nacos 正常启动 通过浏览器访问以下链接打开控制台：http://127.0.0.1:8848/nacos/
docker 使用 docker 启动 nacos，请首先确保您已经在本地机器正确 下载页面 安装 docker。
docker run --name nacos-quick -e MODE=standalone -p 8849:8848 -d nacos/nacos-server:2.3.1 kubernetes 请参考 nacos-operator 了解如何部署 Nacos 到 Kubernetes 集群。</description></item><item><title>Higress</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/higress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/higress/</guid><description>本文档讲解如何安装与配置 Higress，涵盖本地、docker、kubernetes 等环境。以下仅为快速示例安装指南，如想搭建生产可用集群请参考 Higress 官方文档。
docker 使用 docker 启动 Higress，请首先确保您已经在本地机器正确 下载页面 安装 docker。
使用以下命令安装 Higress：
curl -fsSL https://higress.io/standalone/get-higress.sh | bash -s -- -a -c nacos://192.168.0.1:8848 --nacos-username=nacos --nacos-password=nacos 请将 192.168.0.1 替换为 Nacos 服务器的 IP（如果 Nacos 部署在本机，请不要使用如 localhost 或 127.0.0.1 的 Loopback 地址）。按需调整 &amp;ndash;nacos-username 和 &amp;ndash;nacos-password 的取值，如果 Nacos 服务未开启认证功能，则可以移除这两个参数。
注意 如果您还没有安装 nacos，请 参考文档完成安装。 如果您使用 Zookeeper 做服务发现，请修改对应的集群地址为 zookeeper 集群地址。 在浏览器中输入 http://127.0.0.1:8080 进入 Higress 控制台。
kubernetes 通过以下命令安装 Higress：
helm repo add higress.io https://higress.io/helm-charts helm install higress -n higress-system higress.</description></item><item><title>Zookeeper</title><link>https://dubbo.apache.org/zh-cn/overview/reference/integrations/zookeeper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh-cn/overview/reference/integrations/zookeeper/</guid><description>这篇文章讲解如何安装与配置 Zookeeper，涵盖本地、docker、kubernetes 等环境。以下仅为快速示例安装指南，如想搭建生产可用集群请参考 Zookeeper 官方文档。
本地下载 下载Zookeeper 请到 Apache Zookeeper 下载页面 下载最新版本的 zookeeper 发行包。
解压下载的 zookeeper 包：
tar -zxvf apache-zookeeper-3.8.3.tar.gz cd apache-zookeeper-3.8.3 启动 Zookeeper 在启动 zookeeper 之前，首先需要在根目录以下位置创建文件 conf/zoo.cfg：
tickTime=2000 clientPort=2181 admin.enableServer=false 以下是一些参数的详细解释：
tickTime : Zookeeper 用到的基本时间设置，tickTime 为心跳检测间隔， 2*tickTime 是最大 session 超时时间等（单位是毫秒 ms）。 clientPort : 监听端口，客户端可通过这个端口方案 zookeeper server admin.enableServer：运维端口，默认为 8080，建议关闭防止和 Spring Web 应用程序冲突 接下来，可以以 standalone 模式启动 Zookeeper 了：
bin/zkServer.sh start 测试连接到 ZooKeeper 运行以下命令，连接到刚刚启动的 zookeeper server：
$ bin/zkCli.sh -server 127.0.0.1:2181 连接成功后，可看到以下输出：
Connecting to localhost:2181 .</description></item></channel></rss>